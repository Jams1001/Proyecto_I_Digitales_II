$date
	Mon Oct  4 21:42:56 2021
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module testbench $end
$var wire 1 ! valid_out $end
$var wire 1 " valid_in $end
$var wire 32 # data_out [31:0] $end
$var wire 8 $ data_in [7:0] $end
$var wire 1 % clk_f $end
$var wire 1 & clk_4f $end
$scope module convertidor $end
$var wire 1 " valid_in $end
$var wire 8 ' data_in [7:0] $end
$var wire 1 % clk_f $end
$var wire 1 & clk_4f $end
$var reg 3 ( contador [2:0] $end
$var reg 32 ) data_out [31:0] $end
$var reg 1 ! valid_out $end
$upscope $end
$scope module generador_de_relojesINST $end
$var wire 1 * EN1 $end
$var wire 1 + EN2 $end
$var wire 1 , EN3 $end
$var wire 1 - EN4 $end
$var wire 1 . CLK8 $end
$var wire 1 % CLK4 $end
$var wire 1 / CLK32 $end
$var wire 1 0 CLK2 $end
$var wire 1 1 CLK16 $end
$var wire 1 & CLK $end
$scope module ff0 $end
$var wire 1 2 T $end
$var wire 1 & CLK $end
$var reg 1 0 Q $end
$upscope $end
$scope module ff1 $end
$var wire 1 * T $end
$var wire 1 & CLK $end
$var reg 1 % Q $end
$upscope $end
$scope module ff2 $end
$var wire 1 + T $end
$var wire 1 & CLK $end
$var reg 1 . Q $end
$upscope $end
$scope module ff3 $end
$var wire 1 , T $end
$var wire 1 & CLK $end
$var reg 1 1 Q $end
$upscope $end
$scope module ff4 $end
$var wire 1 - T $end
$var wire 1 & CLK $end
$var reg 1 / Q $end
$upscope $end
$upscope $end
$scope module tester1 $end
$var wire 1 % clk_f $end
$var wire 32 3 data_out [31:0] $end
$var wire 1 ! valid_out $end
$var reg 1 & clk_4f $end
$var reg 8 4 data_in [7:0] $end
$var reg 1 " valid_in $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx 4
bx 3
12
01
00
0/
0.
0-
0,
0+
0*
bx )
b0 (
bx '
0&
0%
bx $
bx #
x"
x!
$end
#5
1*
b11111111 $
b11111111 '
b11111111 4
1"
10
1&
#10
0&
#15
0*
1%
00
b11111111xxxxxxxxxxxxxxxxxxxxxxxx #
b11111111xxxxxxxxxxxxxxxxxxxxxxxx )
b11111111xxxxxxxxxxxxxxxxxxxxxxxx 3
1!
b1 (
1&
#20
0&
#25
1+
1*
b1111111111111111xxxxxxxxxxxxxxxx #
b1111111111111111xxxxxxxxxxxxxxxx )
b1111111111111111xxxxxxxxxxxxxxxx 3
10
b10 (
1&
#30
0&
#35
0+
0*
1.
0%
00
b111111111111111111111111xxxxxxxx #
b111111111111111111111111xxxxxxxx )
b111111111111111111111111xxxxxxxx 3
b11 (
1&
#40
0&
#45
1*
b11111111111111111111111111111111 #
b11111111111111111111111111111111 )
b11111111111111111111111111111111 3
b11011101 $
b11011101 '
b11011101 4
10
b0 (
1&
#50
0&
#55
0*
1%
00
b11011101111111111111111111111111 #
b11011101111111111111111111111111 )
b11011101111111111111111111111111 3
b1 (
1&
#60
0&
#65
1,
1+
1*
b11011101110111011111111111111111 #
b11011101110111011111111111111111 )
b11011101110111011111111111111111 3
10
b10 (
1&
#70
0&
#75
0,
0+
0*
11
0.
0%
00
b11011101110111011101110111111111 #
b11011101110111011101110111111111 )
b11011101110111011101110111111111 3
b11 (
1&
#80
0&
#85
1*
b11011101110111011101110111011101 #
b11011101110111011101110111011101 )
b11011101110111011101110111011101 3
b10101010 $
b10101010 '
b10101010 4
0"
10
b0 (
1&
#90
0&
#95
0*
1%
00
bx #
bx )
bx 3
0!
1&
#100
0&
#105
1+
1*
10
1&
#110
0&
#115
0+
0*
1.
0%
00
1&
#120
0&
#125
1*
b0 $
b0 '
b0 4
1"
10
1&
#130
0&
#135
0*
1%
00
b0xxxxxxxxxxxxxxxxxxxxxxxx #
b0xxxxxxxxxxxxxxxxxxxxxxxx )
b0xxxxxxxxxxxxxxxxxxxxxxxx 3
1!
b1 (
1&
#140
0&
#145
1-
1,
1+
1*
b0xxxxxxxxxxxxxxxx #
b0xxxxxxxxxxxxxxxx )
b0xxxxxxxxxxxxxxxx 3
10
b10 (
1&
#150
0&
#155
0-
0,
0+
0*
1/
01
0.
0%
00
b11 $
b11 '
b11 4
b0xxxxxxxx #
b0xxxxxxxx )
b0xxxxxxxx 3
b11 (
1&
#160
0&
#165
1*
b11 #
b11 )
b11 3
0"
10
b0 (
1&
#170
0&
#175
0*
1%
00
bx #
bx )
bx 3
0!
1&
#180
0&
#185
1+
1*
10
1&
#190
0&
#195
0+
0*
1.
0%
00
1&
#200
0&
#205
1*
10
1&
#210
0&
#215
0*
1%
00
1&
#220
0&
#225
1,
1+
1*
10
1&
#230
0&
#235
0,
0+
0*
11
0.
0%
00
1&
