/* Generated by Yosys 0.9 (git sha1 1979e0b) */

(* top =  1  *)
(* src = "ochoBit_32Bit.v:1" *)
module ochoBit_32Bit_estr(clk_4f, clk_f, data_in, valid_in, valid_out, data_out_estr);
  (* src = "ochoBit_32Bit.v:15" *)
  wire [2:0] _000_;
  (* src = "ochoBit_32Bit.v:15" *)
  wire [31:0] _001_;
  wire _002_;
  wire _003_;
  wire _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  wire _054_;
  wire _055_;
  wire _056_;
  wire _057_;
  wire _058_;
  wire _059_;
  wire _060_;
  wire _061_;
  wire _062_;
  wire _063_;
  wire _064_;
  wire _065_;
  wire _066_;
  wire _067_;
  wire _068_;
  wire _069_;
  wire _070_;
  wire _071_;
  wire _072_;
  wire _073_;
  wire _074_;
  wire _075_;
  wire _076_;
  wire _077_;
  wire _078_;
  wire _079_;
  wire _080_;
  wire _081_;
  wire _082_;
  wire _083_;
  wire _084_;
  wire _085_;
  wire _086_;
  wire _087_;
  wire _088_;
  wire _089_;
  wire _090_;
  wire _091_;
  wire _092_;
  wire _093_;
  wire _094_;
  wire _095_;
  wire _096_;
  wire _097_;
  wire _098_;
  wire _099_;
  wire _100_;
  wire _101_;
  wire _102_;
  wire _103_;
  wire _104_;
  wire _105_;
  wire _106_;
  wire _107_;
  wire _108_;
  wire _109_;
  wire _110_;
  wire _111_;
  wire _112_;
  wire _113_;
  wire _114_;
  wire _115_;
  wire _116_;
  wire _117_;
  wire _118_;
  wire _119_;
  wire _120_;
  wire _121_;
  wire _122_;
  wire _123_;
  wire _124_;
  wire _125_;
  wire _126_;
  wire _127_;
  wire _128_;
  wire _129_;
  (* src = "ochoBit_32Bit.v:1" *)
  input clk_4f;
  (* src = "ochoBit_32Bit.v:2" *)
  input clk_f;
  (* src = "ochoBit_32Bit.v:9" *)
  wire [2:0] contador;
  (* src = "ochoBit_32Bit.v:3" *)
  input [7:0] data_in;
  (* src = "ochoBit_32Bit.v:6" *)
  output [31:0] data_out_estr;
  (* src = "ochoBit_32Bit.v:4" *)
  input valid_in;
  (* src = "ochoBit_32Bit.v:5" *)
  output valid_out;
  NAND _130_ (
    .A(valid_in),
    .B(_039_),
    .Y(_040_)
  );
  NOR _131_ (
    .A(_038_),
    .B(_040_),
    .Y(_001_[5])
  );
  NOR _132_ (
    .A(data_out_estr[6]),
    .B(_022_),
    .Y(_041_)
  );
  NAND _133_ (
    .A(_120_),
    .B(_022_),
    .Y(_042_)
  );
  NAND _134_ (
    .A(valid_in),
    .B(_042_),
    .Y(_043_)
  );
  NOR _135_ (
    .A(_041_),
    .B(_043_),
    .Y(_001_[6])
  );
  NOR _136_ (
    .A(data_out_estr[7]),
    .B(_022_),
    .Y(_044_)
  );
  NAND _137_ (
    .A(_121_),
    .B(_022_),
    .Y(_045_)
  );
  NAND _138_ (
    .A(valid_in),
    .B(_045_),
    .Y(_046_)
  );
  NOR _139_ (
    .A(_044_),
    .B(_046_),
    .Y(_001_[7])
  );
  NOR _140_ (
    .A(_113_),
    .B(_123_),
    .Y(_047_)
  );
  NAND _141_ (
    .A(contador[1]),
    .B(_122_),
    .Y(_048_)
  );
  NOR _142_ (
    .A(data_out_estr[8]),
    .B(_047_),
    .Y(_049_)
  );
  NOR _143_ (
    .A(data_in[0]),
    .B(_048_),
    .Y(_050_)
  );
  NOT _144_ (
    .A(_050_),
    .Y(_051_)
  );
  NAND _145_ (
    .A(valid_in),
    .B(_051_),
    .Y(_052_)
  );
  NOR _146_ (
    .A(_049_),
    .B(_052_),
    .Y(_001_[8])
  );
  NOR _147_ (
    .A(data_out_estr[9]),
    .B(_047_),
    .Y(_053_)
  );
  NOR _148_ (
    .A(data_in[1]),
    .B(_048_),
    .Y(_054_)
  );
  NOT _149_ (
    .A(_054_),
    .Y(_055_)
  );
  NAND _150_ (
    .A(valid_in),
    .B(_055_),
    .Y(_056_)
  );
  NOR _151_ (
    .A(_053_),
    .B(_056_),
    .Y(_001_[9])
  );
  NOR _152_ (
    .A(data_out_estr[10]),
    .B(_047_),
    .Y(_057_)
  );
  NOR _153_ (
    .A(data_in[2]),
    .B(_048_),
    .Y(_058_)
  );
  NOT _154_ (
    .A(_058_),
    .Y(_059_)
  );
  NAND _155_ (
    .A(valid_in),
    .B(_059_),
    .Y(_060_)
  );
  NOR _156_ (
    .A(_057_),
    .B(_060_),
    .Y(_001_[10])
  );
  NOR _157_ (
    .A(data_out_estr[11]),
    .B(_047_),
    .Y(_061_)
  );
  NOR _158_ (
    .A(data_in[3]),
    .B(_048_),
    .Y(_062_)
  );
  NOT _159_ (
    .A(_062_),
    .Y(_063_)
  );
  NAND _160_ (
    .A(valid_in),
    .B(_063_),
    .Y(_064_)
  );
  NOR _161_ (
    .A(_061_),
    .B(_064_),
    .Y(_001_[11])
  );
  NOR _162_ (
    .A(data_out_estr[12]),
    .B(_047_),
    .Y(_065_)
  );
  NOR _163_ (
    .A(data_in[4]),
    .B(_048_),
    .Y(_066_)
  );
  NOT _164_ (
    .A(_066_),
    .Y(_067_)
  );
  NAND _165_ (
    .A(valid_in),
    .B(_067_),
    .Y(_068_)
  );
  NOR _166_ (
    .A(_065_),
    .B(_068_),
    .Y(_001_[12])
  );
  NOR _167_ (
    .A(data_out_estr[13]),
    .B(_047_),
    .Y(_069_)
  );
  NOR _168_ (
    .A(data_in[5]),
    .B(_048_),
    .Y(_070_)
  );
  NOT _169_ (
    .A(_070_),
    .Y(_071_)
  );
  NAND _170_ (
    .A(valid_in),
    .B(_071_),
    .Y(_072_)
  );
  NOR _171_ (
    .A(_069_),
    .B(_072_),
    .Y(_001_[13])
  );
  NOR _172_ (
    .A(data_out_estr[14]),
    .B(_047_),
    .Y(_073_)
  );
  NOR _173_ (
    .A(data_in[6]),
    .B(_048_),
    .Y(_074_)
  );
  NOT _174_ (
    .A(_074_),
    .Y(_075_)
  );
  NAND _175_ (
    .A(valid_in),
    .B(_075_),
    .Y(_076_)
  );
  NOR _176_ (
    .A(_073_),
    .B(_076_),
    .Y(_001_[14])
  );
  NOR _177_ (
    .A(data_out_estr[15]),
    .B(_047_),
    .Y(_077_)
  );
  NOR _178_ (
    .A(data_in[7]),
    .B(_048_),
    .Y(_078_)
  );
  NOT _179_ (
    .A(_078_),
    .Y(_079_)
  );
  NAND _180_ (
    .A(valid_in),
    .B(_079_),
    .Y(_080_)
  );
  NOR _181_ (
    .A(_077_),
    .B(_080_),
    .Y(_001_[15])
  );
  NOR _182_ (
    .A(contador[1]),
    .B(_021_),
    .Y(_081_)
  );
  NOR _183_ (
    .A(data_out_estr[16]),
    .B(_081_),
    .Y(_082_)
  );
  NAND _184_ (
    .A(_114_),
    .B(_081_),
    .Y(_083_)
  );
  NAND _185_ (
    .A(valid_in),
    .B(_083_),
    .Y(_084_)
  );
  NOR _186_ (
    .A(_082_),
    .B(_084_),
    .Y(_001_[16])
  );
  NOR _187_ (
    .A(data_out_estr[17]),
    .B(_081_),
    .Y(_085_)
  );
  NAND _188_ (
    .A(_115_),
    .B(_081_),
    .Y(_086_)
  );
  NAND _189_ (
    .A(valid_in),
    .B(_086_),
    .Y(_087_)
  );
  NOR _190_ (
    .A(_085_),
    .B(_087_),
    .Y(_001_[17])
  );
  NOR _191_ (
    .A(data_out_estr[18]),
    .B(_081_),
    .Y(_088_)
  );
  NAND _192_ (
    .A(_116_),
    .B(_081_),
    .Y(_089_)
  );
  NAND _193_ (
    .A(valid_in),
    .B(_089_),
    .Y(_090_)
  );
  NOR _194_ (
    .A(_088_),
    .B(_090_),
    .Y(_001_[18])
  );
  NOR _195_ (
    .A(data_out_estr[19]),
    .B(_081_),
    .Y(_091_)
  );
  NAND _196_ (
    .A(_117_),
    .B(_081_),
    .Y(_092_)
  );
  NAND _197_ (
    .A(valid_in),
    .B(_092_),
    .Y(_093_)
  );
  NOR _198_ (
    .A(_091_),
    .B(_093_),
    .Y(_001_[19])
  );
  NOR _199_ (
    .A(data_out_estr[20]),
    .B(_081_),
    .Y(_094_)
  );
  NAND _200_ (
    .A(_118_),
    .B(_081_),
    .Y(_095_)
  );
  NAND _201_ (
    .A(valid_in),
    .B(_095_),
    .Y(_096_)
  );
  NOR _202_ (
    .A(_094_),
    .B(_096_),
    .Y(_001_[20])
  );
  NOR _203_ (
    .A(data_out_estr[21]),
    .B(_081_),
    .Y(_097_)
  );
  NAND _204_ (
    .A(_119_),
    .B(_081_),
    .Y(_098_)
  );
  NAND _205_ (
    .A(valid_in),
    .B(_098_),
    .Y(_099_)
  );
  NOR _206_ (
    .A(_097_),
    .B(_099_),
    .Y(_001_[21])
  );
  NOR _207_ (
    .A(data_out_estr[22]),
    .B(_081_),
    .Y(_100_)
  );
  NAND _208_ (
    .A(_120_),
    .B(_081_),
    .Y(_101_)
  );
  NAND _209_ (
    .A(valid_in),
    .B(_101_),
    .Y(_102_)
  );
  NOR _210_ (
    .A(_100_),
    .B(_102_),
    .Y(_001_[22])
  );
  NOR _211_ (
    .A(data_out_estr[23]),
    .B(_081_),
    .Y(_103_)
  );
  NAND _212_ (
    .A(_121_),
    .B(_081_),
    .Y(_104_)
  );
  NAND _213_ (
    .A(valid_in),
    .B(_104_),
    .Y(_105_)
  );
  NOR _214_ (
    .A(_103_),
    .B(_105_),
    .Y(_001_[23])
  );
  NOR _215_ (
    .A(_111_),
    .B(contador[0]),
    .Y(_106_)
  );
  NAND _216_ (
    .A(valid_in),
    .B(_021_),
    .Y(_107_)
  );
  NOR _217_ (
    .A(_106_),
    .B(_107_),
    .Y(_000_[0])
  );
  NAND _218_ (
    .A(_113_),
    .B(_021_),
    .Y(_108_)
  );
  NAND _219_ (
    .A(valid_in),
    .B(_108_),
    .Y(_109_)
  );
  NOR _220_ (
    .A(_022_),
    .B(_109_),
    .Y(_000_[1])
  );
  NAND _221_ (
    .A(contador[2]),
    .B(valid_in),
    .Y(_110_)
  );
  NOT _222_ (
    .A(_110_),
    .Y(_000_[2])
  );
  NOT _223_ (
    .A(contador[2]),
    .Y(_111_)
  );
  NOT _224_ (
    .A(contador[0]),
    .Y(_112_)
  );
  NOT _225_ (
    .A(contador[1]),
    .Y(_113_)
  );
  NOT _226_ (
    .A(data_in[0]),
    .Y(_114_)
  );
  NOT _227_ (
    .A(data_in[1]),
    .Y(_115_)
  );
  NOT _228_ (
    .A(data_in[2]),
    .Y(_116_)
  );
  NOT _229_ (
    .A(data_in[3]),
    .Y(_117_)
  );
  NOT _230_ (
    .A(data_in[4]),
    .Y(_118_)
  );
  NOT _231_ (
    .A(data_in[5]),
    .Y(_119_)
  );
  NOT _232_ (
    .A(data_in[6]),
    .Y(_120_)
  );
  NOT _233_ (
    .A(data_in[7]),
    .Y(_121_)
  );
  NOR _234_ (
    .A(contador[2]),
    .B(contador[0]),
    .Y(_122_)
  );
  NAND _235_ (
    .A(_111_),
    .B(_112_),
    .Y(_123_)
  );
  NOR _236_ (
    .A(contador[1]),
    .B(_123_),
    .Y(_124_)
  );
  NOR _237_ (
    .A(data_out_estr[24]),
    .B(_124_),
    .Y(_125_)
  );
  NAND _238_ (
    .A(_114_),
    .B(_124_),
    .Y(_126_)
  );
  NAND _239_ (
    .A(valid_in),
    .B(_126_),
    .Y(_127_)
  );
  NOR _240_ (
    .A(_125_),
    .B(_127_),
    .Y(_001_[24])
  );
  NOR _241_ (
    .A(data_out_estr[25]),
    .B(_124_),
    .Y(_128_)
  );
  NAND _242_ (
    .A(_115_),
    .B(_124_),
    .Y(_129_)
  );
  NAND _243_ (
    .A(valid_in),
    .B(_129_),
    .Y(_002_)
  );
  NOR _244_ (
    .A(_128_),
    .B(_002_),
    .Y(_001_[25])
  );
  NOR _245_ (
    .A(data_out_estr[26]),
    .B(_124_),
    .Y(_003_)
  );
  NAND _246_ (
    .A(_116_),
    .B(_124_),
    .Y(_004_)
  );
  NAND _247_ (
    .A(valid_in),
    .B(_004_),
    .Y(_005_)
  );
  NOR _248_ (
    .A(_003_),
    .B(_005_),
    .Y(_001_[26])
  );
  NOR _249_ (
    .A(data_out_estr[27]),
    .B(_124_),
    .Y(_006_)
  );
  NAND _250_ (
    .A(_117_),
    .B(_124_),
    .Y(_007_)
  );
  NAND _251_ (
    .A(valid_in),
    .B(_007_),
    .Y(_008_)
  );
  NOR _252_ (
    .A(_006_),
    .B(_008_),
    .Y(_001_[27])
  );
  NOR _253_ (
    .A(data_out_estr[28]),
    .B(_124_),
    .Y(_009_)
  );
  NAND _254_ (
    .A(_118_),
    .B(_124_),
    .Y(_010_)
  );
  NAND _255_ (
    .A(valid_in),
    .B(_010_),
    .Y(_011_)
  );
  NOR _256_ (
    .A(_009_),
    .B(_011_),
    .Y(_001_[28])
  );
  NOR _257_ (
    .A(data_out_estr[29]),
    .B(_124_),
    .Y(_012_)
  );
  NAND _258_ (
    .A(_119_),
    .B(_124_),
    .Y(_013_)
  );
  NAND _259_ (
    .A(valid_in),
    .B(_013_),
    .Y(_014_)
  );
  NOR _260_ (
    .A(_012_),
    .B(_014_),
    .Y(_001_[29])
  );
  NOR _261_ (
    .A(data_out_estr[30]),
    .B(_124_),
    .Y(_015_)
  );
  NAND _262_ (
    .A(_120_),
    .B(_124_),
    .Y(_016_)
  );
  NAND _263_ (
    .A(valid_in),
    .B(_016_),
    .Y(_017_)
  );
  NOR _264_ (
    .A(_015_),
    .B(_017_),
    .Y(_001_[30])
  );
  NOR _265_ (
    .A(data_out_estr[31]),
    .B(_124_),
    .Y(_018_)
  );
  NAND _266_ (
    .A(_121_),
    .B(_124_),
    .Y(_019_)
  );
  NAND _267_ (
    .A(valid_in),
    .B(_019_),
    .Y(_020_)
  );
  NOR _268_ (
    .A(_018_),
    .B(_020_),
    .Y(_001_[31])
  );
  NAND _269_ (
    .A(_111_),
    .B(contador[0]),
    .Y(_021_)
  );
  NOR _270_ (
    .A(_113_),
    .B(_021_),
    .Y(_022_)
  );
  NOR _271_ (
    .A(data_out_estr[0]),
    .B(_022_),
    .Y(_023_)
  );
  NAND _272_ (
    .A(_114_),
    .B(_022_),
    .Y(_024_)
  );
  NAND _273_ (
    .A(valid_in),
    .B(_024_),
    .Y(_025_)
  );
  NOR _274_ (
    .A(_023_),
    .B(_025_),
    .Y(_001_[0])
  );
  NOR _275_ (
    .A(data_out_estr[1]),
    .B(_022_),
    .Y(_026_)
  );
  NAND _276_ (
    .A(_115_),
    .B(_022_),
    .Y(_027_)
  );
  NAND _277_ (
    .A(valid_in),
    .B(_027_),
    .Y(_028_)
  );
  NOR _278_ (
    .A(_026_),
    .B(_028_),
    .Y(_001_[1])
  );
  NOR _279_ (
    .A(data_out_estr[2]),
    .B(_022_),
    .Y(_029_)
  );
  NAND _280_ (
    .A(_116_),
    .B(_022_),
    .Y(_030_)
  );
  NAND _281_ (
    .A(valid_in),
    .B(_030_),
    .Y(_031_)
  );
  NOR _282_ (
    .A(_029_),
    .B(_031_),
    .Y(_001_[2])
  );
  NOR _283_ (
    .A(data_out_estr[3]),
    .B(_022_),
    .Y(_032_)
  );
  NAND _284_ (
    .A(_117_),
    .B(_022_),
    .Y(_033_)
  );
  NAND _285_ (
    .A(valid_in),
    .B(_033_),
    .Y(_034_)
  );
  NOR _286_ (
    .A(_032_),
    .B(_034_),
    .Y(_001_[3])
  );
  NOR _287_ (
    .A(data_out_estr[4]),
    .B(_022_),
    .Y(_035_)
  );
  NAND _288_ (
    .A(_118_),
    .B(_022_),
    .Y(_036_)
  );
  NAND _289_ (
    .A(valid_in),
    .B(_036_),
    .Y(_037_)
  );
  NOR _290_ (
    .A(_035_),
    .B(_037_),
    .Y(_001_[4])
  );
  NOR _291_ (
    .A(data_out_estr[5]),
    .B(_022_),
    .Y(_038_)
  );
  NAND _292_ (
    .A(_119_),
    .B(_022_),
    .Y(_039_)
  );
  (* src = "ochoBit_32Bit.v:15" *)
  DFF _293_ (
    .C(clk_4f),
    .D(_000_[0]),
    .Q(contador[0])
  );
  (* src = "ochoBit_32Bit.v:15" *)
  DFF _294_ (
    .C(clk_4f),
    .D(_000_[1]),
    .Q(contador[1])
  );
  (* src = "ochoBit_32Bit.v:15" *)
  DFF _295_ (
    .C(clk_4f),
    .D(_000_[2]),
    .Q(contador[2])
  );
  (* src = "ochoBit_32Bit.v:15" *)
  DFF _296_ (
    .C(clk_4f),
    .D(valid_in),
    .Q(valid_out)
  );
  (* src = "ochoBit_32Bit.v:15" *)
  DFF _297_ (
    .C(clk_4f),
    .D(_001_[0]),
    .Q(data_out_estr[0])
  );
  (* src = "ochoBit_32Bit.v:15" *)
  DFF _298_ (
    .C(clk_4f),
    .D(_001_[1]),
    .Q(data_out_estr[1])
  );
  (* src = "ochoBit_32Bit.v:15" *)
  DFF _299_ (
    .C(clk_4f),
    .D(_001_[2]),
    .Q(data_out_estr[2])
  );
  (* src = "ochoBit_32Bit.v:15" *)
  DFF _300_ (
    .C(clk_4f),
    .D(_001_[3]),
    .Q(data_out_estr[3])
  );
  (* src = "ochoBit_32Bit.v:15" *)
  DFF _301_ (
    .C(clk_4f),
    .D(_001_[4]),
    .Q(data_out_estr[4])
  );
  (* src = "ochoBit_32Bit.v:15" *)
  DFF _302_ (
    .C(clk_4f),
    .D(_001_[5]),
    .Q(data_out_estr[5])
  );
  (* src = "ochoBit_32Bit.v:15" *)
  DFF _303_ (
    .C(clk_4f),
    .D(_001_[6]),
    .Q(data_out_estr[6])
  );
  (* src = "ochoBit_32Bit.v:15" *)
  DFF _304_ (
    .C(clk_4f),
    .D(_001_[7]),
    .Q(data_out_estr[7])
  );
  (* src = "ochoBit_32Bit.v:15" *)
  DFF _305_ (
    .C(clk_4f),
    .D(_001_[8]),
    .Q(data_out_estr[8])
  );
  (* src = "ochoBit_32Bit.v:15" *)
  DFF _306_ (
    .C(clk_4f),
    .D(_001_[9]),
    .Q(data_out_estr[9])
  );
  (* src = "ochoBit_32Bit.v:15" *)
  DFF _307_ (
    .C(clk_4f),
    .D(_001_[10]),
    .Q(data_out_estr[10])
  );
  (* src = "ochoBit_32Bit.v:15" *)
  DFF _308_ (
    .C(clk_4f),
    .D(_001_[11]),
    .Q(data_out_estr[11])
  );
  (* src = "ochoBit_32Bit.v:15" *)
  DFF _309_ (
    .C(clk_4f),
    .D(_001_[12]),
    .Q(data_out_estr[12])
  );
  (* src = "ochoBit_32Bit.v:15" *)
  DFF _310_ (
    .C(clk_4f),
    .D(_001_[13]),
    .Q(data_out_estr[13])
  );
  (* src = "ochoBit_32Bit.v:15" *)
  DFF _311_ (
    .C(clk_4f),
    .D(_001_[14]),
    .Q(data_out_estr[14])
  );
  (* src = "ochoBit_32Bit.v:15" *)
  DFF _312_ (
    .C(clk_4f),
    .D(_001_[15]),
    .Q(data_out_estr[15])
  );
  (* src = "ochoBit_32Bit.v:15" *)
  DFF _313_ (
    .C(clk_4f),
    .D(_001_[16]),
    .Q(data_out_estr[16])
  );
  (* src = "ochoBit_32Bit.v:15" *)
  DFF _314_ (
    .C(clk_4f),
    .D(_001_[17]),
    .Q(data_out_estr[17])
  );
  (* src = "ochoBit_32Bit.v:15" *)
  DFF _315_ (
    .C(clk_4f),
    .D(_001_[18]),
    .Q(data_out_estr[18])
  );
  (* src = "ochoBit_32Bit.v:15" *)
  DFF _316_ (
    .C(clk_4f),
    .D(_001_[19]),
    .Q(data_out_estr[19])
  );
  (* src = "ochoBit_32Bit.v:15" *)
  DFF _317_ (
    .C(clk_4f),
    .D(_001_[20]),
    .Q(data_out_estr[20])
  );
  (* src = "ochoBit_32Bit.v:15" *)
  DFF _318_ (
    .C(clk_4f),
    .D(_001_[21]),
    .Q(data_out_estr[21])
  );
  (* src = "ochoBit_32Bit.v:15" *)
  DFF _319_ (
    .C(clk_4f),
    .D(_001_[22]),
    .Q(data_out_estr[22])
  );
  (* src = "ochoBit_32Bit.v:15" *)
  DFF _320_ (
    .C(clk_4f),
    .D(_001_[23]),
    .Q(data_out_estr[23])
  );
  (* src = "ochoBit_32Bit.v:15" *)
  DFF _321_ (
    .C(clk_4f),
    .D(_001_[24]),
    .Q(data_out_estr[24])
  );
  (* src = "ochoBit_32Bit.v:15" *)
  DFF _322_ (
    .C(clk_4f),
    .D(_001_[25]),
    .Q(data_out_estr[25])
  );
  (* src = "ochoBit_32Bit.v:15" *)
  DFF _323_ (
    .C(clk_4f),
    .D(_001_[26]),
    .Q(data_out_estr[26])
  );
  (* src = "ochoBit_32Bit.v:15" *)
  DFF _324_ (
    .C(clk_4f),
    .D(_001_[27]),
    .Q(data_out_estr[27])
  );
  (* src = "ochoBit_32Bit.v:15" *)
  DFF _325_ (
    .C(clk_4f),
    .D(_001_[28]),
    .Q(data_out_estr[28])
  );
  (* src = "ochoBit_32Bit.v:15" *)
  DFF _326_ (
    .C(clk_4f),
    .D(_001_[29]),
    .Q(data_out_estr[29])
  );
  (* src = "ochoBit_32Bit.v:15" *)
  DFF _327_ (
    .C(clk_4f),
    .D(_001_[30]),
    .Q(data_out_estr[30])
  );
  (* src = "ochoBit_32Bit.v:15" *)
  DFF _328_ (
    .C(clk_4f),
    .D(_001_[31]),
    .Q(data_out_estr[31])
  );
endmodule
