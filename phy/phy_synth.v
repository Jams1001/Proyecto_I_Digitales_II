/* Generated by Yosys 0.9 (git sha1 1979e0b) */

(* src = "conv_32b_8b_synth.v:1" *)
module conv_32b_8b_synth(clk_4f, clk_f, data_in, valid_in, valid_out, data_out);
  (* src = "conv_32b_8b_synth.v:17" *)
  wire [2:0] _000_;
  (* src = "conv_32b_8b_synth.v:17" *)
  wire [7:0] _001_;
  (* src = "conv_32b_8b_synth.v:17" *)
  wire [2:0] _002_;
  (* src = "conv_32b_8b_synth.v:17" *)
  wire [2:0] _003_;
  (* src = "conv_32b_8b_synth.v:17" *)
  wire [2:0] _004_;
  (* src = "conv_32b_8b_synth.v:17" *)
  wire [2:0] _005_;
  (* src = "conv_32b_8b_synth.v:23" *)
  (* unused_bits = "3" *)
  wire [31:0] _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire [2:0] _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire [7:0] _016_;
  wire [7:0] _017_;
  wire [7:0] _018_;
  wire [7:0] _019_;
  (* src = "conv_32b_8b_synth.v:33|paralelo_serial_synth.v:54|<techmap.v>:260|<techmap.v>:203" *)
  (* unused_bits = "2" *)
  wire [31:0] _020_;
  (* src = "conv_32b_8b_synth.v:1" *)
  input clk_4f;
  (* src = "conv_32b_8b_synth.v:2" *)
  input clk_f;
  (* src = "conv_32b_8b_synth.v:8" *)
  reg [2:0] contador;
  (* src = "conv_32b_8b_synth.v:3" *)
  input [31:0] data_in;
  (* src = "conv_32b_8b_synth.v:6" *)
  output [7:0] data_out;
  reg [7:0] data_out;
  (* src = "conv_32b_8b_synth.v:4" *)
  input valid_in;
  (* src = "conv_32b_8b_synth.v:5" *)
  output valid_out;
  reg valid_out;
  assign _007_ = _006_[0] |(* src = "conv_32b_8b_synth.v:26" *)  contador[1];
  assign _013_ = _007_ |(* src = "conv_32b_8b_synth.v:26" *)  contador[2];
  assign _008_ = contador[0] |(* src = "conv_32b_8b_synth.v:31" *)  _012_[1];
  assign _014_ = _008_ |(* src = "conv_32b_8b_synth.v:31" *)  contador[2];
  assign _009_ = _006_[0] |(* src = "conv_32b_8b_synth.v:36" *)  _012_[1];
  assign _015_ = _009_ |(* src = "conv_32b_8b_synth.v:36" *)  contador[2];
  assign _010_ = contador[0] |(* src = "conv_32b_8b_synth.v:21" *)  contador[1];
  assign _011_ = _010_ |(* src = "conv_32b_8b_synth.v:21" *)  contador[2];
  assign _005_[0] = _015_ ? (* src = "conv_32b_8b_synth.v:36" *) contador[0] : 1'h0;
  assign _005_[1] = _015_ ? (* src = "conv_32b_8b_synth.v:36" *) contador[1] : 1'h0;
  assign _005_[2] = _015_ ? (* src = "conv_32b_8b_synth.v:36" *) contador[2] : 1'h0;
  assign _004_[0] = _014_ ? (* src = "conv_32b_8b_synth.v:31" *) _005_[0] : _006_[0];
  assign _004_[1] = _014_ ? (* src = "conv_32b_8b_synth.v:31" *) _005_[1] : _006_[1];
  assign _004_[2] = _014_ ? (* src = "conv_32b_8b_synth.v:31" *) _005_[2] : _006_[2];
  assign _003_[0] = _013_ ? (* src = "conv_32b_8b_synth.v:26" *) _004_[0] : _006_[0];
  assign _003_[1] = _013_ ? (* src = "conv_32b_8b_synth.v:26" *) _004_[1] : _006_[1];
  assign _003_[2] = _013_ ? (* src = "conv_32b_8b_synth.v:26" *) _004_[2] : _006_[2];
  assign _000_[0] = valid_in ? (* src = "conv_32b_8b_synth.v:19" *) _002_[0] : 1'h0;
  assign _000_[1] = valid_in ? (* src = "conv_32b_8b_synth.v:19" *) _002_[1] : 1'h0;
  assign _000_[2] = valid_in ? (* src = "conv_32b_8b_synth.v:19" *) _002_[2] : 1'h0;
  assign _002_[0] = _011_ ? (* src = "conv_32b_8b_synth.v:21" *) _003_[0] : _006_[0];
  assign _002_[1] = _011_ ? (* src = "conv_32b_8b_synth.v:21" *) _003_[1] : _006_[1];
  assign _002_[2] = _011_ ? (* src = "conv_32b_8b_synth.v:21" *) _003_[2] : _006_[2];
  assign _018_[0] = _013_ ? (* src = "conv_32b_8b_synth.v:26" *) _017_[0] : data_in[16];
  assign _018_[1] = _013_ ? (* src = "conv_32b_8b_synth.v:26" *) _017_[1] : data_in[17];
  assign _018_[2] = _013_ ? (* src = "conv_32b_8b_synth.v:26" *) _017_[2] : data_in[18];
  assign _018_[3] = _013_ ? (* src = "conv_32b_8b_synth.v:26" *) _017_[3] : data_in[19];
  assign _018_[4] = _013_ ? (* src = "conv_32b_8b_synth.v:26" *) _017_[4] : data_in[20];
  assign _018_[5] = _013_ ? (* src = "conv_32b_8b_synth.v:26" *) _017_[5] : data_in[21];
  assign _018_[6] = _013_ ? (* src = "conv_32b_8b_synth.v:26" *) _017_[6] : data_in[22];
  assign _018_[7] = _013_ ? (* src = "conv_32b_8b_synth.v:26" *) _017_[7] : data_in[23];
  assign _016_[0] = _015_ ? (* src = "conv_32b_8b_synth.v:36" *) data_out[0] : data_in[0];
  assign _016_[1] = _015_ ? (* src = "conv_32b_8b_synth.v:36" *) data_out[1] : data_in[1];
  assign _016_[2] = _015_ ? (* src = "conv_32b_8b_synth.v:36" *) data_out[2] : data_in[2];
  assign _016_[3] = _015_ ? (* src = "conv_32b_8b_synth.v:36" *) data_out[3] : data_in[3];
  assign _016_[4] = _015_ ? (* src = "conv_32b_8b_synth.v:36" *) data_out[4] : data_in[4];
  assign _016_[5] = _015_ ? (* src = "conv_32b_8b_synth.v:36" *) data_out[5] : data_in[5];
  assign _016_[6] = _015_ ? (* src = "conv_32b_8b_synth.v:36" *) data_out[6] : data_in[6];
  assign _016_[7] = _015_ ? (* src = "conv_32b_8b_synth.v:36" *) data_out[7] : data_in[7];
  assign _017_[0] = _014_ ? (* src = "conv_32b_8b_synth.v:31" *) _016_[0] : data_in[8];
  assign _017_[1] = _014_ ? (* src = "conv_32b_8b_synth.v:31" *) _016_[1] : data_in[9];
  assign _017_[2] = _014_ ? (* src = "conv_32b_8b_synth.v:31" *) _016_[2] : data_in[10];
  assign _017_[3] = _014_ ? (* src = "conv_32b_8b_synth.v:31" *) _016_[3] : data_in[11];
  assign _017_[4] = _014_ ? (* src = "conv_32b_8b_synth.v:31" *) _016_[4] : data_in[12];
  assign _017_[5] = _014_ ? (* src = "conv_32b_8b_synth.v:31" *) _016_[5] : data_in[13];
  assign _017_[6] = _014_ ? (* src = "conv_32b_8b_synth.v:31" *) _016_[6] : data_in[14];
  assign _017_[7] = _014_ ? (* src = "conv_32b_8b_synth.v:31" *) _016_[7] : data_in[15];
  assign _019_[0] = _011_ ? (* src = "conv_32b_8b_synth.v:21" *) _018_[0] : data_in[24];
  assign _019_[1] = _011_ ? (* src = "conv_32b_8b_synth.v:21" *) _018_[1] : data_in[25];
  assign _019_[2] = _011_ ? (* src = "conv_32b_8b_synth.v:21" *) _018_[2] : data_in[26];
  assign _019_[3] = _011_ ? (* src = "conv_32b_8b_synth.v:21" *) _018_[3] : data_in[27];
  assign _019_[4] = _011_ ? (* src = "conv_32b_8b_synth.v:21" *) _018_[4] : data_in[28];
  assign _019_[5] = _011_ ? (* src = "conv_32b_8b_synth.v:21" *) _018_[5] : data_in[29];
  assign _019_[6] = _011_ ? (* src = "conv_32b_8b_synth.v:21" *) _018_[6] : data_in[30];
  assign _019_[7] = _011_ ? (* src = "conv_32b_8b_synth.v:21" *) _018_[7] : data_in[31];
  assign _001_[0] = valid_in ? (* src = "conv_32b_8b_synth.v:19" *) _019_[0] : 1'hx;
  assign _001_[1] = valid_in ? (* src = "conv_32b_8b_synth.v:19" *) _019_[1] : 1'hx;
  assign _001_[2] = valid_in ? (* src = "conv_32b_8b_synth.v:19" *) _019_[2] : 1'hx;
  assign _001_[3] = valid_in ? (* src = "conv_32b_8b_synth.v:19" *) _019_[3] : 1'hx;
  assign _001_[4] = valid_in ? (* src = "conv_32b_8b_synth.v:19" *) _019_[4] : 1'hx;
  assign _001_[5] = valid_in ? (* src = "conv_32b_8b_synth.v:19" *) _019_[5] : 1'hx;
  assign _001_[6] = valid_in ? (* src = "conv_32b_8b_synth.v:19" *) _019_[6] : 1'hx;
  assign _001_[7] = valid_in ? (* src = "conv_32b_8b_synth.v:19" *) _019_[7] : 1'hx;
  (* src = "conv_32b_8b_synth.v:17" *)
  always @(posedge clk_4f)
      data_out[0] <= _001_[0];
  (* src = "conv_32b_8b_synth.v:17" *)
  always @(posedge clk_4f)
      data_out[1] <= _001_[1];
  (* src = "conv_32b_8b_synth.v:17" *)
  always @(posedge clk_4f)
      data_out[2] <= _001_[2];
  (* src = "conv_32b_8b_synth.v:17" *)
  always @(posedge clk_4f)
      data_out[3] <= _001_[3];
  (* src = "conv_32b_8b_synth.v:17" *)
  always @(posedge clk_4f)
      data_out[4] <= _001_[4];
  (* src = "conv_32b_8b_synth.v:17" *)
  always @(posedge clk_4f)
      data_out[5] <= _001_[5];
  (* src = "conv_32b_8b_synth.v:17" *)
  always @(posedge clk_4f)
      data_out[6] <= _001_[6];
  (* src = "conv_32b_8b_synth.v:17" *)
  always @(posedge clk_4f)
      data_out[7] <= _001_[7];
  (* src = "conv_32b_8b_synth.v:17" *)
  always @(posedge clk_4f)
      valid_out <= valid_in;
  (* src = "conv_32b_8b_synth.v:17" *)
  always @(posedge clk_4f)
      contador[0] <= _000_[0];
  (* src = "conv_32b_8b_synth.v:17" *)
  always @(posedge clk_4f)
      contador[1] <= _000_[1];
  (* src = "conv_32b_8b_synth.v:17" *)
  always @(posedge clk_4f)
      contador[2] <= _000_[2];
  assign _006_[0] = contador[0] ^(* src = "conv_32b_8b_synth.v:36" *)  1'h1;
  assign _012_[1] = contador[1] ^(* src = "conv_32b_8b_synth.v:36" *)  1'h1;
  assign _006_[1] = contador[1] ^(* src = "conv_32b_8b_synth.v:33|paralelo_serial_synth.v:54|<techmap.v>:263" *)  contador[0];
  assign _006_[2] = contador[2] ^(* src = "conv_32b_8b_synth.v:33|paralelo_serial_synth.v:54|<techmap.v>:263" *)  _020_[1];
  assign _020_[1] = contador[1] &(* src = "conv_32b_8b_synth.v:33|paralelo_serial_synth.v:54|<techmap.v>:260|<techmap.v>:221" *)  contador[0];
  assign _006_[31:4] = 28'h0000000;
  assign { _012_[2], _012_[0] } = { contador[2], contador[0] };
  assign { _020_[31:2], _020_[0] } = { 29'h00000000, _006_[3], contador[0] };
endmodule

(* src = "ochoBit_32Bit_synth.v:1" *)
module ochoBit_32Bit_synth(clk_4f, clk_f, data_in, valid_in, valid_out, data_out);
  (* src = "ochoBit_32Bit_synth.v:15" *)
  wire [1:0] _000_;
  (* src = "ochoBit_32Bit_synth.v:15" *)
  wire [31:0] _001_;
  (* src = "ochoBit_32Bit_synth.v:15" *)
  wire _002_;
  (* src = "ochoBit_32Bit_synth.v:15" *)
  wire [1:0] _003_;
  (* src = "ochoBit_32Bit_synth.v:15" *)
  wire [1:0] _004_;
  (* src = "ochoBit_32Bit_synth.v:15" *)
  wire [1:0] _005_;
  (* src = "ochoBit_32Bit_synth.v:15" *)
  wire [1:0] _006_;
  (* src = "ochoBit_32Bit_synth.v:22" *)
  (* unused_bits = "2" *)
  wire [31:0] _007_;
  wire _008_;
  wire [1:0] _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire [7:0] _013_;
  wire [7:0] _014_;
  wire [7:0] _015_;
  wire [7:0] _016_;
  wire [7:0] _017_;
  wire [7:0] _018_;
  wire [7:0] _019_;
  wire [7:0] _020_;
  wire [7:0] _021_;
  wire [7:0] _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  (* src = "ochoBit_32Bit_synth.v:1" *)
  input clk_4f;
  (* src = "ochoBit_32Bit_synth.v:2" *)
  input clk_f;
  (* src = "ochoBit_32Bit_synth.v:9" *)
  reg [1:0] contador;
  (* src = "ochoBit_32Bit_synth.v:3" *)
  input [7:0] data_in;
  (* src = "ochoBit_32Bit_synth.v:6" *)
  output [31:0] data_out;
  reg [31:0] data_out;
  (* src = "ochoBit_32Bit_synth.v:4" *)
  input valid_in;
  (* src = "ochoBit_32Bit_synth.v:5" *)
  output valid_out;
  reg valid_out;
  assign _010_ = _007_[0] |(* src = "ochoBit_32Bit_synth.v:25" *)  contador[1];
  assign _011_ = contador[0] |(* src = "ochoBit_32Bit_synth.v:32" *)  _009_[1];
  assign _012_ = _007_[0] |(* src = "ochoBit_32Bit_synth.v:37" *)  _009_[1];
  assign _008_ = contador[0] |(* src = "ochoBit_32Bit_synth.v:19" *)  contador[1];
  assign _005_[0] = _011_ ? (* src = "ochoBit_32Bit_synth.v:32" *) _006_[0] : _007_[0];
  assign _005_[1] = _011_ ? (* src = "ochoBit_32Bit_synth.v:32" *) _006_[1] : _007_[1];
  assign _013_[0] = _008_ ? (* src = "ochoBit_32Bit_synth.v:19" *) data_out[24] : data_in[0];
  assign _013_[1] = _008_ ? (* src = "ochoBit_32Bit_synth.v:19" *) data_out[25] : data_in[1];
  assign _013_[2] = _008_ ? (* src = "ochoBit_32Bit_synth.v:19" *) data_out[26] : data_in[2];
  assign _013_[3] = _008_ ? (* src = "ochoBit_32Bit_synth.v:19" *) data_out[27] : data_in[3];
  assign _013_[4] = _008_ ? (* src = "ochoBit_32Bit_synth.v:19" *) data_out[28] : data_in[4];
  assign _013_[5] = _008_ ? (* src = "ochoBit_32Bit_synth.v:19" *) data_out[29] : data_in[5];
  assign _013_[6] = _008_ ? (* src = "ochoBit_32Bit_synth.v:19" *) data_out[30] : data_in[6];
  assign _013_[7] = _008_ ? (* src = "ochoBit_32Bit_synth.v:19" *) data_out[31] : data_in[7];
  assign _001_[24] = valid_in ? (* src = "ochoBit_32Bit_synth.v:17" *) _013_[0] : 1'hx;
  assign _001_[25] = valid_in ? (* src = "ochoBit_32Bit_synth.v:17" *) _013_[1] : 1'hx;
  assign _001_[26] = valid_in ? (* src = "ochoBit_32Bit_synth.v:17" *) _013_[2] : 1'hx;
  assign _001_[27] = valid_in ? (* src = "ochoBit_32Bit_synth.v:17" *) _013_[3] : 1'hx;
  assign _001_[28] = valid_in ? (* src = "ochoBit_32Bit_synth.v:17" *) _013_[4] : 1'hx;
  assign _001_[29] = valid_in ? (* src = "ochoBit_32Bit_synth.v:17" *) _013_[5] : 1'hx;
  assign _001_[30] = valid_in ? (* src = "ochoBit_32Bit_synth.v:17" *) _013_[6] : 1'hx;
  assign _001_[31] = valid_in ? (* src = "ochoBit_32Bit_synth.v:17" *) _013_[7] : 1'hx;
  assign _015_[0] = _011_ ? (* src = "ochoBit_32Bit_synth.v:32" *) _014_[0] : data_out[0];
  assign _015_[1] = _011_ ? (* src = "ochoBit_32Bit_synth.v:32" *) _014_[1] : data_out[1];
  assign _015_[2] = _011_ ? (* src = "ochoBit_32Bit_synth.v:32" *) _014_[2] : data_out[2];
  assign _015_[3] = _011_ ? (* src = "ochoBit_32Bit_synth.v:32" *) _014_[3] : data_out[3];
  assign _015_[4] = _011_ ? (* src = "ochoBit_32Bit_synth.v:32" *) _014_[4] : data_out[4];
  assign _015_[5] = _011_ ? (* src = "ochoBit_32Bit_synth.v:32" *) _014_[5] : data_out[5];
  assign _015_[6] = _011_ ? (* src = "ochoBit_32Bit_synth.v:32" *) _014_[6] : data_out[6];
  assign _015_[7] = _011_ ? (* src = "ochoBit_32Bit_synth.v:32" *) _014_[7] : data_out[7];
  assign _014_[0] = _012_ ? (* src = "ochoBit_32Bit_synth.v:37" *) data_out[0] : data_in[0];
  assign _014_[1] = _012_ ? (* src = "ochoBit_32Bit_synth.v:37" *) data_out[1] : data_in[1];
  assign _014_[2] = _012_ ? (* src = "ochoBit_32Bit_synth.v:37" *) data_out[2] : data_in[2];
  assign _014_[3] = _012_ ? (* src = "ochoBit_32Bit_synth.v:37" *) data_out[3] : data_in[3];
  assign _014_[4] = _012_ ? (* src = "ochoBit_32Bit_synth.v:37" *) data_out[4] : data_in[4];
  assign _014_[5] = _012_ ? (* src = "ochoBit_32Bit_synth.v:37" *) data_out[5] : data_in[5];
  assign _014_[6] = _012_ ? (* src = "ochoBit_32Bit_synth.v:37" *) data_out[6] : data_in[6];
  assign _014_[7] = _012_ ? (* src = "ochoBit_32Bit_synth.v:37" *) data_out[7] : data_in[7];
  assign _016_[0] = _010_ ? (* src = "ochoBit_32Bit_synth.v:25" *) _015_[0] : data_out[0];
  assign _016_[1] = _010_ ? (* src = "ochoBit_32Bit_synth.v:25" *) _015_[1] : data_out[1];
  assign _016_[2] = _010_ ? (* src = "ochoBit_32Bit_synth.v:25" *) _015_[2] : data_out[2];
  assign _016_[3] = _010_ ? (* src = "ochoBit_32Bit_synth.v:25" *) _015_[3] : data_out[3];
  assign _016_[4] = _010_ ? (* src = "ochoBit_32Bit_synth.v:25" *) _015_[4] : data_out[4];
  assign _016_[5] = _010_ ? (* src = "ochoBit_32Bit_synth.v:25" *) _015_[5] : data_out[5];
  assign _016_[6] = _010_ ? (* src = "ochoBit_32Bit_synth.v:25" *) _015_[6] : data_out[6];
  assign _016_[7] = _010_ ? (* src = "ochoBit_32Bit_synth.v:25" *) _015_[7] : data_out[7];
  assign _017_[0] = _008_ ? (* src = "ochoBit_32Bit_synth.v:19" *) _016_[0] : data_out[0];
  assign _017_[1] = _008_ ? (* src = "ochoBit_32Bit_synth.v:19" *) _016_[1] : data_out[1];
  assign _017_[2] = _008_ ? (* src = "ochoBit_32Bit_synth.v:19" *) _016_[2] : data_out[2];
  assign _017_[3] = _008_ ? (* src = "ochoBit_32Bit_synth.v:19" *) _016_[3] : data_out[3];
  assign _017_[4] = _008_ ? (* src = "ochoBit_32Bit_synth.v:19" *) _016_[4] : data_out[4];
  assign _017_[5] = _008_ ? (* src = "ochoBit_32Bit_synth.v:19" *) _016_[5] : data_out[5];
  assign _017_[6] = _008_ ? (* src = "ochoBit_32Bit_synth.v:19" *) _016_[6] : data_out[6];
  assign _017_[7] = _008_ ? (* src = "ochoBit_32Bit_synth.v:19" *) _016_[7] : data_out[7];
  assign _001_[0] = valid_in ? (* src = "ochoBit_32Bit_synth.v:17" *) _017_[0] : 1'hx;
  assign _001_[1] = valid_in ? (* src = "ochoBit_32Bit_synth.v:17" *) _017_[1] : 1'hx;
  assign _001_[2] = valid_in ? (* src = "ochoBit_32Bit_synth.v:17" *) _017_[2] : 1'hx;
  assign _001_[3] = valid_in ? (* src = "ochoBit_32Bit_synth.v:17" *) _017_[3] : 1'hx;
  assign _001_[4] = valid_in ? (* src = "ochoBit_32Bit_synth.v:17" *) _017_[4] : 1'hx;
  assign _001_[5] = valid_in ? (* src = "ochoBit_32Bit_synth.v:17" *) _017_[5] : 1'hx;
  assign _001_[6] = valid_in ? (* src = "ochoBit_32Bit_synth.v:17" *) _017_[6] : 1'hx;
  assign _001_[7] = valid_in ? (* src = "ochoBit_32Bit_synth.v:17" *) _017_[7] : 1'hx;
  assign _006_[0] = _012_ ? (* src = "ochoBit_32Bit_synth.v:37" *) contador[0] : 1'h0;
  assign _006_[1] = _012_ ? (* src = "ochoBit_32Bit_synth.v:37" *) contador[1] : 1'h0;
  assign _019_[0] = _010_ ? (* src = "ochoBit_32Bit_synth.v:25" *) _018_[0] : data_out[8];
  assign _019_[1] = _010_ ? (* src = "ochoBit_32Bit_synth.v:25" *) _018_[1] : data_out[9];
  assign _019_[2] = _010_ ? (* src = "ochoBit_32Bit_synth.v:25" *) _018_[2] : data_out[10];
  assign _019_[3] = _010_ ? (* src = "ochoBit_32Bit_synth.v:25" *) _018_[3] : data_out[11];
  assign _019_[4] = _010_ ? (* src = "ochoBit_32Bit_synth.v:25" *) _018_[4] : data_out[12];
  assign _019_[5] = _010_ ? (* src = "ochoBit_32Bit_synth.v:25" *) _018_[5] : data_out[13];
  assign _019_[6] = _010_ ? (* src = "ochoBit_32Bit_synth.v:25" *) _018_[6] : data_out[14];
  assign _019_[7] = _010_ ? (* src = "ochoBit_32Bit_synth.v:25" *) _018_[7] : data_out[15];
  assign _018_[0] = _011_ ? (* src = "ochoBit_32Bit_synth.v:32" *) data_out[8] : data_in[0];
  assign _018_[1] = _011_ ? (* src = "ochoBit_32Bit_synth.v:32" *) data_out[9] : data_in[1];
  assign _018_[2] = _011_ ? (* src = "ochoBit_32Bit_synth.v:32" *) data_out[10] : data_in[2];
  assign _018_[3] = _011_ ? (* src = "ochoBit_32Bit_synth.v:32" *) data_out[11] : data_in[3];
  assign _018_[4] = _011_ ? (* src = "ochoBit_32Bit_synth.v:32" *) data_out[12] : data_in[4];
  assign _018_[5] = _011_ ? (* src = "ochoBit_32Bit_synth.v:32" *) data_out[13] : data_in[5];
  assign _018_[6] = _011_ ? (* src = "ochoBit_32Bit_synth.v:32" *) data_out[14] : data_in[6];
  assign _018_[7] = _011_ ? (* src = "ochoBit_32Bit_synth.v:32" *) data_out[15] : data_in[7];
  assign _020_[0] = _008_ ? (* src = "ochoBit_32Bit_synth.v:19" *) _019_[0] : data_out[8];
  assign _020_[1] = _008_ ? (* src = "ochoBit_32Bit_synth.v:19" *) _019_[1] : data_out[9];
  assign _020_[2] = _008_ ? (* src = "ochoBit_32Bit_synth.v:19" *) _019_[2] : data_out[10];
  assign _020_[3] = _008_ ? (* src = "ochoBit_32Bit_synth.v:19" *) _019_[3] : data_out[11];
  assign _020_[4] = _008_ ? (* src = "ochoBit_32Bit_synth.v:19" *) _019_[4] : data_out[12];
  assign _020_[5] = _008_ ? (* src = "ochoBit_32Bit_synth.v:19" *) _019_[5] : data_out[13];
  assign _020_[6] = _008_ ? (* src = "ochoBit_32Bit_synth.v:19" *) _019_[6] : data_out[14];
  assign _020_[7] = _008_ ? (* src = "ochoBit_32Bit_synth.v:19" *) _019_[7] : data_out[15];
  assign _001_[8] = valid_in ? (* src = "ochoBit_32Bit_synth.v:17" *) _020_[0] : 1'hx;
  assign _001_[9] = valid_in ? (* src = "ochoBit_32Bit_synth.v:17" *) _020_[1] : 1'hx;
  assign _001_[10] = valid_in ? (* src = "ochoBit_32Bit_synth.v:17" *) _020_[2] : 1'hx;
  assign _001_[11] = valid_in ? (* src = "ochoBit_32Bit_synth.v:17" *) _020_[3] : 1'hx;
  assign _001_[12] = valid_in ? (* src = "ochoBit_32Bit_synth.v:17" *) _020_[4] : 1'hx;
  assign _001_[13] = valid_in ? (* src = "ochoBit_32Bit_synth.v:17" *) _020_[5] : 1'hx;
  assign _001_[14] = valid_in ? (* src = "ochoBit_32Bit_synth.v:17" *) _020_[6] : 1'hx;
  assign _001_[15] = valid_in ? (* src = "ochoBit_32Bit_synth.v:17" *) _020_[7] : 1'hx;
  assign _004_[0] = _010_ ? (* src = "ochoBit_32Bit_synth.v:25" *) _005_[0] : _007_[0];
  assign _004_[1] = _010_ ? (* src = "ochoBit_32Bit_synth.v:25" *) _005_[1] : _007_[1];
  assign _022_[0] = _008_ ? (* src = "ochoBit_32Bit_synth.v:19" *) _021_[0] : data_out[16];
  assign _022_[1] = _008_ ? (* src = "ochoBit_32Bit_synth.v:19" *) _021_[1] : data_out[17];
  assign _022_[2] = _008_ ? (* src = "ochoBit_32Bit_synth.v:19" *) _021_[2] : data_out[18];
  assign _022_[3] = _008_ ? (* src = "ochoBit_32Bit_synth.v:19" *) _021_[3] : data_out[19];
  assign _022_[4] = _008_ ? (* src = "ochoBit_32Bit_synth.v:19" *) _021_[4] : data_out[20];
  assign _022_[5] = _008_ ? (* src = "ochoBit_32Bit_synth.v:19" *) _021_[5] : data_out[21];
  assign _022_[6] = _008_ ? (* src = "ochoBit_32Bit_synth.v:19" *) _021_[6] : data_out[22];
  assign _022_[7] = _008_ ? (* src = "ochoBit_32Bit_synth.v:19" *) _021_[7] : data_out[23];
  assign _021_[0] = _010_ ? (* src = "ochoBit_32Bit_synth.v:25" *) data_out[16] : data_in[0];
  assign _021_[1] = _010_ ? (* src = "ochoBit_32Bit_synth.v:25" *) data_out[17] : data_in[1];
  assign _021_[2] = _010_ ? (* src = "ochoBit_32Bit_synth.v:25" *) data_out[18] : data_in[2];
  assign _021_[3] = _010_ ? (* src = "ochoBit_32Bit_synth.v:25" *) data_out[19] : data_in[3];
  assign _021_[4] = _010_ ? (* src = "ochoBit_32Bit_synth.v:25" *) data_out[20] : data_in[4];
  assign _021_[5] = _010_ ? (* src = "ochoBit_32Bit_synth.v:25" *) data_out[21] : data_in[5];
  assign _021_[6] = _010_ ? (* src = "ochoBit_32Bit_synth.v:25" *) data_out[22] : data_in[6];
  assign _021_[7] = _010_ ? (* src = "ochoBit_32Bit_synth.v:25" *) data_out[23] : data_in[7];
  assign _001_[16] = valid_in ? (* src = "ochoBit_32Bit_synth.v:17" *) _022_[0] : 1'hx;
  assign _001_[17] = valid_in ? (* src = "ochoBit_32Bit_synth.v:17" *) _022_[1] : 1'hx;
  assign _001_[18] = valid_in ? (* src = "ochoBit_32Bit_synth.v:17" *) _022_[2] : 1'hx;
  assign _001_[19] = valid_in ? (* src = "ochoBit_32Bit_synth.v:17" *) _022_[3] : 1'hx;
  assign _001_[20] = valid_in ? (* src = "ochoBit_32Bit_synth.v:17" *) _022_[4] : 1'hx;
  assign _001_[21] = valid_in ? (* src = "ochoBit_32Bit_synth.v:17" *) _022_[5] : 1'hx;
  assign _001_[22] = valid_in ? (* src = "ochoBit_32Bit_synth.v:17" *) _022_[6] : 1'hx;
  assign _001_[23] = valid_in ? (* src = "ochoBit_32Bit_synth.v:17" *) _022_[7] : 1'hx;
  assign _003_[0] = _008_ ? (* src = "ochoBit_32Bit_synth.v:19" *) _004_[0] : _007_[0];
  assign _003_[1] = _008_ ? (* src = "ochoBit_32Bit_synth.v:19" *) _004_[1] : _007_[1];
  assign _025_ = _010_ ? (* src = "ochoBit_32Bit_synth.v:25" *) _024_ : 1'h0;
  assign _023_ = _012_ ? (* src = "ochoBit_32Bit_synth.v:37" *) valid_out : 1'h1;
  assign _024_ = _011_ ? (* src = "ochoBit_32Bit_synth.v:32" *) _023_ : valid_out;
  assign _026_ = _008_ ? (* src = "ochoBit_32Bit_synth.v:19" *) _025_ : 1'h0;
  assign _002_ = valid_in ? (* src = "ochoBit_32Bit_synth.v:17" *) _026_ : 1'h0;
  assign _000_[0] = valid_in ? (* src = "ochoBit_32Bit_synth.v:17" *) _003_[0] : 1'h0;
  assign _000_[1] = valid_in ? (* src = "ochoBit_32Bit_synth.v:17" *) _003_[1] : 1'h0;
  (* src = "ochoBit_32Bit_synth.v:15" *)
  always @(posedge clk_4f)
      data_out[0] <= _001_[0];
  (* src = "ochoBit_32Bit_synth.v:15" *)
  always @(posedge clk_4f)
      data_out[1] <= _001_[1];
  (* src = "ochoBit_32Bit_synth.v:15" *)
  always @(posedge clk_4f)
      data_out[2] <= _001_[2];
  (* src = "ochoBit_32Bit_synth.v:15" *)
  always @(posedge clk_4f)
      data_out[3] <= _001_[3];
  (* src = "ochoBit_32Bit_synth.v:15" *)
  always @(posedge clk_4f)
      data_out[4] <= _001_[4];
  (* src = "ochoBit_32Bit_synth.v:15" *)
  always @(posedge clk_4f)
      data_out[5] <= _001_[5];
  (* src = "ochoBit_32Bit_synth.v:15" *)
  always @(posedge clk_4f)
      data_out[6] <= _001_[6];
  (* src = "ochoBit_32Bit_synth.v:15" *)
  always @(posedge clk_4f)
      data_out[7] <= _001_[7];
  (* src = "ochoBit_32Bit_synth.v:15" *)
  always @(posedge clk_4f)
      data_out[8] <= _001_[8];
  (* src = "ochoBit_32Bit_synth.v:15" *)
  always @(posedge clk_4f)
      data_out[9] <= _001_[9];
  (* src = "ochoBit_32Bit_synth.v:15" *)
  always @(posedge clk_4f)
      data_out[10] <= _001_[10];
  (* src = "ochoBit_32Bit_synth.v:15" *)
  always @(posedge clk_4f)
      data_out[11] <= _001_[11];
  (* src = "ochoBit_32Bit_synth.v:15" *)
  always @(posedge clk_4f)
      data_out[12] <= _001_[12];
  (* src = "ochoBit_32Bit_synth.v:15" *)
  always @(posedge clk_4f)
      data_out[13] <= _001_[13];
  (* src = "ochoBit_32Bit_synth.v:15" *)
  always @(posedge clk_4f)
      data_out[14] <= _001_[14];
  (* src = "ochoBit_32Bit_synth.v:15" *)
  always @(posedge clk_4f)
      data_out[15] <= _001_[15];
  (* src = "ochoBit_32Bit_synth.v:15" *)
  always @(posedge clk_4f)
      data_out[16] <= _001_[16];
  (* src = "ochoBit_32Bit_synth.v:15" *)
  always @(posedge clk_4f)
      data_out[17] <= _001_[17];
  (* src = "ochoBit_32Bit_synth.v:15" *)
  always @(posedge clk_4f)
      data_out[18] <= _001_[18];
  (* src = "ochoBit_32Bit_synth.v:15" *)
  always @(posedge clk_4f)
      data_out[19] <= _001_[19];
  (* src = "ochoBit_32Bit_synth.v:15" *)
  always @(posedge clk_4f)
      data_out[20] <= _001_[20];
  (* src = "ochoBit_32Bit_synth.v:15" *)
  always @(posedge clk_4f)
      data_out[21] <= _001_[21];
  (* src = "ochoBit_32Bit_synth.v:15" *)
  always @(posedge clk_4f)
      data_out[22] <= _001_[22];
  (* src = "ochoBit_32Bit_synth.v:15" *)
  always @(posedge clk_4f)
      data_out[23] <= _001_[23];
  (* src = "ochoBit_32Bit_synth.v:15" *)
  always @(posedge clk_4f)
      data_out[24] <= _001_[24];
  (* src = "ochoBit_32Bit_synth.v:15" *)
  always @(posedge clk_4f)
      data_out[25] <= _001_[25];
  (* src = "ochoBit_32Bit_synth.v:15" *)
  always @(posedge clk_4f)
      data_out[26] <= _001_[26];
  (* src = "ochoBit_32Bit_synth.v:15" *)
  always @(posedge clk_4f)
      data_out[27] <= _001_[27];
  (* src = "ochoBit_32Bit_synth.v:15" *)
  always @(posedge clk_4f)
      data_out[28] <= _001_[28];
  (* src = "ochoBit_32Bit_synth.v:15" *)
  always @(posedge clk_4f)
      data_out[29] <= _001_[29];
  (* src = "ochoBit_32Bit_synth.v:15" *)
  always @(posedge clk_4f)
      data_out[30] <= _001_[30];
  (* src = "ochoBit_32Bit_synth.v:15" *)
  always @(posedge clk_4f)
      data_out[31] <= _001_[31];
  (* src = "ochoBit_32Bit_synth.v:15" *)
  always @(posedge clk_4f)
      valid_out <= _002_;
  (* src = "ochoBit_32Bit_synth.v:15" *)
  always @(posedge clk_4f)
      contador[0] <= _000_[0];
  (* src = "ochoBit_32Bit_synth.v:15" *)
  always @(posedge clk_4f)
      contador[1] <= _000_[1];
  assign _007_[0] = contador[0] ^(* src = "ochoBit_32Bit_synth.v:37" *)  1'h1;
  assign _009_[1] = contador[1] ^(* src = "ochoBit_32Bit_synth.v:37" *)  1'h1;
  assign _007_[1] = contador[1] ^(* src = "ochoBit_32Bit_synth.v:34|<techmap.v>:263" *)  contador[0];
  assign _007_[31:3] = 29'h00000000;
  assign _009_[0] = contador[0];
endmodule

(* src = "paralelo_serial_synth.v:1" *)
module paralelo_serial_synth(clk_4f, clk_32f, data_in, valid_in, reset, data2send, data_out);
  (* src = "paralelo_serial_synth.v:32" *)
  wire [7:0] _000_;
  (* src = "paralelo_serial_synth.v:32" *)
  wire _001_;
  (* src = "paralelo_serial_synth.v:32" *)
  wire [2:0] _002_;
  (* src = "paralelo_serial_synth.v:32" *)
  wire [2:0] _003_;
  (* src = "paralelo_serial_synth.v:54" *)
  (* unused_bits = "3" *)
  wire [31:0] _004_;
  (* src = "paralelo_serial_synth.v:74" *)
  (* unused_bits = "3" *)
  wire [31:0] _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire [1:0] _017_;
  wire _018_;
  wire [3:0] _019_;
  wire [1:0] _020_;
  wire [3:0] _021_;
  wire [1:0] _022_;
  wire _023_;
  wire _024_;
  wire [2:0] _025_;
  wire [2:0] _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire [2:0] _041_;
  wire [2:0] _042_;
  wire [7:0] _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  (* src = "paralelo_serial_synth.v:48|paralelo_serial_synth.v:40|<techmap.v>:432" *)
  wire [7:0] _053_;
  (* src = "paralelo_serial_synth.v:48|paralelo_serial_synth.v:40|<techmap.v>:428" *)
  wire _054_;
  wire _055_;
  wire _056_;
  wire _057_;
  wire _058_;
  wire _059_;
  wire _060_;
  wire _061_;
  wire _062_;
  wire _063_;
  wire _064_;
  (* src = "paralelo_serial_synth.v:54|<techmap.v>:260|<techmap.v>:203" *)
  (* unused_bits = "2" *)
  wire [31:0] _065_;
  (* src = "paralelo_serial_synth.v:74|paralelo_serial_synth.v:54|<techmap.v>:260|<techmap.v>:203" *)
  (* unused_bits = "2" *)
  wire [31:0] _066_;
  (* src = "paralelo_serial_synth.v:68|paralelo_serial_synth.v:60|<techmap.v>:445" *)
  wire _067_;
  (* src = "paralelo_serial_synth.v:48|paralelo_serial_synth.v:40|<techmap.v>:445" *)
  wire _068_;
  (* src = "paralelo_serial_synth.v:3" *)
  input clk_32f;
  (* src = "paralelo_serial_synth.v:2" *)
  input clk_4f;
  (* src = "paralelo_serial_synth.v:7" *)
  output [7:0] data2send;
  reg [7:0] data2send;
  (* src = "paralelo_serial_synth.v:4" *)
  input [7:0] data_in;
  (* src = "paralelo_serial_synth.v:8" *)
  output data_out;
  reg data_out;
  (* src = "paralelo_serial_synth.v:6" *)
  input reset;
  (* src = "paralelo_serial_synth.v:10" *)
  reg [2:0] selector1;
  (* src = "paralelo_serial_synth.v:11" *)
  reg [2:0] selector2;
  (* src = "paralelo_serial_synth.v:5" *)
  input valid_in;
  assign _008_ = _051_ | _046_;
  assign _006_ = _008_ | _045_;
  assign _027_ = _009_ |(* src = "paralelo_serial_synth.v:68|paralelo_serial_synth.v:60" *)  _025_[2];
  assign _028_ = _010_ |(* src = "paralelo_serial_synth.v:67|paralelo_serial_synth.v:60" *)  _025_[2];
  assign _029_ = _011_ |(* src = "paralelo_serial_synth.v:66|paralelo_serial_synth.v:60" *)  _025_[2];
  assign _030_ = _012_ |(* src = "paralelo_serial_synth.v:65|paralelo_serial_synth.v:60" *)  _025_[2];
  assign _009_ = _005_[0] |(* src = "paralelo_serial_synth.v:64|paralelo_serial_synth.v:60" *)  _025_[1];
  assign _031_ = _009_ |(* src = "paralelo_serial_synth.v:64|paralelo_serial_synth.v:60" *)  selector2[2];
  assign _010_ = selector2[0] |(* src = "paralelo_serial_synth.v:63|paralelo_serial_synth.v:60" *)  _025_[1];
  assign _032_ = _010_ |(* src = "paralelo_serial_synth.v:63|paralelo_serial_synth.v:60" *)  selector2[2];
  assign _011_ = _005_[0] |(* src = "paralelo_serial_synth.v:62|paralelo_serial_synth.v:60" *)  selector2[1];
  assign _033_ = _011_ |(* src = "paralelo_serial_synth.v:62|paralelo_serial_synth.v:60" *)  selector2[2];
  assign _034_ = _013_ |(* src = "paralelo_serial_synth.v:48|paralelo_serial_synth.v:40" *)  _026_[2];
  assign _014_ = selector1[0] |(* src = "paralelo_serial_synth.v:47|paralelo_serial_synth.v:40" *)  _026_[1];
  assign _035_ = _014_ |(* src = "paralelo_serial_synth.v:47|paralelo_serial_synth.v:40" *)  _026_[2];
  assign _015_ = _004_[0] |(* src = "paralelo_serial_synth.v:46|paralelo_serial_synth.v:40" *)  selector1[1];
  assign _036_ = _015_ |(* src = "paralelo_serial_synth.v:46|paralelo_serial_synth.v:40" *)  _026_[2];
  assign _037_ = _016_ |(* src = "paralelo_serial_synth.v:45|paralelo_serial_synth.v:40" *)  _026_[2];
  assign _013_ = _004_[0] |(* src = "paralelo_serial_synth.v:44|paralelo_serial_synth.v:40" *)  _026_[1];
  assign _038_ = _013_ |(* src = "paralelo_serial_synth.v:44|paralelo_serial_synth.v:40" *)  selector1[2];
  assign _039_ = _014_ |(* src = "paralelo_serial_synth.v:43|paralelo_serial_synth.v:40" *)  selector1[2];
  assign _040_ = _015_ |(* src = "paralelo_serial_synth.v:42|paralelo_serial_synth.v:40" *)  selector1[2];
  assign _017_[0] = _052_ | _050_;
  assign _017_[1] = _049_ | _048_;
  assign _018_ = _017_[0] | _017_[1];
  assign _007_ = _018_ | _047_;
  assign _067_ = _006_ |(* src = "paralelo_serial_synth.v:68|paralelo_serial_synth.v:60|<techmap.v>:445" *)  _007_;
  assign _019_[0] = _053_[0] |(* src = "paralelo_serial_synth.v:48|paralelo_serial_synth.v:40|<techmap.v>:441" *)  _053_[1];
  assign _019_[1] = _053_[2] |(* src = "paralelo_serial_synth.v:48|paralelo_serial_synth.v:40|<techmap.v>:441" *)  _053_[3];
  assign _019_[2] = _053_[4] |(* src = "paralelo_serial_synth.v:48|paralelo_serial_synth.v:40|<techmap.v>:441" *)  _053_[5];
  assign _019_[3] = _053_[6] |(* src = "paralelo_serial_synth.v:48|paralelo_serial_synth.v:40|<techmap.v>:441" *)  _053_[7];
  assign _020_[0] = _019_[0] |(* src = "paralelo_serial_synth.v:48|paralelo_serial_synth.v:40|<techmap.v>:441" *)  _019_[1];
  assign _020_[1] = _019_[2] |(* src = "paralelo_serial_synth.v:48|paralelo_serial_synth.v:40|<techmap.v>:441" *)  _019_[3];
  assign _054_ = _020_[0] |(* src = "paralelo_serial_synth.v:48|paralelo_serial_synth.v:40|<techmap.v>:441" *)  _020_[1];
  assign _021_[0] = _056_ |(* src = "paralelo_serial_synth.v:48|paralelo_serial_synth.v:40|<techmap.v>:445" *)  _057_;
  assign _021_[1] = _058_ |(* src = "paralelo_serial_synth.v:48|paralelo_serial_synth.v:40|<techmap.v>:445" *)  _059_;
  assign _021_[2] = _060_ |(* src = "paralelo_serial_synth.v:48|paralelo_serial_synth.v:40|<techmap.v>:445" *)  _061_;
  assign _021_[3] = _062_ |(* src = "paralelo_serial_synth.v:48|paralelo_serial_synth.v:40|<techmap.v>:445" *)  _063_;
  assign _022_[0] = _021_[0] |(* src = "paralelo_serial_synth.v:48|paralelo_serial_synth.v:40|<techmap.v>:445" *)  _021_[1];
  assign _022_[1] = _021_[2] |(* src = "paralelo_serial_synth.v:48|paralelo_serial_synth.v:40|<techmap.v>:445" *)  _021_[3];
  assign _068_ = _022_[0] |(* src = "paralelo_serial_synth.v:48|paralelo_serial_synth.v:40|<techmap.v>:445" *)  _022_[1];
  assign _012_ = selector2[0] |(* src = "paralelo_serial_synth.v:61|paralelo_serial_synth.v:60" *)  selector2[1];
  assign _023_ = _012_ |(* src = "paralelo_serial_synth.v:61|paralelo_serial_synth.v:60" *)  selector2[2];
  assign _016_ = selector1[0] |(* src = "paralelo_serial_synth.v:41|paralelo_serial_synth.v:40" *)  selector1[1];
  assign _024_ = _016_ |(* src = "paralelo_serial_synth.v:41|paralelo_serial_synth.v:40" *)  selector1[2];
  assign _045_ = ~(* src = "paralelo_serial_synth.v:68|paralelo_serial_synth.v:60" *) _027_;
  assign _046_ = ~(* src = "paralelo_serial_synth.v:67|paralelo_serial_synth.v:60" *) _028_;
  assign _047_ = ~(* src = "paralelo_serial_synth.v:66|paralelo_serial_synth.v:60" *) _029_;
  assign _048_ = ~(* src = "paralelo_serial_synth.v:65|paralelo_serial_synth.v:60" *) _030_;
  assign _049_ = ~(* src = "paralelo_serial_synth.v:64|paralelo_serial_synth.v:60" *) _031_;
  assign _050_ = ~(* src = "paralelo_serial_synth.v:63|paralelo_serial_synth.v:60" *) _032_;
  assign _051_ = ~(* src = "paralelo_serial_synth.v:62|paralelo_serial_synth.v:60" *) _033_;
  assign _052_ = ~(* src = "paralelo_serial_synth.v:61|paralelo_serial_synth.v:60" *) _023_;
  assign _056_ = ~(* src = "paralelo_serial_synth.v:48|paralelo_serial_synth.v:40" *) _034_;
  assign _057_ = ~(* src = "paralelo_serial_synth.v:47|paralelo_serial_synth.v:40" *) _035_;
  assign _058_ = ~(* src = "paralelo_serial_synth.v:46|paralelo_serial_synth.v:40" *) _036_;
  assign _059_ = ~(* src = "paralelo_serial_synth.v:45|paralelo_serial_synth.v:40" *) _037_;
  assign _060_ = ~(* src = "paralelo_serial_synth.v:44|paralelo_serial_synth.v:40" *) _038_;
  assign _061_ = ~(* src = "paralelo_serial_synth.v:43|paralelo_serial_synth.v:40" *) _039_;
  assign _062_ = ~(* src = "paralelo_serial_synth.v:42|paralelo_serial_synth.v:40" *) _040_;
  assign _063_ = ~(* src = "paralelo_serial_synth.v:41|paralelo_serial_synth.v:40" *) _024_;
  assign _042_[0] = valid_in ? (* src = "paralelo_serial_synth.v:36" *) selector2[0] : _005_[0];
  assign _042_[1] = valid_in ? (* src = "paralelo_serial_synth.v:36" *) selector2[1] : _005_[1];
  assign _042_[2] = valid_in ? (* src = "paralelo_serial_synth.v:36" *) selector2[2] : _005_[2];
  assign _041_[0] = valid_in ? (* src = "paralelo_serial_synth.v:36" *) _004_[0] : selector1[0];
  assign _041_[1] = valid_in ? (* src = "paralelo_serial_synth.v:36" *) _004_[1] : selector1[1];
  assign _041_[2] = valid_in ? (* src = "paralelo_serial_synth.v:36" *) _004_[2] : selector1[2];
  assign _002_[0] = reset ? (* src = "paralelo_serial_synth.v:34" *) 1'h0 : _041_[0];
  assign _002_[1] = reset ? (* src = "paralelo_serial_synth.v:34" *) 1'h0 : _041_[1];
  assign _002_[2] = reset ? (* src = "paralelo_serial_synth.v:34" *) 1'h0 : _041_[2];
  assign _003_[0] = reset ? (* src = "paralelo_serial_synth.v:34" *) 1'h0 : _042_[0];
  assign _003_[1] = reset ? (* src = "paralelo_serial_synth.v:34" *) 1'h0 : _042_[1];
  assign _003_[2] = reset ? (* src = "paralelo_serial_synth.v:34" *) 1'h0 : _042_[2];
  assign _043_[0] = valid_in ? (* src = "paralelo_serial_synth.v:36" *) data_in[0] : 1'h0;
  assign _043_[1] = valid_in ? (* src = "paralelo_serial_synth.v:36" *) data_in[1] : 1'h0;
  assign _043_[2] = valid_in ? (* src = "paralelo_serial_synth.v:36" *) data_in[2] : 1'h1;
  assign _043_[3] = valid_in ? (* src = "paralelo_serial_synth.v:36" *) data_in[3] : 1'h1;
  assign _043_[4] = valid_in ? (* src = "paralelo_serial_synth.v:36" *) data_in[4] : 1'h1;
  assign _043_[5] = valid_in ? (* src = "paralelo_serial_synth.v:36" *) data_in[5] : 1'h1;
  assign _043_[6] = valid_in ? (* src = "paralelo_serial_synth.v:36" *) data_in[6] : 1'h0;
  assign _043_[7] = valid_in ? (* src = "paralelo_serial_synth.v:36" *) data_in[7] : 1'h1;
  assign _000_[0] = reset ? (* src = "paralelo_serial_synth.v:34" *) 1'h0 : _043_[0];
  assign _000_[1] = reset ? (* src = "paralelo_serial_synth.v:34" *) 1'h0 : _043_[1];
  assign _000_[2] = reset ? (* src = "paralelo_serial_synth.v:34" *) 1'h0 : _043_[2];
  assign _000_[3] = reset ? (* src = "paralelo_serial_synth.v:34" *) 1'h0 : _043_[3];
  assign _000_[4] = reset ? (* src = "paralelo_serial_synth.v:34" *) 1'h0 : _043_[4];
  assign _000_[5] = reset ? (* src = "paralelo_serial_synth.v:34" *) 1'h0 : _043_[5];
  assign _000_[6] = reset ? (* src = "paralelo_serial_synth.v:34" *) 1'h0 : _043_[6];
  assign _000_[7] = reset ? (* src = "paralelo_serial_synth.v:34" *) 1'h0 : _043_[7];
  assign _064_ = valid_in ? (* src = "paralelo_serial_synth.v:36" *) _055_ : _044_;
  assign _001_ = reset ? (* src = "paralelo_serial_synth.v:34" *) 1'h0 : _064_;
  assign _044_ = _067_ ? (* src = "paralelo_serial_synth.v:68|paralelo_serial_synth.v:60|<techmap.v>:445" *) _007_ : 1'hx;
  assign _055_ = _068_ ? (* src = "paralelo_serial_synth.v:48|paralelo_serial_synth.v:40|<techmap.v>:445" *) _054_ : 1'hx;
  (* src = "paralelo_serial_synth.v:32" *)
  always @(posedge clk_32f)
      data_out <= _001_;
  (* src = "paralelo_serial_synth.v:32" *)
  always @(posedge clk_32f)
      data2send[0] <= _000_[0];
  (* src = "paralelo_serial_synth.v:32" *)
  always @(posedge clk_32f)
      data2send[1] <= _000_[1];
  (* src = "paralelo_serial_synth.v:32" *)
  always @(posedge clk_32f)
      data2send[2] <= _000_[2];
  (* src = "paralelo_serial_synth.v:32" *)
  always @(posedge clk_32f)
      data2send[3] <= _000_[3];
  (* src = "paralelo_serial_synth.v:32" *)
  always @(posedge clk_32f)
      data2send[4] <= _000_[4];
  (* src = "paralelo_serial_synth.v:32" *)
  always @(posedge clk_32f)
      data2send[5] <= _000_[5];
  (* src = "paralelo_serial_synth.v:32" *)
  always @(posedge clk_32f)
      data2send[6] <= _000_[6];
  (* src = "paralelo_serial_synth.v:32" *)
  always @(posedge clk_32f)
      data2send[7] <= _000_[7];
  (* src = "paralelo_serial_synth.v:32" *)
  always @(posedge clk_32f)
      selector2[0] <= _003_[0];
  (* src = "paralelo_serial_synth.v:32" *)
  always @(posedge clk_32f)
      selector2[1] <= _003_[1];
  (* src = "paralelo_serial_synth.v:32" *)
  always @(posedge clk_32f)
      selector2[2] <= _003_[2];
  (* src = "paralelo_serial_synth.v:32" *)
  always @(posedge clk_32f)
      selector1[0] <= _002_[0];
  (* src = "paralelo_serial_synth.v:32" *)
  always @(posedge clk_32f)
      selector1[1] <= _002_[1];
  (* src = "paralelo_serial_synth.v:32" *)
  always @(posedge clk_32f)
      selector1[2] <= _002_[2];
  assign _025_[2] = selector2[2] ^(* src = "paralelo_serial_synth.v:65|paralelo_serial_synth.v:60" *)  1'h1;
  assign _025_[1] = selector2[1] ^(* src = "paralelo_serial_synth.v:63|paralelo_serial_synth.v:60" *)  1'h1;
  assign _005_[0] = selector2[0] ^(* src = "paralelo_serial_synth.v:62|paralelo_serial_synth.v:60" *)  1'h1;
  assign _026_[2] = selector1[2] ^(* src = "paralelo_serial_synth.v:45|paralelo_serial_synth.v:40" *)  1'h1;
  assign _026_[1] = selector1[1] ^(* src = "paralelo_serial_synth.v:43|paralelo_serial_synth.v:40" *)  1'h1;
  assign _004_[0] = selector1[0] ^(* src = "paralelo_serial_synth.v:42|paralelo_serial_synth.v:40" *)  1'h1;
  assign _053_[7] = data_in[7] &(* src = "paralelo_serial_synth.v:48|paralelo_serial_synth.v:40|<techmap.v>:434" *)  _063_;
  assign _053_[6] = data_in[6] &(* src = "paralelo_serial_synth.v:48|paralelo_serial_synth.v:40|<techmap.v>:434" *)  _062_;
  assign _053_[5] = data_in[5] &(* src = "paralelo_serial_synth.v:48|paralelo_serial_synth.v:40|<techmap.v>:434" *)  _061_;
  assign _053_[4] = data_in[4] &(* src = "paralelo_serial_synth.v:48|paralelo_serial_synth.v:40|<techmap.v>:434" *)  _060_;
  assign _053_[3] = data_in[3] &(* src = "paralelo_serial_synth.v:48|paralelo_serial_synth.v:40|<techmap.v>:434" *)  _059_;
  assign _053_[2] = data_in[2] &(* src = "paralelo_serial_synth.v:48|paralelo_serial_synth.v:40|<techmap.v>:434" *)  _058_;
  assign _053_[1] = data_in[1] &(* src = "paralelo_serial_synth.v:48|paralelo_serial_synth.v:40|<techmap.v>:434" *)  _057_;
  assign _053_[0] = data_in[0] &(* src = "paralelo_serial_synth.v:48|paralelo_serial_synth.v:40|<techmap.v>:434" *)  _056_;
  assign _004_[1] = selector1[1] ^(* src = "paralelo_serial_synth.v:54|<techmap.v>:263" *)  selector1[0];
  assign _004_[2] = selector1[2] ^(* src = "paralelo_serial_synth.v:54|<techmap.v>:263" *)  _065_[1];
  assign _005_[1] = selector2[1] ^(* src = "paralelo_serial_synth.v:74|paralelo_serial_synth.v:54|<techmap.v>:263" *)  selector2[0];
  assign _005_[2] = selector2[2] ^(* src = "paralelo_serial_synth.v:74|paralelo_serial_synth.v:54|<techmap.v>:263" *)  _066_[1];
  assign _065_[1] = selector1[1] &(* src = "paralelo_serial_synth.v:54|<techmap.v>:260|<techmap.v>:221" *)  selector1[0];
  assign _066_[1] = selector2[1] &(* src = "paralelo_serial_synth.v:74|paralelo_serial_synth.v:54|<techmap.v>:260|<techmap.v>:221" *)  selector2[0];
  assign _004_[31:4] = 28'h0000000;
  assign _005_[31:4] = 28'h0000000;
  assign _025_[0] = _005_[0];
  assign _026_[0] = _004_[0];
  assign { _065_[31:2], _065_[0] } = { 29'h00000000, _004_[3], selector1[0] };
  assign { _066_[31:2], _066_[0] } = { 29'h00000000, _005_[3], selector2[0] };
endmodule

(* top =  1  *)
(* src = "phy_synth.v:4" *)
module phy_synth(input_bus, valid, reset, clk, clk2, clk4, clk32, output_bus);
  (* src = "phy_synth.v:8" *)
  input clk;
  (* src = "phy_synth.v:9" *)
  input clk2;
  (* src = "phy_synth.v:11" *)
  input clk32;
  (* src = "phy_synth.v:10" *)
  input clk4;
  (* src = "phy_synth.v:5" *)
  input [31:0] input_bus;
  (* src = "phy_synth.v:13" *)
  output [31:0] output_bus;
  (* src = "phy_synth.v:7" *)
  input reset;
  (* src = "phy_synth.v:17" *)
  wire serial_o0;
  (* src = "phy_synth.v:17" *)
  wire serial_o1;
  (* src = "phy_synth.v:6" *)
  input valid;
  (* module_not_derived = 32'd1 *)
  (* src = "phy_synth.v:32" *)
  phy_synth_rx_synth receptor (
    .clk(clk),
    .clk2(clk2),
    .clk32(clk32),
    .clk4(clk4),
    .output_bus(output_bus),
    .reset(reset),
    .serial_o0(serial_o0),
    .serial_o1(serial_o1)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "phy_synth.v:19" *)
  phy_synth_tx_synth transmisor (
    .clk(clk),
    .clk2(clk2),
    .clk32(clk32),
    .clk4(clk4),
    .input_bus(input_bus),
    .reset(reset),
    .serial_o0(serial_o0),
    .serial_o1(serial_o1),
    .valid(valid)
  );
endmodule

(* src = "phy_synth_rx_synth.v:5" *)
module phy_synth_rx_synth(serial_o0, serial_o1, reset, clk, clk2, clk4, clk32, output_bus);
  (* src = "phy_synth_rx_synth.v:9" *)
  input clk;
  (* src = "phy_synth_rx_synth.v:10" *)
  input clk2;
  (* src = "phy_synth_rx_synth.v:12" *)
  input clk32;
  (* src = "phy_synth_rx_synth.v:11" *)
  input clk4;
  (* src = "phy_synth_rx_synth.v:15" *)
  wire [31:0] lane_0_rx;
  (* src = "phy_synth_rx_synth.v:15" *)
  wire [31:0] lane_1_rx;
  (* src = "phy_synth_rx_synth.v:13" *)
  output [31:0] output_bus;
  (* src = "phy_synth_rx_synth.v:16" *)
  wire [7:0] paralelo0;
  (* src = "phy_synth_rx_synth.v:16" *)
  wire [7:0] paralelo1;
  (* src = "phy_synth_rx_synth.v:8" *)
  input reset;
  (* src = "phy_synth_rx_synth.v:6" *)
  input serial_o0;
  (* src = "phy_synth_rx_synth.v:7" *)
  input serial_o1;
  (* src = "phy_synth_rx_synth.v:18" *)
  wire validS_0;
  (* src = "phy_synth_rx_synth.v:18" *)
  wire validS_1;
  (* src = "phy_synth_rx_synth.v:17" *)
  wire valid_0;
  (* src = "phy_synth_rx_synth.v:17" *)
  wire valid_1;
  (* module_not_derived = 32'd1 *)
  (* src = "phy_synth_rx_synth.v:41" *)
  ochoBit_32Bit_synth ochoBit_32Bit_synthINST0 (
    .clk_4f(clk4),
    .clk_f(clk),
    .data_in(paralelo0),
    .data_out(lane_0_rx),
    .valid_in(validS_0),
    .valid_out(valid_0)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "phy_synth_rx_synth.v:51" *)
  ochoBit_32Bit_synth ochoBit_32Bit_synthINST1 (
    .clk_4f(clk4),
    .clk_f(clk),
    .data_in(paralelo1),
    .data_out(lane_1_rx),
    .valid_in(validS_1),
    .valid_out(valid_1)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "phy_synth_rx_synth.v:20" *)
  serial_paralelo_synth serial_paralelo_synthINST0 (
    .clk_32f(clk32),
    .clk_4f(clk4),
    .data_in(serial_o0),
    .data_out(paralelo0),
    .reset(reset),
    .valid_out(validS_0)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "phy_synth_rx_synth.v:30" *)
  serial_paralelo_synth serial_paralelo_synthINST1 (
    .clk_32f(clk32),
    .clk_4f(clk4),
    .data_in(serial_o1),
    .data_out(paralelo1),
    .reset(reset),
    .valid_out(validS_1)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "phy_synth_rx_synth.v:61" *)
  un_striping_synth_synth un_striping_synth_synthINST (
    .clk_2f(clk2),
    .data_out(output_bus),
    .lane_0(lane_0_rx),
    .lane_1(lane_1_rx),
    .reset(reset),
    .valid_0(valid_0),
    .valid_1(valid_1)
  );
endmodule

(* src = "phy_synth_tx_synth.v:6" *)
module phy_synth_tx_synth(input_bus, valid, reset, clk, clk2, clk4, clk32, serial_o0, serial_o1);
  (* src = "phy_synth_tx_synth.v:10" *)
  input clk;
  (* src = "phy_synth_tx_synth.v:11" *)
  input clk2;
  (* src = "phy_synth_tx_synth.v:13" *)
  input clk32;
  (* src = "phy_synth_tx_synth.v:12" *)
  input clk4;
  (* src = "phy_synth_tx_synth.v:18" *)
  wire [7:0] data_out0;
  (* src = "phy_synth_tx_synth.v:18" *)
  wire [7:0] data_out1;
  (* src = "phy_synth_tx_synth.v:7" *)
  input [31:0] input_bus;
  (* src = "phy_synth_tx_synth.v:17" *)
  wire [31:0] lane_0;
  (* src = "phy_synth_tx_synth.v:17" *)
  wire [31:0] lane_1;
  (* src = "phy_synth_tx_synth.v:9" *)
  input reset;
  (* src = "phy_synth_tx_synth.v:14" *)
  output serial_o0;
  (* src = "phy_synth_tx_synth.v:15" *)
  output serial_o1;
  (* src = "phy_synth_tx_synth.v:8" *)
  input valid;
  (* src = "phy_synth_tx_synth.v:20" *)
  wire valid_32_0;
  (* src = "phy_synth_tx_synth.v:20" *)
  wire valid_32_1;
  (* src = "phy_synth_tx_synth.v:19" *)
  wire valid_lane0;
  (* src = "phy_synth_tx_synth.v:19" *)
  wire valid_lane1;
  (* module_not_derived = 32'd1 *)
  (* src = "phy_synth_tx_synth.v:33" *)
  conv_32b_8b_synth conv_32b_8b_synthINST0 (
    .clk_4f(clk4),
    .clk_f(clk),
    .data_in(lane_0),
    .data_out(data_out0),
    .valid_in(valid_lane0),
    .valid_out(valid_32_0)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "phy_synth_tx_synth.v:43" *)
  conv_32b_8b_synth conv_32b_8b_synthINST1 (
    .clk_4f(clk4),
    .clk_f(clk),
    .data_in(lane_1),
    .data_out(data_out1),
    .valid_in(valid_lane1),
    .valid_out(valid_32_1)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "phy_synth_tx_synth.v:52" *)
  paralelo_serial_synth paralelo_serial_synthINST0 (
    .clk_32f(clk32),
    .clk_4f(clk4),
    .data_in(data_out0),
    .data_out(serial_o0),
    .reset(reset),
    .valid_in(valid_32_0)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "phy_synth_tx_synth.v:62" *)
  paralelo_serial_synth paralelo_serial_synthINST1 (
    .clk_32f(clk32),
    .clk_4f(clk4),
    .data_in(data_out1),
    .data_out(serial_o1),
    .reset(reset),
    .valid_in(valid_32_1)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "phy_synth_tx_synth.v:22" *)
  striping_synth striping_synthINST (
    .clk_2f(clk2),
    .data_in(input_bus),
    .lane_0(lane_0),
    .lane_1(lane_1),
    .reset(reset),
    .valid_0(valid_lane0),
    .valid_1(valid_lane1),
    .valid_in(valid)
  );
endmodule

(* src = "serial_paralelo_synth.v:1" *)
module serial_paralelo_synth(clk_4f, clk_32f, reset, data_in, active, valid_out, data_out);
  (* src = "serial_paralelo_synth.v:17" *)
  wire [31:0] _000_;
  (* src = "serial_paralelo_synth.v:17" *)
  wire _001_;
  (* src = "serial_paralelo_synth.v:17" *)
  wire [31:0] _002_;
  (* src = "serial_paralelo_synth.v:17" *)
  wire [7:0] _003_;
  (* src = "serial_paralelo_synth.v:17" *)
  wire [7:0] _004_;
  (* src = "serial_paralelo_synth.v:17" *)
  wire [7:0] _005_;
  (* src = "serial_paralelo_synth.v:17" *)
  wire _006_;
  (* src = "serial_paralelo_synth.v:45" *)
  wire [31:0] _007_;
  (* src = "serial_paralelo_synth.v:60" *)
  wire [31:0] _008_;
  wire [7:0] _009_;
  wire [3:0] _010_;
  wire [1:0] _011_;
  wire [15:0] _012_;
  wire [7:0] _013_;
  wire [3:0] _014_;
  wire [1:0] _015_;
  wire [15:0] _016_;
  wire [7:0] _017_;
  wire [3:0] _018_;
  wire [1:0] _019_;
  wire [3:0] _020_;
  wire [1:0] _021_;
  wire [3:0] _022_;
  wire [1:0] _023_;
  wire [15:0] _024_;
  wire [31:0] _025_;
  wire [7:0] _026_;
  wire [7:0] _027_;
  wire [31:0] _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  (* src = "serial_paralelo_synth.v:29" *)
  wire _033_;
  (* src = "serial_paralelo_synth.v:29" *)
  wire _034_;
  (* src = "serial_paralelo_synth.v:32" *)
  wire _035_;
  (* src = "serial_paralelo_synth.v:29" *)
  wire _036_;
  (* src = "serial_paralelo_synth.v:32" *)
  wire _037_;
  (* src = "serial_paralelo_synth.v:43" *)
  wire _038_;
  (* src = "serial_paralelo_synth.v:50" *)
  wire _039_;
  (* src = "serial_paralelo_synth.v:43" *)
  wire _040_;
  (* src = "serial_paralelo_synth.v:32" *)
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire [7:0] _045_;
  wire [31:0] _046_;
  wire [31:0] _047_;
  wire [31:0] _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  wire [7:0] _054_;
  wire [7:0] _055_;
  wire [7:0] _056_;
  wire [7:0] _057_;
  wire [7:0] _058_;
  (* src = "serial_paralelo_synth.v:45|<techmap.v>:260|<techmap.v>:203" *)
  (* unused_bits = "31" *)
  wire [31:0] _059_;
  (* src = "serial_paralelo_synth.v:60|serial_paralelo_synth.v:45|<techmap.v>:260|<techmap.v>:203" *)
  (* unused_bits = "31" *)
  wire [31:0] _060_;
  (* unused_bits = "0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30" *)
  wire [31:0] _061_;
  (* src = "serial_paralelo_synth.v:50|<techmap.v>:260|<techmap.v>:203" *)
  (* unused_bits = "2 4 5 6 8 9 10 11 12 13 14 16 17 18 19 20 21 22 24 25 26 28" *)
  wire [31:0] _062_;
  wire [31:0] _063_;
  wire _064_;
  (* src = "serial_paralelo_synth.v:45|<techmap.v>:260|<techmap.v>:222" *)
  wire _065_;
  (* src = "serial_paralelo_synth.v:45|<techmap.v>:260|<techmap.v>:222" *)
  wire _066_;
  (* src = "serial_paralelo_synth.v:45|<techmap.v>:260|<techmap.v>:222" *)
  wire _067_;
  (* src = "serial_paralelo_synth.v:45|<techmap.v>:260|<techmap.v>:222" *)
  wire _068_;
  (* src = "serial_paralelo_synth.v:45|<techmap.v>:260|<techmap.v>:222" *)
  wire _069_;
  (* src = "serial_paralelo_synth.v:45|<techmap.v>:260|<techmap.v>:222" *)
  wire _070_;
  (* src = "serial_paralelo_synth.v:45|<techmap.v>:260|<techmap.v>:222" *)
  wire _071_;
  (* src = "serial_paralelo_synth.v:45|<techmap.v>:260|<techmap.v>:222" *)
  wire _072_;
  (* src = "serial_paralelo_synth.v:45|<techmap.v>:260|<techmap.v>:222" *)
  wire _073_;
  (* src = "serial_paralelo_synth.v:45|<techmap.v>:260|<techmap.v>:222" *)
  wire _074_;
  (* src = "serial_paralelo_synth.v:45|<techmap.v>:260|<techmap.v>:222" *)
  wire _075_;
  (* src = "serial_paralelo_synth.v:45|<techmap.v>:260|<techmap.v>:222" *)
  wire _076_;
  (* src = "serial_paralelo_synth.v:45|<techmap.v>:260|<techmap.v>:222" *)
  wire _077_;
  (* src = "serial_paralelo_synth.v:45|<techmap.v>:260|<techmap.v>:222" *)
  wire _078_;
  (* src = "serial_paralelo_synth.v:45|<techmap.v>:260|<techmap.v>:222" *)
  wire _079_;
  (* src = "serial_paralelo_synth.v:45|<techmap.v>:260|<techmap.v>:222" *)
  wire _080_;
  (* src = "serial_paralelo_synth.v:45|<techmap.v>:260|<techmap.v>:222" *)
  wire _081_;
  (* src = "serial_paralelo_synth.v:45|<techmap.v>:260|<techmap.v>:222" *)
  wire _082_;
  (* src = "serial_paralelo_synth.v:45|<techmap.v>:260|<techmap.v>:222" *)
  wire _083_;
  (* src = "serial_paralelo_synth.v:45|<techmap.v>:260|<techmap.v>:222" *)
  wire _084_;
  (* src = "serial_paralelo_synth.v:45|<techmap.v>:260|<techmap.v>:222" *)
  wire _085_;
  (* src = "serial_paralelo_synth.v:45|<techmap.v>:260|<techmap.v>:222" *)
  wire _086_;
  (* src = "serial_paralelo_synth.v:60|serial_paralelo_synth.v:45|<techmap.v>:260|<techmap.v>:222" *)
  wire _087_;
  (* src = "serial_paralelo_synth.v:60|serial_paralelo_synth.v:45|<techmap.v>:260|<techmap.v>:222" *)
  wire _088_;
  (* src = "serial_paralelo_synth.v:60|serial_paralelo_synth.v:45|<techmap.v>:260|<techmap.v>:222" *)
  wire _089_;
  (* src = "serial_paralelo_synth.v:60|serial_paralelo_synth.v:45|<techmap.v>:260|<techmap.v>:222" *)
  wire _090_;
  (* src = "serial_paralelo_synth.v:60|serial_paralelo_synth.v:45|<techmap.v>:260|<techmap.v>:222" *)
  wire _091_;
  (* src = "serial_paralelo_synth.v:60|serial_paralelo_synth.v:45|<techmap.v>:260|<techmap.v>:222" *)
  wire _092_;
  (* src = "serial_paralelo_synth.v:60|serial_paralelo_synth.v:45|<techmap.v>:260|<techmap.v>:222" *)
  wire _093_;
  (* src = "serial_paralelo_synth.v:60|serial_paralelo_synth.v:45|<techmap.v>:260|<techmap.v>:222" *)
  wire _094_;
  (* src = "serial_paralelo_synth.v:60|serial_paralelo_synth.v:45|<techmap.v>:260|<techmap.v>:222" *)
  wire _095_;
  (* src = "serial_paralelo_synth.v:60|serial_paralelo_synth.v:45|<techmap.v>:260|<techmap.v>:222" *)
  wire _096_;
  (* src = "serial_paralelo_synth.v:60|serial_paralelo_synth.v:45|<techmap.v>:260|<techmap.v>:222" *)
  wire _097_;
  (* src = "serial_paralelo_synth.v:60|serial_paralelo_synth.v:45|<techmap.v>:260|<techmap.v>:222" *)
  wire _098_;
  (* src = "serial_paralelo_synth.v:60|serial_paralelo_synth.v:45|<techmap.v>:260|<techmap.v>:222" *)
  wire _099_;
  (* src = "serial_paralelo_synth.v:60|serial_paralelo_synth.v:45|<techmap.v>:260|<techmap.v>:222" *)
  wire _100_;
  (* src = "serial_paralelo_synth.v:60|serial_paralelo_synth.v:45|<techmap.v>:260|<techmap.v>:222" *)
  wire _101_;
  (* src = "serial_paralelo_synth.v:60|serial_paralelo_synth.v:45|<techmap.v>:260|<techmap.v>:222" *)
  wire _102_;
  (* src = "serial_paralelo_synth.v:60|serial_paralelo_synth.v:45|<techmap.v>:260|<techmap.v>:222" *)
  wire _103_;
  (* src = "serial_paralelo_synth.v:60|serial_paralelo_synth.v:45|<techmap.v>:260|<techmap.v>:222" *)
  wire _104_;
  (* src = "serial_paralelo_synth.v:60|serial_paralelo_synth.v:45|<techmap.v>:260|<techmap.v>:222" *)
  wire _105_;
  (* src = "serial_paralelo_synth.v:60|serial_paralelo_synth.v:45|<techmap.v>:260|<techmap.v>:222" *)
  wire _106_;
  (* src = "serial_paralelo_synth.v:60|serial_paralelo_synth.v:45|<techmap.v>:260|<techmap.v>:222" *)
  wire _107_;
  (* src = "serial_paralelo_synth.v:60|serial_paralelo_synth.v:45|<techmap.v>:260|<techmap.v>:222" *)
  wire _108_;
  (* src = "serial_paralelo_synth.v:50|<techmap.v>:260|<techmap.v>:221" *)
  wire _109_;
  (* src = "serial_paralelo_synth.v:50|<techmap.v>:260|<techmap.v>:221" *)
  wire _110_;
  (* src = "serial_paralelo_synth.v:50|<techmap.v>:260|<techmap.v>:221" *)
  wire _111_;
  (* src = "serial_paralelo_synth.v:50|<techmap.v>:260|<techmap.v>:221" *)
  wire _112_;
  (* src = "serial_paralelo_synth.v:50|<techmap.v>:260|<techmap.v>:221" *)
  wire _113_;
  (* src = "serial_paralelo_synth.v:50|<techmap.v>:260|<techmap.v>:221" *)
  wire _114_;
  (* src = "serial_paralelo_synth.v:50|<techmap.v>:260|<techmap.v>:221" *)
  wire _115_;
  (* src = "serial_paralelo_synth.v:50|<techmap.v>:260|<techmap.v>:221" *)
  wire _116_;
  (* src = "serial_paralelo_synth.v:50|<techmap.v>:260|<techmap.v>:221" *)
  wire _117_;
  (* src = "serial_paralelo_synth.v:50|<techmap.v>:260|<techmap.v>:221" *)
  wire _118_;
  (* src = "serial_paralelo_synth.v:50|<techmap.v>:260|<techmap.v>:221" *)
  wire _119_;
  (* src = "serial_paralelo_synth.v:50|<techmap.v>:260|<techmap.v>:221" *)
  wire _120_;
  (* src = "serial_paralelo_synth.v:50|<techmap.v>:260|<techmap.v>:221" *)
  wire _121_;
  (* src = "serial_paralelo_synth.v:50|<techmap.v>:260|<techmap.v>:221" *)
  wire _122_;
  (* src = "serial_paralelo_synth.v:50|<techmap.v>:260|<techmap.v>:221" *)
  wire _123_;
  (* src = "serial_paralelo_synth.v:50|<techmap.v>:260|<techmap.v>:221" *)
  wire _124_;
  (* src = "serial_paralelo_synth.v:50|<techmap.v>:260|<techmap.v>:221" *)
  wire _125_;
  (* src = "serial_paralelo_synth.v:50|<techmap.v>:260|<techmap.v>:221" *)
  wire _126_;
  (* src = "serial_paralelo_synth.v:50|<techmap.v>:260|<techmap.v>:221" *)
  wire _127_;
  (* src = "serial_paralelo_synth.v:50|<techmap.v>:260|<techmap.v>:221" *)
  wire _128_;
  (* src = "serial_paralelo_synth.v:50|<techmap.v>:260|<techmap.v>:221" *)
  wire _129_;
  (* src = "serial_paralelo_synth.v:50|<techmap.v>:260|<techmap.v>:221" *)
  wire _130_;
  (* src = "serial_paralelo_synth.v:50|<techmap.v>:260|<techmap.v>:221" *)
  wire _131_;
  (* src = "serial_paralelo_synth.v:50|<techmap.v>:260|<techmap.v>:221" *)
  wire _132_;
  (* src = "serial_paralelo_synth.v:50|<techmap.v>:260|<techmap.v>:221" *)
  wire _133_;
  (* src = "serial_paralelo_synth.v:50|<techmap.v>:260|<techmap.v>:221" *)
  wire _134_;
  (* src = "serial_paralelo_synth.v:50|<techmap.v>:260|<techmap.v>:221" *)
  wire _135_;
  (* src = "serial_paralelo_synth.v:50|<techmap.v>:260|<techmap.v>:221" *)
  wire _136_;
  (* src = "serial_paralelo_synth.v:50|<techmap.v>:260|<techmap.v>:221" *)
  wire _137_;
  (* src = "serial_paralelo_synth.v:50|<techmap.v>:260|<techmap.v>:221" *)
  wire _138_;
  (* src = "serial_paralelo_synth.v:50|<techmap.v>:260|<techmap.v>:222" *)
  wire _139_;
  (* src = "serial_paralelo_synth.v:50|<techmap.v>:260|<techmap.v>:222" *)
  wire _140_;
  (* src = "serial_paralelo_synth.v:50|<techmap.v>:260|<techmap.v>:222" *)
  wire _141_;
  (* src = "serial_paralelo_synth.v:50|<techmap.v>:260|<techmap.v>:222" *)
  wire _142_;
  (* src = "serial_paralelo_synth.v:50|<techmap.v>:260|<techmap.v>:222" *)
  wire _143_;
  (* src = "serial_paralelo_synth.v:50|<techmap.v>:260|<techmap.v>:222" *)
  wire _144_;
  (* src = "serial_paralelo_synth.v:50|<techmap.v>:260|<techmap.v>:222" *)
  wire _145_;
  (* src = "serial_paralelo_synth.v:50|<techmap.v>:260|<techmap.v>:222" *)
  wire _146_;
  (* src = "serial_paralelo_synth.v:50|<techmap.v>:260|<techmap.v>:222" *)
  wire _147_;
  (* src = "serial_paralelo_synth.v:50|<techmap.v>:260|<techmap.v>:222" *)
  wire _148_;
  (* src = "serial_paralelo_synth.v:50|<techmap.v>:260|<techmap.v>:222" *)
  wire _149_;
  (* src = "serial_paralelo_synth.v:50|<techmap.v>:260|<techmap.v>:222" *)
  wire _150_;
  (* src = "serial_paralelo_synth.v:50|<techmap.v>:260|<techmap.v>:222" *)
  wire _151_;
  (* src = "serial_paralelo_synth.v:50|<techmap.v>:260|<techmap.v>:222" *)
  wire _152_;
  (* src = "serial_paralelo_synth.v:50|<techmap.v>:260|<techmap.v>:222" *)
  wire _153_;
  (* src = "serial_paralelo_synth.v:50|<techmap.v>:260|<techmap.v>:222" *)
  wire _154_;
  (* src = "serial_paralelo_synth.v:50|<techmap.v>:260|<techmap.v>:222" *)
  wire _155_;
  (* src = "serial_paralelo_synth.v:50|<techmap.v>:260|<techmap.v>:222" *)
  wire _156_;
  (* src = "serial_paralelo_synth.v:50|<techmap.v>:260|<techmap.v>:222" *)
  wire _157_;
  (* src = "serial_paralelo_synth.v:50|<techmap.v>:260|<techmap.v>:222" *)
  wire _158_;
  (* src = "serial_paralelo_synth.v:50|<techmap.v>:260|<techmap.v>:222" *)
  wire _159_;
  (* src = "serial_paralelo_synth.v:50|<techmap.v>:260|<techmap.v>:222" *)
  wire _160_;
  (* src = "serial_paralelo_synth.v:50|<techmap.v>:260|<techmap.v>:222" *)
  wire _161_;
  (* src = "serial_paralelo_synth.v:50|<techmap.v>:260|<techmap.v>:222" *)
  wire _162_;
  (* src = "serial_paralelo_synth.v:50|<techmap.v>:260|<techmap.v>:222" *)
  wire _163_;
  (* src = "serial_paralelo_synth.v:50|<techmap.v>:260|<techmap.v>:222" *)
  wire _164_;
  (* src = "serial_paralelo_synth.v:50|<techmap.v>:260|<techmap.v>:229" *)
  wire _165_;
  (* src = "serial_paralelo_synth.v:50|<techmap.v>:260|<techmap.v>:229" *)
  wire _166_;
  (* src = "serial_paralelo_synth.v:50|<techmap.v>:260|<techmap.v>:229" *)
  wire _167_;
  (* src = "serial_paralelo_synth.v:50|<techmap.v>:260|<techmap.v>:229" *)
  wire _168_;
  (* src = "serial_paralelo_synth.v:50|<techmap.v>:260|<techmap.v>:221" *)
  wire _169_;
  (* src = "serial_paralelo_synth.v:50|<techmap.v>:260|<techmap.v>:221" *)
  wire _170_;
  (* src = "serial_paralelo_synth.v:50|<techmap.v>:260|<techmap.v>:221" *)
  wire _171_;
  (* src = "serial_paralelo_synth.v:50|<techmap.v>:260|<techmap.v>:221" *)
  wire _172_;
  (* src = "serial_paralelo_synth.v:50|<techmap.v>:260|<techmap.v>:221" *)
  wire _173_;
  (* src = "serial_paralelo_synth.v:50|<techmap.v>:260|<techmap.v>:221" *)
  wire _174_;
  (* src = "serial_paralelo_synth.v:50|<techmap.v>:260|<techmap.v>:221" *)
  wire _175_;
  (* src = "serial_paralelo_synth.v:50|<techmap.v>:260|<techmap.v>:221" *)
  wire _176_;
  (* src = "serial_paralelo_synth.v:50|<techmap.v>:260|<techmap.v>:221" *)
  wire _177_;
  (* src = "serial_paralelo_synth.v:50|<techmap.v>:260|<techmap.v>:221" *)
  wire _178_;
  (* src = "serial_paralelo_synth.v:50|<techmap.v>:260|<techmap.v>:221" *)
  wire _179_;
  (* src = "serial_paralelo_synth.v:50|<techmap.v>:260|<techmap.v>:221" *)
  wire _180_;
  (* src = "serial_paralelo_synth.v:50|<techmap.v>:260|<techmap.v>:221" *)
  wire _181_;
  (* src = "serial_paralelo_synth.v:50|<techmap.v>:260|<techmap.v>:221" *)
  wire _182_;
  (* src = "serial_paralelo_synth.v:50|<techmap.v>:260|<techmap.v>:221" *)
  wire _183_;
  (* src = "serial_paralelo_synth.v:50|<techmap.v>:260|<techmap.v>:221" *)
  wire _184_;
  (* src = "serial_paralelo_synth.v:50|<techmap.v>:260|<techmap.v>:221" *)
  wire _185_;
  (* src = "serial_paralelo_synth.v:50|<techmap.v>:260|<techmap.v>:221" *)
  wire _186_;
  (* src = "serial_paralelo_synth.v:50|<techmap.v>:260|<techmap.v>:221" *)
  wire _187_;
  (* src = "serial_paralelo_synth.v:50|<techmap.v>:260|<techmap.v>:221" *)
  wire _188_;
  (* src = "serial_paralelo_synth.v:50|<techmap.v>:260|<techmap.v>:221" *)
  wire _189_;
  (* src = "serial_paralelo_synth.v:50|<techmap.v>:260|<techmap.v>:221" *)
  wire _190_;
  (* src = "serial_paralelo_synth.v:50|<techmap.v>:260|<techmap.v>:221" *)
  wire _191_;
  (* src = "serial_paralelo_synth.v:50|<techmap.v>:260|<techmap.v>:221" *)
  wire _192_;
  (* src = "serial_paralelo_synth.v:50|<techmap.v>:260|<techmap.v>:221" *)
  wire _193_;
  (* src = "serial_paralelo_synth.v:11" *)
  reg [31:0] BC_counter;
  (* src = "serial_paralelo_synth.v:7" *)
  output active;
  reg active;
  (* src = "serial_paralelo_synth.v:4" *)
  input clk_32f;
  (* src = "serial_paralelo_synth.v:3" *)
  input clk_4f;
  (* src = "serial_paralelo_synth.v:13" *)
  reg [31:0] counter;
  (* src = "serial_paralelo_synth.v:12" *)
  reg [7:0] data2send;
  (* src = "serial_paralelo_synth.v:14" *)
  reg [7:0] data2send2;
  (* src = "serial_paralelo_synth.v:6" *)
  input data_in;
  (* src = "serial_paralelo_synth.v:9" *)
  output [7:0] data_out;
  reg [7:0] data_out;
  (* src = "serial_paralelo_synth.v:5" *)
  input reset;
  (* src = "serial_paralelo_synth.v:8" *)
  output valid_out;
  reg valid_out;
  assign _009_[0] = _024_[0] |(* src = "serial_paralelo_synth.v:57" *)  _024_[1];
  assign _010_[0] = _009_[0] |(* src = "serial_paralelo_synth.v:57" *)  _009_[1];
  assign _011_[0] = _010_[0] |(* src = "serial_paralelo_synth.v:57" *)  _010_[1];
  assign _032_ = _011_[0] |(* src = "serial_paralelo_synth.v:57" *)  _011_[1];
  assign _012_[0] = _008_[0] |(* src = "serial_paralelo_synth.v:62" *)  counter[1];
  assign _012_[1] = counter[2] |(* src = "serial_paralelo_synth.v:62" *)  counter[3];
  assign _012_[2] = counter[4] |(* src = "serial_paralelo_synth.v:62" *)  counter[5];
  assign _012_[3] = counter[6] |(* src = "serial_paralelo_synth.v:62" *)  counter[7];
  assign _012_[4] = counter[8] |(* src = "serial_paralelo_synth.v:62" *)  counter[9];
  assign _012_[5] = counter[10] |(* src = "serial_paralelo_synth.v:62" *)  counter[11];
  assign _012_[6] = counter[12] |(* src = "serial_paralelo_synth.v:62" *)  counter[13];
  assign _012_[7] = counter[14] |(* src = "serial_paralelo_synth.v:62" *)  counter[15];
  assign _012_[8] = counter[16] |(* src = "serial_paralelo_synth.v:62" *)  counter[17];
  assign _012_[9] = counter[18] |(* src = "serial_paralelo_synth.v:62" *)  counter[19];
  assign _012_[10] = counter[20] |(* src = "serial_paralelo_synth.v:62" *)  counter[21];
  assign _012_[11] = counter[22] |(* src = "serial_paralelo_synth.v:62" *)  counter[23];
  assign _012_[12] = counter[24] |(* src = "serial_paralelo_synth.v:62" *)  counter[25];
  assign _012_[13] = counter[26] |(* src = "serial_paralelo_synth.v:62" *)  counter[27];
  assign _012_[14] = counter[28] |(* src = "serial_paralelo_synth.v:62" *)  counter[29];
  assign _012_[15] = counter[30] |(* src = "serial_paralelo_synth.v:62" *)  counter[31];
  assign _013_[0] = _012_[0] |(* src = "serial_paralelo_synth.v:62" *)  _012_[1];
  assign _009_[1] = _012_[2] |(* src = "serial_paralelo_synth.v:62" *)  _012_[3];
  assign _009_[2] = _012_[4] |(* src = "serial_paralelo_synth.v:62" *)  _012_[5];
  assign _009_[3] = _012_[6] |(* src = "serial_paralelo_synth.v:62" *)  _012_[7];
  assign _009_[4] = _012_[8] |(* src = "serial_paralelo_synth.v:62" *)  _012_[9];
  assign _009_[5] = _012_[10] |(* src = "serial_paralelo_synth.v:62" *)  _012_[11];
  assign _009_[6] = _012_[12] |(* src = "serial_paralelo_synth.v:62" *)  _012_[13];
  assign _009_[7] = _012_[14] |(* src = "serial_paralelo_synth.v:62" *)  _012_[15];
  assign _014_[0] = _013_[0] |(* src = "serial_paralelo_synth.v:62" *)  _009_[1];
  assign _010_[1] = _009_[2] |(* src = "serial_paralelo_synth.v:62" *)  _009_[3];
  assign _010_[2] = _009_[4] |(* src = "serial_paralelo_synth.v:62" *)  _009_[5];
  assign _010_[3] = _009_[6] |(* src = "serial_paralelo_synth.v:62" *)  _009_[7];
  assign _015_[0] = _014_[0] |(* src = "serial_paralelo_synth.v:62" *)  _010_[1];
  assign _011_[1] = _010_[2] |(* src = "serial_paralelo_synth.v:62" *)  _010_[3];
  assign _029_ = _015_[0] |(* src = "serial_paralelo_synth.v:62" *)  _011_[1];
  assign _016_[0] = BC_counter[0] |(* src = "serial_paralelo_synth.v:29" *)  BC_counter[1];
  assign _016_[1] = _025_[2] |(* src = "serial_paralelo_synth.v:29" *)  BC_counter[3];
  assign _016_[2] = BC_counter[4] |(* src = "serial_paralelo_synth.v:29" *)  BC_counter[5];
  assign _016_[3] = BC_counter[6] |(* src = "serial_paralelo_synth.v:29" *)  BC_counter[7];
  assign _016_[4] = BC_counter[8] |(* src = "serial_paralelo_synth.v:29" *)  BC_counter[9];
  assign _016_[5] = BC_counter[10] |(* src = "serial_paralelo_synth.v:29" *)  BC_counter[11];
  assign _016_[6] = BC_counter[12] |(* src = "serial_paralelo_synth.v:29" *)  BC_counter[13];
  assign _016_[7] = BC_counter[14] |(* src = "serial_paralelo_synth.v:29" *)  BC_counter[15];
  assign _016_[8] = BC_counter[16] |(* src = "serial_paralelo_synth.v:29" *)  BC_counter[17];
  assign _016_[9] = BC_counter[18] |(* src = "serial_paralelo_synth.v:29" *)  BC_counter[19];
  assign _016_[10] = BC_counter[20] |(* src = "serial_paralelo_synth.v:29" *)  BC_counter[21];
  assign _016_[11] = BC_counter[22] |(* src = "serial_paralelo_synth.v:29" *)  BC_counter[23];
  assign _016_[12] = BC_counter[24] |(* src = "serial_paralelo_synth.v:29" *)  BC_counter[25];
  assign _016_[13] = BC_counter[26] |(* src = "serial_paralelo_synth.v:29" *)  BC_counter[27];
  assign _016_[14] = BC_counter[28] |(* src = "serial_paralelo_synth.v:29" *)  BC_counter[29];
  assign _016_[15] = BC_counter[30] |(* src = "serial_paralelo_synth.v:29" *)  BC_counter[31];
  assign _017_[0] = _016_[0] |(* src = "serial_paralelo_synth.v:29" *)  _016_[1];
  assign _017_[1] = _016_[2] |(* src = "serial_paralelo_synth.v:29" *)  _016_[3];
  assign _017_[2] = _016_[4] |(* src = "serial_paralelo_synth.v:29" *)  _016_[5];
  assign _017_[3] = _016_[6] |(* src = "serial_paralelo_synth.v:29" *)  _016_[7];
  assign _017_[4] = _016_[8] |(* src = "serial_paralelo_synth.v:29" *)  _016_[9];
  assign _017_[5] = _016_[10] |(* src = "serial_paralelo_synth.v:29" *)  _016_[11];
  assign _017_[6] = _016_[12] |(* src = "serial_paralelo_synth.v:29" *)  _016_[13];
  assign _017_[7] = _016_[14] |(* src = "serial_paralelo_synth.v:29" *)  _016_[15];
  assign _018_[0] = _017_[0] |(* src = "serial_paralelo_synth.v:29" *)  _017_[1];
  assign _018_[1] = _017_[2] |(* src = "serial_paralelo_synth.v:29" *)  _017_[3];
  assign _018_[2] = _017_[4] |(* src = "serial_paralelo_synth.v:29" *)  _017_[5];
  assign _018_[3] = _017_[6] |(* src = "serial_paralelo_synth.v:29" *)  _017_[7];
  assign _019_[0] = _018_[0] |(* src = "serial_paralelo_synth.v:29" *)  _018_[1];
  assign _019_[1] = _018_[2] |(* src = "serial_paralelo_synth.v:29" *)  _018_[3];
  assign _030_ = _019_[0] |(* src = "serial_paralelo_synth.v:29" *)  _019_[1];
  assign _020_[0] = data2send2[0] |(* src = "serial_paralelo_synth.v:32" *)  data2send2[1];
  assign _020_[1] = _026_[2] |(* src = "serial_paralelo_synth.v:32" *)  _026_[3];
  assign _020_[2] = _026_[4] |(* src = "serial_paralelo_synth.v:32" *)  _026_[5];
  assign _020_[3] = data2send2[6] |(* src = "serial_paralelo_synth.v:32" *)  _026_[7];
  assign _021_[0] = _020_[0] |(* src = "serial_paralelo_synth.v:32" *)  _020_[1];
  assign _021_[1] = _020_[2] |(* src = "serial_paralelo_synth.v:32" *)  _020_[3];
  assign _041_ = _021_[0] |(* src = "serial_paralelo_synth.v:32" *)  _021_[1];
  assign _023_[1] = _022_[2] |(* src = "serial_paralelo_synth.v:43" *)  _022_[3];
  assign _022_[0] = data2send[0] |(* src = "serial_paralelo_synth.v:50" *)  data2send[1];
  assign _022_[1] = _027_[2] |(* src = "serial_paralelo_synth.v:50" *)  _027_[3];
  assign _022_[2] = _027_[4] |(* src = "serial_paralelo_synth.v:50" *)  _027_[5];
  assign _022_[3] = data2send[6] |(* src = "serial_paralelo_synth.v:50" *)  _027_[7];
  assign _023_[0] = _022_[0] |(* src = "serial_paralelo_synth.v:50" *)  _022_[1];
  assign _031_ = _023_[0] |(* src = "serial_paralelo_synth.v:50" *)  _023_[1];
  assign _024_[0] = _008_[0] |(* src = "serial_paralelo_synth.v:57" *)  _028_[1];
  assign _024_[1] = _028_[2] |(* src = "serial_paralelo_synth.v:57" *)  counter[3];
  assign _034_ = ~(* src = "serial_paralelo_synth.v:62" *) _029_;
  assign _033_ = ~(* src = "serial_paralelo_synth.v:29" *) _030_;
  assign _035_ = ~(* src = "serial_paralelo_synth.v:43" *) _031_;
  assign _036_ = _033_ &(* src = "serial_paralelo_synth.v:29" *)  _034_;
  assign _037_ = _035_ &(* src = "serial_paralelo_synth.v:32" *)  _041_;
  assign _038_ = _035_ &(* src = "serial_paralelo_synth.v:43" *)  _040_;
  assign _039_ = _031_ &(* src = "serial_paralelo_synth.v:50" *)  _040_;
  assign _043_ = _038_ ? (* src = "serial_paralelo_synth.v:43" *) active : _042_;
  assign _042_ = _039_ ? (* src = "serial_paralelo_synth.v:50" *) 1'h0 : active;
  assign _044_ = _036_ ? (* src = "serial_paralelo_synth.v:29" *) 1'h1 : _043_;
  assign _001_ = reset ? (* src = "serial_paralelo_synth.v:18" *) 1'h0 : _044_;
  assign _003_[0] = reset ? (* src = "serial_paralelo_synth.v:18" *) data2send2[0] : _045_[0];
  assign _003_[1] = reset ? (* src = "serial_paralelo_synth.v:18" *) data2send2[1] : _045_[1];
  assign _003_[2] = reset ? (* src = "serial_paralelo_synth.v:18" *) data2send2[2] : _045_[2];
  assign _003_[3] = reset ? (* src = "serial_paralelo_synth.v:18" *) data2send2[3] : _045_[3];
  assign _003_[4] = reset ? (* src = "serial_paralelo_synth.v:18" *) data2send2[4] : _045_[4];
  assign _003_[5] = reset ? (* src = "serial_paralelo_synth.v:18" *) data2send2[5] : _045_[5];
  assign _003_[6] = reset ? (* src = "serial_paralelo_synth.v:18" *) data2send2[6] : _045_[6];
  assign _003_[7] = reset ? (* src = "serial_paralelo_synth.v:18" *) data2send2[7] : _045_[7];
  assign _045_[0] = _029_ ? (* src = "serial_paralelo_synth.v:62" *) data2send2[0] : data2send[0];
  assign _045_[1] = _029_ ? (* src = "serial_paralelo_synth.v:62" *) data2send2[1] : data2send[1];
  assign _045_[2] = _029_ ? (* src = "serial_paralelo_synth.v:62" *) data2send2[2] : data2send[2];
  assign _045_[3] = _029_ ? (* src = "serial_paralelo_synth.v:62" *) data2send2[3] : data2send[3];
  assign _045_[4] = _029_ ? (* src = "serial_paralelo_synth.v:62" *) data2send2[4] : data2send[4];
  assign _045_[5] = _029_ ? (* src = "serial_paralelo_synth.v:62" *) data2send2[5] : data2send[5];
  assign _045_[6] = _029_ ? (* src = "serial_paralelo_synth.v:62" *) data2send2[6] : data2send[6];
  assign _045_[7] = _029_ ? (* src = "serial_paralelo_synth.v:62" *) data2send2[7] : data2send[7];
  assign _002_[0] = reset ? (* src = "serial_paralelo_synth.v:18" *) 1'h0 : _046_[0];
  assign _002_[1] = reset ? (* src = "serial_paralelo_synth.v:18" *) 1'h0 : _046_[1];
  assign _002_[2] = reset ? (* src = "serial_paralelo_synth.v:18" *) 1'h0 : _046_[2];
  assign _002_[3] = reset ? (* src = "serial_paralelo_synth.v:18" *) 1'h0 : _046_[3];
  assign _002_[4] = reset ? (* src = "serial_paralelo_synth.v:18" *) 1'h0 : _046_[4];
  assign _002_[5] = reset ? (* src = "serial_paralelo_synth.v:18" *) 1'h0 : _046_[5];
  assign _002_[6] = reset ? (* src = "serial_paralelo_synth.v:18" *) 1'h0 : _046_[6];
  assign _002_[7] = reset ? (* src = "serial_paralelo_synth.v:18" *) 1'h0 : _046_[7];
  assign _002_[8] = reset ? (* src = "serial_paralelo_synth.v:18" *) 1'h0 : _046_[8];
  assign _002_[9] = reset ? (* src = "serial_paralelo_synth.v:18" *) 1'h0 : _046_[9];
  assign _002_[10] = reset ? (* src = "serial_paralelo_synth.v:18" *) 1'h0 : _046_[10];
  assign _002_[11] = reset ? (* src = "serial_paralelo_synth.v:18" *) 1'h0 : _046_[11];
  assign _002_[12] = reset ? (* src = "serial_paralelo_synth.v:18" *) 1'h0 : _046_[12];
  assign _002_[13] = reset ? (* src = "serial_paralelo_synth.v:18" *) 1'h0 : _046_[13];
  assign _002_[14] = reset ? (* src = "serial_paralelo_synth.v:18" *) 1'h0 : _046_[14];
  assign _002_[15] = reset ? (* src = "serial_paralelo_synth.v:18" *) 1'h0 : _046_[15];
  assign _002_[16] = reset ? (* src = "serial_paralelo_synth.v:18" *) 1'h0 : _046_[16];
  assign _002_[17] = reset ? (* src = "serial_paralelo_synth.v:18" *) 1'h0 : _046_[17];
  assign _002_[18] = reset ? (* src = "serial_paralelo_synth.v:18" *) 1'h0 : _046_[18];
  assign _002_[19] = reset ? (* src = "serial_paralelo_synth.v:18" *) 1'h0 : _046_[19];
  assign _002_[20] = reset ? (* src = "serial_paralelo_synth.v:18" *) 1'h0 : _046_[20];
  assign _002_[21] = reset ? (* src = "serial_paralelo_synth.v:18" *) 1'h0 : _046_[21];
  assign _002_[22] = reset ? (* src = "serial_paralelo_synth.v:18" *) 1'h0 : _046_[22];
  assign _002_[23] = reset ? (* src = "serial_paralelo_synth.v:18" *) 1'h0 : _046_[23];
  assign _002_[24] = reset ? (* src = "serial_paralelo_synth.v:18" *) 1'h0 : _046_[24];
  assign _002_[25] = reset ? (* src = "serial_paralelo_synth.v:18" *) 1'h0 : _046_[25];
  assign _002_[26] = reset ? (* src = "serial_paralelo_synth.v:18" *) 1'h0 : _046_[26];
  assign _002_[27] = reset ? (* src = "serial_paralelo_synth.v:18" *) 1'h0 : _046_[27];
  assign _002_[28] = reset ? (* src = "serial_paralelo_synth.v:18" *) 1'h0 : _046_[28];
  assign _002_[29] = reset ? (* src = "serial_paralelo_synth.v:18" *) 1'h0 : _046_[29];
  assign _002_[30] = reset ? (* src = "serial_paralelo_synth.v:18" *) 1'h0 : _046_[30];
  assign _002_[31] = reset ? (* src = "serial_paralelo_synth.v:18" *) 1'h0 : _046_[31];
  assign _046_[0] = _032_ ? (* src = "serial_paralelo_synth.v:57" *) _008_[0] : 1'h0;
  assign _046_[1] = _032_ ? (* src = "serial_paralelo_synth.v:57" *) _008_[1] : 1'h0;
  assign _046_[2] = _032_ ? (* src = "serial_paralelo_synth.v:57" *) _008_[2] : 1'h0;
  assign _046_[3] = _032_ ? (* src = "serial_paralelo_synth.v:57" *) _008_[3] : 1'h0;
  assign _046_[4] = _032_ ? (* src = "serial_paralelo_synth.v:57" *) _008_[4] : 1'h0;
  assign _046_[5] = _032_ ? (* src = "serial_paralelo_synth.v:57" *) _008_[5] : 1'h0;
  assign _046_[6] = _032_ ? (* src = "serial_paralelo_synth.v:57" *) _008_[6] : 1'h0;
  assign _046_[7] = _032_ ? (* src = "serial_paralelo_synth.v:57" *) _008_[7] : 1'h0;
  assign _046_[8] = _032_ ? (* src = "serial_paralelo_synth.v:57" *) _008_[8] : 1'h0;
  assign _046_[9] = _032_ ? (* src = "serial_paralelo_synth.v:57" *) _008_[9] : 1'h0;
  assign _046_[10] = _032_ ? (* src = "serial_paralelo_synth.v:57" *) _008_[10] : 1'h0;
  assign _046_[11] = _032_ ? (* src = "serial_paralelo_synth.v:57" *) _008_[11] : 1'h0;
  assign _046_[12] = _032_ ? (* src = "serial_paralelo_synth.v:57" *) _008_[12] : 1'h0;
  assign _046_[13] = _032_ ? (* src = "serial_paralelo_synth.v:57" *) _008_[13] : 1'h0;
  assign _046_[14] = _032_ ? (* src = "serial_paralelo_synth.v:57" *) _008_[14] : 1'h0;
  assign _046_[15] = _032_ ? (* src = "serial_paralelo_synth.v:57" *) _008_[15] : 1'h0;
  assign _046_[16] = _032_ ? (* src = "serial_paralelo_synth.v:57" *) _008_[16] : 1'h0;
  assign _046_[17] = _032_ ? (* src = "serial_paralelo_synth.v:57" *) _008_[17] : 1'h0;
  assign _046_[18] = _032_ ? (* src = "serial_paralelo_synth.v:57" *) _008_[18] : 1'h0;
  assign _046_[19] = _032_ ? (* src = "serial_paralelo_synth.v:57" *) _008_[19] : 1'h0;
  assign _046_[20] = _032_ ? (* src = "serial_paralelo_synth.v:57" *) _008_[20] : 1'h0;
  assign _046_[21] = _032_ ? (* src = "serial_paralelo_synth.v:57" *) _008_[21] : 1'h0;
  assign _046_[22] = _032_ ? (* src = "serial_paralelo_synth.v:57" *) _008_[22] : 1'h0;
  assign _046_[23] = _032_ ? (* src = "serial_paralelo_synth.v:57" *) _008_[23] : 1'h0;
  assign _046_[24] = _032_ ? (* src = "serial_paralelo_synth.v:57" *) _008_[24] : 1'h0;
  assign _046_[25] = _032_ ? (* src = "serial_paralelo_synth.v:57" *) _008_[25] : 1'h0;
  assign _046_[26] = _032_ ? (* src = "serial_paralelo_synth.v:57" *) _008_[26] : 1'h0;
  assign _046_[27] = _032_ ? (* src = "serial_paralelo_synth.v:57" *) _008_[27] : 1'h0;
  assign _046_[28] = _032_ ? (* src = "serial_paralelo_synth.v:57" *) _008_[28] : 1'h0;
  assign _046_[29] = _032_ ? (* src = "serial_paralelo_synth.v:57" *) _008_[29] : 1'h0;
  assign _046_[30] = _032_ ? (* src = "serial_paralelo_synth.v:57" *) _008_[30] : 1'h0;
  assign _046_[31] = _032_ ? (* src = "serial_paralelo_synth.v:57" *) _008_[31] : 1'h0;
  assign _047_[0] = _038_ ? (* src = "serial_paralelo_synth.v:43" *) _007_[0] : BC_counter[0];
  assign _047_[1] = _038_ ? (* src = "serial_paralelo_synth.v:43" *) _007_[1] : BC_counter[1];
  assign _047_[2] = _038_ ? (* src = "serial_paralelo_synth.v:43" *) _007_[2] : BC_counter[2];
  assign _047_[3] = _038_ ? (* src = "serial_paralelo_synth.v:43" *) _007_[3] : BC_counter[3];
  assign _047_[4] = _038_ ? (* src = "serial_paralelo_synth.v:43" *) _007_[4] : BC_counter[4];
  assign _047_[5] = _038_ ? (* src = "serial_paralelo_synth.v:43" *) _007_[5] : BC_counter[5];
  assign _047_[6] = _038_ ? (* src = "serial_paralelo_synth.v:43" *) _007_[6] : BC_counter[6];
  assign _047_[7] = _038_ ? (* src = "serial_paralelo_synth.v:43" *) _007_[7] : BC_counter[7];
  assign _047_[8] = _038_ ? (* src = "serial_paralelo_synth.v:43" *) _007_[8] : BC_counter[8];
  assign _047_[9] = _038_ ? (* src = "serial_paralelo_synth.v:43" *) _007_[9] : BC_counter[9];
  assign _047_[10] = _038_ ? (* src = "serial_paralelo_synth.v:43" *) _007_[10] : BC_counter[10];
  assign _047_[11] = _038_ ? (* src = "serial_paralelo_synth.v:43" *) _007_[11] : BC_counter[11];
  assign _047_[12] = _038_ ? (* src = "serial_paralelo_synth.v:43" *) _007_[12] : BC_counter[12];
  assign _047_[13] = _038_ ? (* src = "serial_paralelo_synth.v:43" *) _007_[13] : BC_counter[13];
  assign _047_[14] = _038_ ? (* src = "serial_paralelo_synth.v:43" *) _007_[14] : BC_counter[14];
  assign _047_[15] = _038_ ? (* src = "serial_paralelo_synth.v:43" *) _007_[15] : BC_counter[15];
  assign _047_[16] = _038_ ? (* src = "serial_paralelo_synth.v:43" *) _007_[16] : BC_counter[16];
  assign _047_[17] = _038_ ? (* src = "serial_paralelo_synth.v:43" *) _007_[17] : BC_counter[17];
  assign _047_[18] = _038_ ? (* src = "serial_paralelo_synth.v:43" *) _007_[18] : BC_counter[18];
  assign _047_[19] = _038_ ? (* src = "serial_paralelo_synth.v:43" *) _007_[19] : BC_counter[19];
  assign _047_[20] = _038_ ? (* src = "serial_paralelo_synth.v:43" *) _007_[20] : BC_counter[20];
  assign _047_[21] = _038_ ? (* src = "serial_paralelo_synth.v:43" *) _007_[21] : BC_counter[21];
  assign _047_[22] = _038_ ? (* src = "serial_paralelo_synth.v:43" *) _007_[22] : BC_counter[22];
  assign _047_[23] = _038_ ? (* src = "serial_paralelo_synth.v:43" *) _007_[23] : BC_counter[23];
  assign _047_[24] = _038_ ? (* src = "serial_paralelo_synth.v:43" *) _007_[24] : BC_counter[24];
  assign _047_[25] = _038_ ? (* src = "serial_paralelo_synth.v:43" *) _007_[25] : BC_counter[25];
  assign _047_[26] = _038_ ? (* src = "serial_paralelo_synth.v:43" *) _007_[26] : BC_counter[26];
  assign _047_[27] = _038_ ? (* src = "serial_paralelo_synth.v:43" *) _007_[27] : BC_counter[27];
  assign _047_[28] = _038_ ? (* src = "serial_paralelo_synth.v:43" *) _007_[28] : BC_counter[28];
  assign _047_[29] = _038_ ? (* src = "serial_paralelo_synth.v:43" *) _007_[29] : BC_counter[29];
  assign _047_[30] = _038_ ? (* src = "serial_paralelo_synth.v:43" *) _007_[30] : BC_counter[30];
  assign _047_[31] = _038_ ? (* src = "serial_paralelo_synth.v:43" *) _007_[31] : BC_counter[31];
  assign _004_[0] = reset ? (* src = "serial_paralelo_synth.v:18" *) 1'h0 : data_in;
  assign _004_[1] = reset ? (* src = "serial_paralelo_synth.v:18" *) 1'h0 : data2send[0];
  assign _004_[2] = reset ? (* src = "serial_paralelo_synth.v:18" *) 1'h0 : data2send[1];
  assign _004_[3] = reset ? (* src = "serial_paralelo_synth.v:18" *) 1'h0 : data2send[2];
  assign _004_[4] = reset ? (* src = "serial_paralelo_synth.v:18" *) 1'h0 : data2send[3];
  assign _004_[5] = reset ? (* src = "serial_paralelo_synth.v:18" *) 1'h0 : data2send[4];
  assign _004_[6] = reset ? (* src = "serial_paralelo_synth.v:18" *) 1'h0 : data2send[5];
  assign _004_[7] = reset ? (* src = "serial_paralelo_synth.v:18" *) 1'h0 : data2send[6];
  assign _048_[0] = _036_ ? (* src = "serial_paralelo_synth.v:29" *) BC_counter[0] : _047_[0];
  assign _048_[1] = _036_ ? (* src = "serial_paralelo_synth.v:29" *) BC_counter[1] : _047_[1];
  assign _048_[2] = _036_ ? (* src = "serial_paralelo_synth.v:29" *) BC_counter[2] : _047_[2];
  assign _048_[3] = _036_ ? (* src = "serial_paralelo_synth.v:29" *) BC_counter[3] : _047_[3];
  assign _048_[4] = _036_ ? (* src = "serial_paralelo_synth.v:29" *) BC_counter[4] : _047_[4];
  assign _048_[5] = _036_ ? (* src = "serial_paralelo_synth.v:29" *) BC_counter[5] : _047_[5];
  assign _048_[6] = _036_ ? (* src = "serial_paralelo_synth.v:29" *) BC_counter[6] : _047_[6];
  assign _048_[7] = _036_ ? (* src = "serial_paralelo_synth.v:29" *) BC_counter[7] : _047_[7];
  assign _048_[8] = _036_ ? (* src = "serial_paralelo_synth.v:29" *) BC_counter[8] : _047_[8];
  assign _048_[9] = _036_ ? (* src = "serial_paralelo_synth.v:29" *) BC_counter[9] : _047_[9];
  assign _048_[10] = _036_ ? (* src = "serial_paralelo_synth.v:29" *) BC_counter[10] : _047_[10];
  assign _048_[11] = _036_ ? (* src = "serial_paralelo_synth.v:29" *) BC_counter[11] : _047_[11];
  assign _048_[12] = _036_ ? (* src = "serial_paralelo_synth.v:29" *) BC_counter[12] : _047_[12];
  assign _048_[13] = _036_ ? (* src = "serial_paralelo_synth.v:29" *) BC_counter[13] : _047_[13];
  assign _048_[14] = _036_ ? (* src = "serial_paralelo_synth.v:29" *) BC_counter[14] : _047_[14];
  assign _048_[15] = _036_ ? (* src = "serial_paralelo_synth.v:29" *) BC_counter[15] : _047_[15];
  assign _048_[16] = _036_ ? (* src = "serial_paralelo_synth.v:29" *) BC_counter[16] : _047_[16];
  assign _048_[17] = _036_ ? (* src = "serial_paralelo_synth.v:29" *) BC_counter[17] : _047_[17];
  assign _048_[18] = _036_ ? (* src = "serial_paralelo_synth.v:29" *) BC_counter[18] : _047_[18];
  assign _048_[19] = _036_ ? (* src = "serial_paralelo_synth.v:29" *) BC_counter[19] : _047_[19];
  assign _048_[20] = _036_ ? (* src = "serial_paralelo_synth.v:29" *) BC_counter[20] : _047_[20];
  assign _048_[21] = _036_ ? (* src = "serial_paralelo_synth.v:29" *) BC_counter[21] : _047_[21];
  assign _048_[22] = _036_ ? (* src = "serial_paralelo_synth.v:29" *) BC_counter[22] : _047_[22];
  assign _048_[23] = _036_ ? (* src = "serial_paralelo_synth.v:29" *) BC_counter[23] : _047_[23];
  assign _048_[24] = _036_ ? (* src = "serial_paralelo_synth.v:29" *) BC_counter[24] : _047_[24];
  assign _048_[25] = _036_ ? (* src = "serial_paralelo_synth.v:29" *) BC_counter[25] : _047_[25];
  assign _048_[26] = _036_ ? (* src = "serial_paralelo_synth.v:29" *) BC_counter[26] : _047_[26];
  assign _048_[27] = _036_ ? (* src = "serial_paralelo_synth.v:29" *) BC_counter[27] : _047_[27];
  assign _048_[28] = _036_ ? (* src = "serial_paralelo_synth.v:29" *) BC_counter[28] : _047_[28];
  assign _048_[29] = _036_ ? (* src = "serial_paralelo_synth.v:29" *) BC_counter[29] : _047_[29];
  assign _048_[30] = _036_ ? (* src = "serial_paralelo_synth.v:29" *) BC_counter[30] : _047_[30];
  assign _048_[31] = _036_ ? (* src = "serial_paralelo_synth.v:29" *) BC_counter[31] : _047_[31];
  assign _000_[0] = reset ? (* src = "serial_paralelo_synth.v:18" *) 1'h0 : _048_[0];
  assign _000_[1] = reset ? (* src = "serial_paralelo_synth.v:18" *) 1'h0 : _048_[1];
  assign _000_[2] = reset ? (* src = "serial_paralelo_synth.v:18" *) 1'h0 : _048_[2];
  assign _000_[3] = reset ? (* src = "serial_paralelo_synth.v:18" *) 1'h0 : _048_[3];
  assign _000_[4] = reset ? (* src = "serial_paralelo_synth.v:18" *) 1'h0 : _048_[4];
  assign _000_[5] = reset ? (* src = "serial_paralelo_synth.v:18" *) 1'h0 : _048_[5];
  assign _000_[6] = reset ? (* src = "serial_paralelo_synth.v:18" *) 1'h0 : _048_[6];
  assign _000_[7] = reset ? (* src = "serial_paralelo_synth.v:18" *) 1'h0 : _048_[7];
  assign _000_[8] = reset ? (* src = "serial_paralelo_synth.v:18" *) 1'h0 : _048_[8];
  assign _000_[9] = reset ? (* src = "serial_paralelo_synth.v:18" *) 1'h0 : _048_[9];
  assign _000_[10] = reset ? (* src = "serial_paralelo_synth.v:18" *) 1'h0 : _048_[10];
  assign _000_[11] = reset ? (* src = "serial_paralelo_synth.v:18" *) 1'h0 : _048_[11];
  assign _000_[12] = reset ? (* src = "serial_paralelo_synth.v:18" *) 1'h0 : _048_[12];
  assign _000_[13] = reset ? (* src = "serial_paralelo_synth.v:18" *) 1'h0 : _048_[13];
  assign _000_[14] = reset ? (* src = "serial_paralelo_synth.v:18" *) 1'h0 : _048_[14];
  assign _000_[15] = reset ? (* src = "serial_paralelo_synth.v:18" *) 1'h0 : _048_[15];
  assign _000_[16] = reset ? (* src = "serial_paralelo_synth.v:18" *) 1'h0 : _048_[16];
  assign _000_[17] = reset ? (* src = "serial_paralelo_synth.v:18" *) 1'h0 : _048_[17];
  assign _000_[18] = reset ? (* src = "serial_paralelo_synth.v:18" *) 1'h0 : _048_[18];
  assign _000_[19] = reset ? (* src = "serial_paralelo_synth.v:18" *) 1'h0 : _048_[19];
  assign _000_[20] = reset ? (* src = "serial_paralelo_synth.v:18" *) 1'h0 : _048_[20];
  assign _000_[21] = reset ? (* src = "serial_paralelo_synth.v:18" *) 1'h0 : _048_[21];
  assign _000_[22] = reset ? (* src = "serial_paralelo_synth.v:18" *) 1'h0 : _048_[22];
  assign _000_[23] = reset ? (* src = "serial_paralelo_synth.v:18" *) 1'h0 : _048_[23];
  assign _000_[24] = reset ? (* src = "serial_paralelo_synth.v:18" *) 1'h0 : _048_[24];
  assign _000_[25] = reset ? (* src = "serial_paralelo_synth.v:18" *) 1'h0 : _048_[25];
  assign _000_[26] = reset ? (* src = "serial_paralelo_synth.v:18" *) 1'h0 : _048_[26];
  assign _000_[27] = reset ? (* src = "serial_paralelo_synth.v:18" *) 1'h0 : _048_[27];
  assign _000_[28] = reset ? (* src = "serial_paralelo_synth.v:18" *) 1'h0 : _048_[28];
  assign _000_[29] = reset ? (* src = "serial_paralelo_synth.v:18" *) 1'h0 : _048_[29];
  assign _000_[30] = reset ? (* src = "serial_paralelo_synth.v:18" *) 1'h0 : _048_[30];
  assign _000_[31] = reset ? (* src = "serial_paralelo_synth.v:18" *) 1'h0 : _048_[31];
  assign _051_ = _031_ ? (* src = "serial_paralelo_synth.v:36" *) 1'h1 : valid_out;
  assign _049_ = _039_ ? (* src = "serial_paralelo_synth.v:50" *) 1'h0 : valid_out;
  assign _050_ = _038_ ? (* src = "serial_paralelo_synth.v:43" *) 1'h0 : _049_;
  assign _052_ = _037_ ? (* src = "serial_paralelo_synth.v:32" *) 1'h0 : _051_;
  assign _053_ = _036_ ? (* src = "serial_paralelo_synth.v:29" *) _052_ : _050_;
  assign _006_ = reset ? (* src = "serial_paralelo_synth.v:18" *) 1'h0 : _053_;
  assign _056_[0] = _031_ ? (* src = "serial_paralelo_synth.v:36" *) data2send[0] : data_out[0];
  assign _056_[1] = _031_ ? (* src = "serial_paralelo_synth.v:36" *) data2send[1] : data_out[1];
  assign _056_[2] = _031_ ? (* src = "serial_paralelo_synth.v:36" *) data2send[2] : data_out[2];
  assign _056_[3] = _031_ ? (* src = "serial_paralelo_synth.v:36" *) data2send[3] : data_out[3];
  assign _056_[4] = _031_ ? (* src = "serial_paralelo_synth.v:36" *) data2send[4] : data_out[4];
  assign _056_[5] = _031_ ? (* src = "serial_paralelo_synth.v:36" *) data2send[5] : data_out[5];
  assign _056_[6] = _031_ ? (* src = "serial_paralelo_synth.v:36" *) data2send[6] : data_out[6];
  assign _056_[7] = _031_ ? (* src = "serial_paralelo_synth.v:36" *) data2send[7] : data_out[7];
  assign _054_[0] = _039_ ? (* src = "serial_paralelo_synth.v:50" *) 1'h0 : data_out[0];
  assign _054_[1] = _039_ ? (* src = "serial_paralelo_synth.v:50" *) 1'h0 : data_out[1];
  assign _054_[2] = _039_ ? (* src = "serial_paralelo_synth.v:50" *) 1'h0 : data_out[2];
  assign _054_[3] = _039_ ? (* src = "serial_paralelo_synth.v:50" *) 1'h0 : data_out[3];
  assign _054_[4] = _039_ ? (* src = "serial_paralelo_synth.v:50" *) 1'h0 : data_out[4];
  assign _054_[5] = _039_ ? (* src = "serial_paralelo_synth.v:50" *) 1'h0 : data_out[5];
  assign _054_[6] = _039_ ? (* src = "serial_paralelo_synth.v:50" *) 1'h0 : data_out[6];
  assign _054_[7] = _039_ ? (* src = "serial_paralelo_synth.v:50" *) 1'h0 : data_out[7];
  assign _055_[0] = _038_ ? (* src = "serial_paralelo_synth.v:43" *) 1'h0 : _054_[0];
  assign _055_[1] = _038_ ? (* src = "serial_paralelo_synth.v:43" *) 1'h0 : _054_[1];
  assign _055_[2] = _038_ ? (* src = "serial_paralelo_synth.v:43" *) 1'h0 : _054_[2];
  assign _055_[3] = _038_ ? (* src = "serial_paralelo_synth.v:43" *) 1'h0 : _054_[3];
  assign _055_[4] = _038_ ? (* src = "serial_paralelo_synth.v:43" *) 1'h0 : _054_[4];
  assign _055_[5] = _038_ ? (* src = "serial_paralelo_synth.v:43" *) 1'h0 : _054_[5];
  assign _055_[6] = _038_ ? (* src = "serial_paralelo_synth.v:43" *) 1'h0 : _054_[6];
  assign _055_[7] = _038_ ? (* src = "serial_paralelo_synth.v:43" *) 1'h0 : _054_[7];
  assign _057_[0] = _037_ ? (* src = "serial_paralelo_synth.v:32" *) data_out[0] : _056_[0];
  assign _057_[1] = _037_ ? (* src = "serial_paralelo_synth.v:32" *) data_out[1] : _056_[1];
  assign _057_[2] = _037_ ? (* src = "serial_paralelo_synth.v:32" *) data_out[2] : _056_[2];
  assign _057_[3] = _037_ ? (* src = "serial_paralelo_synth.v:32" *) data_out[3] : _056_[3];
  assign _057_[4] = _037_ ? (* src = "serial_paralelo_synth.v:32" *) data_out[4] : _056_[4];
  assign _057_[5] = _037_ ? (* src = "serial_paralelo_synth.v:32" *) data_out[5] : _056_[5];
  assign _057_[6] = _037_ ? (* src = "serial_paralelo_synth.v:32" *) data_out[6] : _056_[6];
  assign _057_[7] = _037_ ? (* src = "serial_paralelo_synth.v:32" *) data_out[7] : _056_[7];
  assign _058_[0] = _036_ ? (* src = "serial_paralelo_synth.v:29" *) _057_[0] : _055_[0];
  assign _058_[1] = _036_ ? (* src = "serial_paralelo_synth.v:29" *) _057_[1] : _055_[1];
  assign _058_[2] = _036_ ? (* src = "serial_paralelo_synth.v:29" *) _057_[2] : _055_[2];
  assign _058_[3] = _036_ ? (* src = "serial_paralelo_synth.v:29" *) _057_[3] : _055_[3];
  assign _058_[4] = _036_ ? (* src = "serial_paralelo_synth.v:29" *) _057_[4] : _055_[4];
  assign _058_[5] = _036_ ? (* src = "serial_paralelo_synth.v:29" *) _057_[5] : _055_[5];
  assign _058_[6] = _036_ ? (* src = "serial_paralelo_synth.v:29" *) _057_[6] : _055_[6];
  assign _058_[7] = _036_ ? (* src = "serial_paralelo_synth.v:29" *) _057_[7] : _055_[7];
  assign _005_[0] = reset ? (* src = "serial_paralelo_synth.v:18" *) 1'h0 : _058_[0];
  assign _005_[1] = reset ? (* src = "serial_paralelo_synth.v:18" *) 1'h0 : _058_[1];
  assign _005_[2] = reset ? (* src = "serial_paralelo_synth.v:18" *) 1'h0 : _058_[2];
  assign _005_[3] = reset ? (* src = "serial_paralelo_synth.v:18" *) 1'h0 : _058_[3];
  assign _005_[4] = reset ? (* src = "serial_paralelo_synth.v:18" *) 1'h0 : _058_[4];
  assign _005_[5] = reset ? (* src = "serial_paralelo_synth.v:18" *) 1'h0 : _058_[5];
  assign _005_[6] = reset ? (* src = "serial_paralelo_synth.v:18" *) 1'h0 : _058_[6];
  assign _005_[7] = reset ? (* src = "serial_paralelo_synth.v:18" *) 1'h0 : _058_[7];
  (* src = "serial_paralelo_synth.v:17" *)
  always @(posedge clk_32f)
      data_out[0] <= _005_[0];
  (* src = "serial_paralelo_synth.v:17" *)
  always @(posedge clk_32f)
      data_out[1] <= _005_[1];
  (* src = "serial_paralelo_synth.v:17" *)
  always @(posedge clk_32f)
      data_out[2] <= _005_[2];
  (* src = "serial_paralelo_synth.v:17" *)
  always @(posedge clk_32f)
      data_out[3] <= _005_[3];
  (* src = "serial_paralelo_synth.v:17" *)
  always @(posedge clk_32f)
      data_out[4] <= _005_[4];
  (* src = "serial_paralelo_synth.v:17" *)
  always @(posedge clk_32f)
      data_out[5] <= _005_[5];
  (* src = "serial_paralelo_synth.v:17" *)
  always @(posedge clk_32f)
      data_out[6] <= _005_[6];
  (* src = "serial_paralelo_synth.v:17" *)
  always @(posedge clk_32f)
      data_out[7] <= _005_[7];
  (* src = "serial_paralelo_synth.v:17" *)
  always @(posedge clk_32f)
      valid_out <= _006_;
  (* src = "serial_paralelo_synth.v:17" *)
  always @(posedge clk_32f)
      BC_counter[0] <= _000_[0];
  (* src = "serial_paralelo_synth.v:17" *)
  always @(posedge clk_32f)
      BC_counter[1] <= _000_[1];
  (* src = "serial_paralelo_synth.v:17" *)
  always @(posedge clk_32f)
      BC_counter[2] <= _000_[2];
  (* src = "serial_paralelo_synth.v:17" *)
  always @(posedge clk_32f)
      BC_counter[3] <= _000_[3];
  (* src = "serial_paralelo_synth.v:17" *)
  always @(posedge clk_32f)
      BC_counter[4] <= _000_[4];
  (* src = "serial_paralelo_synth.v:17" *)
  always @(posedge clk_32f)
      BC_counter[5] <= _000_[5];
  (* src = "serial_paralelo_synth.v:17" *)
  always @(posedge clk_32f)
      BC_counter[6] <= _000_[6];
  (* src = "serial_paralelo_synth.v:17" *)
  always @(posedge clk_32f)
      BC_counter[7] <= _000_[7];
  (* src = "serial_paralelo_synth.v:17" *)
  always @(posedge clk_32f)
      BC_counter[8] <= _000_[8];
  (* src = "serial_paralelo_synth.v:17" *)
  always @(posedge clk_32f)
      BC_counter[9] <= _000_[9];
  (* src = "serial_paralelo_synth.v:17" *)
  always @(posedge clk_32f)
      BC_counter[10] <= _000_[10];
  (* src = "serial_paralelo_synth.v:17" *)
  always @(posedge clk_32f)
      BC_counter[11] <= _000_[11];
  (* src = "serial_paralelo_synth.v:17" *)
  always @(posedge clk_32f)
      BC_counter[12] <= _000_[12];
  (* src = "serial_paralelo_synth.v:17" *)
  always @(posedge clk_32f)
      BC_counter[13] <= _000_[13];
  (* src = "serial_paralelo_synth.v:17" *)
  always @(posedge clk_32f)
      BC_counter[14] <= _000_[14];
  (* src = "serial_paralelo_synth.v:17" *)
  always @(posedge clk_32f)
      BC_counter[15] <= _000_[15];
  (* src = "serial_paralelo_synth.v:17" *)
  always @(posedge clk_32f)
      BC_counter[16] <= _000_[16];
  (* src = "serial_paralelo_synth.v:17" *)
  always @(posedge clk_32f)
      BC_counter[17] <= _000_[17];
  (* src = "serial_paralelo_synth.v:17" *)
  always @(posedge clk_32f)
      BC_counter[18] <= _000_[18];
  (* src = "serial_paralelo_synth.v:17" *)
  always @(posedge clk_32f)
      BC_counter[19] <= _000_[19];
  (* src = "serial_paralelo_synth.v:17" *)
  always @(posedge clk_32f)
      BC_counter[20] <= _000_[20];
  (* src = "serial_paralelo_synth.v:17" *)
  always @(posedge clk_32f)
      BC_counter[21] <= _000_[21];
  (* src = "serial_paralelo_synth.v:17" *)
  always @(posedge clk_32f)
      BC_counter[22] <= _000_[22];
  (* src = "serial_paralelo_synth.v:17" *)
  always @(posedge clk_32f)
      BC_counter[23] <= _000_[23];
  (* src = "serial_paralelo_synth.v:17" *)
  always @(posedge clk_32f)
      BC_counter[24] <= _000_[24];
  (* src = "serial_paralelo_synth.v:17" *)
  always @(posedge clk_32f)
      BC_counter[25] <= _000_[25];
  (* src = "serial_paralelo_synth.v:17" *)
  always @(posedge clk_32f)
      BC_counter[26] <= _000_[26];
  (* src = "serial_paralelo_synth.v:17" *)
  always @(posedge clk_32f)
      BC_counter[27] <= _000_[27];
  (* src = "serial_paralelo_synth.v:17" *)
  always @(posedge clk_32f)
      BC_counter[28] <= _000_[28];
  (* src = "serial_paralelo_synth.v:17" *)
  always @(posedge clk_32f)
      BC_counter[29] <= _000_[29];
  (* src = "serial_paralelo_synth.v:17" *)
  always @(posedge clk_32f)
      BC_counter[30] <= _000_[30];
  (* src = "serial_paralelo_synth.v:17" *)
  always @(posedge clk_32f)
      BC_counter[31] <= _000_[31];
  (* src = "serial_paralelo_synth.v:17" *)
  always @(posedge clk_32f)
      data2send[0] <= _004_[0];
  (* src = "serial_paralelo_synth.v:17" *)
  always @(posedge clk_32f)
      data2send[1] <= _004_[1];
  (* src = "serial_paralelo_synth.v:17" *)
  always @(posedge clk_32f)
      data2send[2] <= _004_[2];
  (* src = "serial_paralelo_synth.v:17" *)
  always @(posedge clk_32f)
      data2send[3] <= _004_[3];
  (* src = "serial_paralelo_synth.v:17" *)
  always @(posedge clk_32f)
      data2send[4] <= _004_[4];
  (* src = "serial_paralelo_synth.v:17" *)
  always @(posedge clk_32f)
      data2send[5] <= _004_[5];
  (* src = "serial_paralelo_synth.v:17" *)
  always @(posedge clk_32f)
      data2send[6] <= _004_[6];
  (* src = "serial_paralelo_synth.v:17" *)
  always @(posedge clk_32f)
      data2send[7] <= _004_[7];
  (* src = "serial_paralelo_synth.v:17" *)
  always @(posedge clk_32f)
      counter[0] <= _002_[0];
  (* src = "serial_paralelo_synth.v:17" *)
  always @(posedge clk_32f)
      counter[1] <= _002_[1];
  (* src = "serial_paralelo_synth.v:17" *)
  always @(posedge clk_32f)
      counter[2] <= _002_[2];
  (* src = "serial_paralelo_synth.v:17" *)
  always @(posedge clk_32f)
      counter[3] <= _002_[3];
  (* src = "serial_paralelo_synth.v:17" *)
  always @(posedge clk_32f)
      counter[4] <= _002_[4];
  (* src = "serial_paralelo_synth.v:17" *)
  always @(posedge clk_32f)
      counter[5] <= _002_[5];
  (* src = "serial_paralelo_synth.v:17" *)
  always @(posedge clk_32f)
      counter[6] <= _002_[6];
  (* src = "serial_paralelo_synth.v:17" *)
  always @(posedge clk_32f)
      counter[7] <= _002_[7];
  (* src = "serial_paralelo_synth.v:17" *)
  always @(posedge clk_32f)
      counter[8] <= _002_[8];
  (* src = "serial_paralelo_synth.v:17" *)
  always @(posedge clk_32f)
      counter[9] <= _002_[9];
  (* src = "serial_paralelo_synth.v:17" *)
  always @(posedge clk_32f)
      counter[10] <= _002_[10];
  (* src = "serial_paralelo_synth.v:17" *)
  always @(posedge clk_32f)
      counter[11] <= _002_[11];
  (* src = "serial_paralelo_synth.v:17" *)
  always @(posedge clk_32f)
      counter[12] <= _002_[12];
  (* src = "serial_paralelo_synth.v:17" *)
  always @(posedge clk_32f)
      counter[13] <= _002_[13];
  (* src = "serial_paralelo_synth.v:17" *)
  always @(posedge clk_32f)
      counter[14] <= _002_[14];
  (* src = "serial_paralelo_synth.v:17" *)
  always @(posedge clk_32f)
      counter[15] <= _002_[15];
  (* src = "serial_paralelo_synth.v:17" *)
  always @(posedge clk_32f)
      counter[16] <= _002_[16];
  (* src = "serial_paralelo_synth.v:17" *)
  always @(posedge clk_32f)
      counter[17] <= _002_[17];
  (* src = "serial_paralelo_synth.v:17" *)
  always @(posedge clk_32f)
      counter[18] <= _002_[18];
  (* src = "serial_paralelo_synth.v:17" *)
  always @(posedge clk_32f)
      counter[19] <= _002_[19];
  (* src = "serial_paralelo_synth.v:17" *)
  always @(posedge clk_32f)
      counter[20] <= _002_[20];
  (* src = "serial_paralelo_synth.v:17" *)
  always @(posedge clk_32f)
      counter[21] <= _002_[21];
  (* src = "serial_paralelo_synth.v:17" *)
  always @(posedge clk_32f)
      counter[22] <= _002_[22];
  (* src = "serial_paralelo_synth.v:17" *)
  always @(posedge clk_32f)
      counter[23] <= _002_[23];
  (* src = "serial_paralelo_synth.v:17" *)
  always @(posedge clk_32f)
      counter[24] <= _002_[24];
  (* src = "serial_paralelo_synth.v:17" *)
  always @(posedge clk_32f)
      counter[25] <= _002_[25];
  (* src = "serial_paralelo_synth.v:17" *)
  always @(posedge clk_32f)
      counter[26] <= _002_[26];
  (* src = "serial_paralelo_synth.v:17" *)
  always @(posedge clk_32f)
      counter[27] <= _002_[27];
  (* src = "serial_paralelo_synth.v:17" *)
  always @(posedge clk_32f)
      counter[28] <= _002_[28];
  (* src = "serial_paralelo_synth.v:17" *)
  always @(posedge clk_32f)
      counter[29] <= _002_[29];
  (* src = "serial_paralelo_synth.v:17" *)
  always @(posedge clk_32f)
      counter[30] <= _002_[30];
  (* src = "serial_paralelo_synth.v:17" *)
  always @(posedge clk_32f)
      counter[31] <= _002_[31];
  (* src = "serial_paralelo_synth.v:17" *)
  always @(posedge clk_32f)
      data2send2[0] <= _003_[0];
  (* src = "serial_paralelo_synth.v:17" *)
  always @(posedge clk_32f)
      data2send2[1] <= _003_[1];
  (* src = "serial_paralelo_synth.v:17" *)
  always @(posedge clk_32f)
      data2send2[2] <= _003_[2];
  (* src = "serial_paralelo_synth.v:17" *)
  always @(posedge clk_32f)
      data2send2[3] <= _003_[3];
  (* src = "serial_paralelo_synth.v:17" *)
  always @(posedge clk_32f)
      data2send2[4] <= _003_[4];
  (* src = "serial_paralelo_synth.v:17" *)
  always @(posedge clk_32f)
      data2send2[5] <= _003_[5];
  (* src = "serial_paralelo_synth.v:17" *)
  always @(posedge clk_32f)
      data2send2[6] <= _003_[6];
  (* src = "serial_paralelo_synth.v:17" *)
  always @(posedge clk_32f)
      data2send2[7] <= _003_[7];
  (* src = "serial_paralelo_synth.v:17" *)
  always @(posedge clk_32f)
      active <= _001_;
  assign _064_ = _062_[31] ^ _062_[30];
  assign _040_ = _064_ ^ _061_[31];
  assign _007_[1] = BC_counter[1] ^(* src = "serial_paralelo_synth.v:45|<techmap.v>:263" *)  BC_counter[0];
  assign _007_[2] = BC_counter[2] ^(* src = "serial_paralelo_synth.v:45|<techmap.v>:263" *)  _059_[1];
  assign _007_[3] = BC_counter[3] ^(* src = "serial_paralelo_synth.v:45|<techmap.v>:263" *)  _059_[2];
  assign _007_[4] = BC_counter[4] ^(* src = "serial_paralelo_synth.v:45|<techmap.v>:263" *)  _059_[3];
  assign _007_[5] = BC_counter[5] ^(* src = "serial_paralelo_synth.v:45|<techmap.v>:263" *)  _059_[4];
  assign _007_[6] = BC_counter[6] ^(* src = "serial_paralelo_synth.v:45|<techmap.v>:263" *)  _059_[5];
  assign _007_[7] = BC_counter[7] ^(* src = "serial_paralelo_synth.v:45|<techmap.v>:263" *)  _059_[6];
  assign _007_[8] = BC_counter[8] ^(* src = "serial_paralelo_synth.v:45|<techmap.v>:263" *)  _059_[7];
  assign _007_[9] = BC_counter[9] ^(* src = "serial_paralelo_synth.v:45|<techmap.v>:263" *)  _059_[8];
  assign _007_[10] = BC_counter[10] ^(* src = "serial_paralelo_synth.v:45|<techmap.v>:263" *)  _059_[9];
  assign _007_[11] = BC_counter[11] ^(* src = "serial_paralelo_synth.v:45|<techmap.v>:263" *)  _059_[10];
  assign _007_[12] = BC_counter[12] ^(* src = "serial_paralelo_synth.v:45|<techmap.v>:263" *)  _059_[11];
  assign _007_[13] = BC_counter[13] ^(* src = "serial_paralelo_synth.v:45|<techmap.v>:263" *)  _059_[12];
  assign _007_[14] = BC_counter[14] ^(* src = "serial_paralelo_synth.v:45|<techmap.v>:263" *)  _059_[13];
  assign _007_[15] = BC_counter[15] ^(* src = "serial_paralelo_synth.v:45|<techmap.v>:263" *)  _059_[14];
  assign _007_[16] = BC_counter[16] ^(* src = "serial_paralelo_synth.v:45|<techmap.v>:263" *)  _059_[15];
  assign _007_[17] = BC_counter[17] ^(* src = "serial_paralelo_synth.v:45|<techmap.v>:263" *)  _059_[16];
  assign _007_[18] = BC_counter[18] ^(* src = "serial_paralelo_synth.v:45|<techmap.v>:263" *)  _059_[17];
  assign _007_[19] = BC_counter[19] ^(* src = "serial_paralelo_synth.v:45|<techmap.v>:263" *)  _059_[18];
  assign _007_[20] = BC_counter[20] ^(* src = "serial_paralelo_synth.v:45|<techmap.v>:263" *)  _059_[19];
  assign _007_[21] = BC_counter[21] ^(* src = "serial_paralelo_synth.v:45|<techmap.v>:263" *)  _059_[20];
  assign _007_[22] = BC_counter[22] ^(* src = "serial_paralelo_synth.v:45|<techmap.v>:263" *)  _059_[21];
  assign _007_[23] = BC_counter[23] ^(* src = "serial_paralelo_synth.v:45|<techmap.v>:263" *)  _059_[22];
  assign _007_[24] = BC_counter[24] ^(* src = "serial_paralelo_synth.v:45|<techmap.v>:263" *)  _059_[23];
  assign _007_[25] = BC_counter[25] ^(* src = "serial_paralelo_synth.v:45|<techmap.v>:263" *)  _059_[24];
  assign _007_[26] = BC_counter[26] ^(* src = "serial_paralelo_synth.v:45|<techmap.v>:263" *)  _059_[25];
  assign _007_[27] = BC_counter[27] ^(* src = "serial_paralelo_synth.v:45|<techmap.v>:263" *)  _059_[26];
  assign _007_[28] = BC_counter[28] ^(* src = "serial_paralelo_synth.v:45|<techmap.v>:263" *)  _059_[27];
  assign _007_[29] = BC_counter[29] ^(* src = "serial_paralelo_synth.v:45|<techmap.v>:263" *)  _059_[28];
  assign _007_[30] = BC_counter[30] ^(* src = "serial_paralelo_synth.v:45|<techmap.v>:263" *)  _059_[29];
  assign _007_[31] = BC_counter[31] ^(* src = "serial_paralelo_synth.v:45|<techmap.v>:263" *)  _059_[30];
  assign _061_[31] = _063_[31] ^(* src = "serial_paralelo_synth.v:50|<techmap.v>:263" *)  _062_[30];
  assign _007_[0] = BC_counter[0] ^(* src = "serial_paralelo_synth.v:50|<techmap.v>:262" *)  1'h1;
  assign _063_[1] = BC_counter[1] ^(* src = "serial_paralelo_synth.v:50|<techmap.v>:262" *)  1'h1;
  assign _063_[3] = BC_counter[3] ^(* src = "serial_paralelo_synth.v:50|<techmap.v>:262" *)  1'h1;
  assign _063_[4] = BC_counter[4] ^(* src = "serial_paralelo_synth.v:50|<techmap.v>:262" *)  1'h1;
  assign _063_[5] = BC_counter[5] ^(* src = "serial_paralelo_synth.v:50|<techmap.v>:262" *)  1'h1;
  assign _063_[6] = BC_counter[6] ^(* src = "serial_paralelo_synth.v:50|<techmap.v>:262" *)  1'h1;
  assign _063_[7] = BC_counter[7] ^(* src = "serial_paralelo_synth.v:50|<techmap.v>:262" *)  1'h1;
  assign _063_[8] = BC_counter[8] ^(* src = "serial_paralelo_synth.v:50|<techmap.v>:262" *)  1'h1;
  assign _063_[9] = BC_counter[9] ^(* src = "serial_paralelo_synth.v:50|<techmap.v>:262" *)  1'h1;
  assign _063_[10] = BC_counter[10] ^(* src = "serial_paralelo_synth.v:50|<techmap.v>:262" *)  1'h1;
  assign _063_[11] = BC_counter[11] ^(* src = "serial_paralelo_synth.v:50|<techmap.v>:262" *)  1'h1;
  assign _063_[12] = BC_counter[12] ^(* src = "serial_paralelo_synth.v:50|<techmap.v>:262" *)  1'h1;
  assign _063_[13] = BC_counter[13] ^(* src = "serial_paralelo_synth.v:50|<techmap.v>:262" *)  1'h1;
  assign _063_[14] = BC_counter[14] ^(* src = "serial_paralelo_synth.v:50|<techmap.v>:262" *)  1'h1;
  assign _063_[15] = BC_counter[15] ^(* src = "serial_paralelo_synth.v:50|<techmap.v>:262" *)  1'h1;
  assign _063_[16] = BC_counter[16] ^(* src = "serial_paralelo_synth.v:50|<techmap.v>:262" *)  1'h1;
  assign _063_[17] = BC_counter[17] ^(* src = "serial_paralelo_synth.v:50|<techmap.v>:262" *)  1'h1;
  assign _063_[18] = BC_counter[18] ^(* src = "serial_paralelo_synth.v:50|<techmap.v>:262" *)  1'h1;
  assign _063_[19] = BC_counter[19] ^(* src = "serial_paralelo_synth.v:50|<techmap.v>:262" *)  1'h1;
  assign _063_[20] = BC_counter[20] ^(* src = "serial_paralelo_synth.v:50|<techmap.v>:262" *)  1'h1;
  assign _063_[21] = BC_counter[21] ^(* src = "serial_paralelo_synth.v:50|<techmap.v>:262" *)  1'h1;
  assign _063_[22] = BC_counter[22] ^(* src = "serial_paralelo_synth.v:50|<techmap.v>:262" *)  1'h1;
  assign _063_[23] = BC_counter[23] ^(* src = "serial_paralelo_synth.v:50|<techmap.v>:262" *)  1'h1;
  assign _063_[24] = BC_counter[24] ^(* src = "serial_paralelo_synth.v:50|<techmap.v>:262" *)  1'h1;
  assign _063_[25] = BC_counter[25] ^(* src = "serial_paralelo_synth.v:50|<techmap.v>:262" *)  1'h1;
  assign _063_[26] = BC_counter[26] ^(* src = "serial_paralelo_synth.v:50|<techmap.v>:262" *)  1'h1;
  assign _063_[27] = BC_counter[27] ^(* src = "serial_paralelo_synth.v:50|<techmap.v>:262" *)  1'h1;
  assign _063_[28] = BC_counter[28] ^(* src = "serial_paralelo_synth.v:50|<techmap.v>:262" *)  1'h1;
  assign _063_[29] = BC_counter[29] ^(* src = "serial_paralelo_synth.v:50|<techmap.v>:262" *)  1'h1;
  assign _063_[30] = BC_counter[30] ^(* src = "serial_paralelo_synth.v:50|<techmap.v>:262" *)  1'h1;
  assign _063_[31] = BC_counter[31] ^(* src = "serial_paralelo_synth.v:50|<techmap.v>:262" *)  1'h1;
  assign _008_[1] = counter[1] ^(* src = "serial_paralelo_synth.v:60|serial_paralelo_synth.v:45|<techmap.v>:263" *)  counter[0];
  assign _008_[2] = counter[2] ^(* src = "serial_paralelo_synth.v:60|serial_paralelo_synth.v:45|<techmap.v>:263" *)  _060_[1];
  assign _008_[3] = counter[3] ^(* src = "serial_paralelo_synth.v:60|serial_paralelo_synth.v:45|<techmap.v>:263" *)  _060_[2];
  assign _008_[4] = counter[4] ^(* src = "serial_paralelo_synth.v:60|serial_paralelo_synth.v:45|<techmap.v>:263" *)  _060_[3];
  assign _008_[5] = counter[5] ^(* src = "serial_paralelo_synth.v:60|serial_paralelo_synth.v:45|<techmap.v>:263" *)  _060_[4];
  assign _008_[6] = counter[6] ^(* src = "serial_paralelo_synth.v:60|serial_paralelo_synth.v:45|<techmap.v>:263" *)  _060_[5];
  assign _008_[7] = counter[7] ^(* src = "serial_paralelo_synth.v:60|serial_paralelo_synth.v:45|<techmap.v>:263" *)  _060_[6];
  assign _008_[8] = counter[8] ^(* src = "serial_paralelo_synth.v:60|serial_paralelo_synth.v:45|<techmap.v>:263" *)  _060_[7];
  assign _008_[9] = counter[9] ^(* src = "serial_paralelo_synth.v:60|serial_paralelo_synth.v:45|<techmap.v>:263" *)  _060_[8];
  assign _008_[10] = counter[10] ^(* src = "serial_paralelo_synth.v:60|serial_paralelo_synth.v:45|<techmap.v>:263" *)  _060_[9];
  assign _008_[11] = counter[11] ^(* src = "serial_paralelo_synth.v:60|serial_paralelo_synth.v:45|<techmap.v>:263" *)  _060_[10];
  assign _008_[12] = counter[12] ^(* src = "serial_paralelo_synth.v:60|serial_paralelo_synth.v:45|<techmap.v>:263" *)  _060_[11];
  assign _008_[13] = counter[13] ^(* src = "serial_paralelo_synth.v:60|serial_paralelo_synth.v:45|<techmap.v>:263" *)  _060_[12];
  assign _008_[14] = counter[14] ^(* src = "serial_paralelo_synth.v:60|serial_paralelo_synth.v:45|<techmap.v>:263" *)  _060_[13];
  assign _008_[15] = counter[15] ^(* src = "serial_paralelo_synth.v:60|serial_paralelo_synth.v:45|<techmap.v>:263" *)  _060_[14];
  assign _008_[16] = counter[16] ^(* src = "serial_paralelo_synth.v:60|serial_paralelo_synth.v:45|<techmap.v>:263" *)  _060_[15];
  assign _008_[17] = counter[17] ^(* src = "serial_paralelo_synth.v:60|serial_paralelo_synth.v:45|<techmap.v>:263" *)  _060_[16];
  assign _008_[18] = counter[18] ^(* src = "serial_paralelo_synth.v:60|serial_paralelo_synth.v:45|<techmap.v>:263" *)  _060_[17];
  assign _008_[19] = counter[19] ^(* src = "serial_paralelo_synth.v:60|serial_paralelo_synth.v:45|<techmap.v>:263" *)  _060_[18];
  assign _008_[20] = counter[20] ^(* src = "serial_paralelo_synth.v:60|serial_paralelo_synth.v:45|<techmap.v>:263" *)  _060_[19];
  assign _008_[21] = counter[21] ^(* src = "serial_paralelo_synth.v:60|serial_paralelo_synth.v:45|<techmap.v>:263" *)  _060_[20];
  assign _008_[22] = counter[22] ^(* src = "serial_paralelo_synth.v:60|serial_paralelo_synth.v:45|<techmap.v>:263" *)  _060_[21];
  assign _008_[23] = counter[23] ^(* src = "serial_paralelo_synth.v:60|serial_paralelo_synth.v:45|<techmap.v>:263" *)  _060_[22];
  assign _008_[24] = counter[24] ^(* src = "serial_paralelo_synth.v:60|serial_paralelo_synth.v:45|<techmap.v>:263" *)  _060_[23];
  assign _008_[25] = counter[25] ^(* src = "serial_paralelo_synth.v:60|serial_paralelo_synth.v:45|<techmap.v>:263" *)  _060_[24];
  assign _008_[26] = counter[26] ^(* src = "serial_paralelo_synth.v:60|serial_paralelo_synth.v:45|<techmap.v>:263" *)  _060_[25];
  assign _008_[27] = counter[27] ^(* src = "serial_paralelo_synth.v:60|serial_paralelo_synth.v:45|<techmap.v>:263" *)  _060_[26];
  assign _008_[28] = counter[28] ^(* src = "serial_paralelo_synth.v:60|serial_paralelo_synth.v:45|<techmap.v>:263" *)  _060_[27];
  assign _008_[29] = counter[29] ^(* src = "serial_paralelo_synth.v:60|serial_paralelo_synth.v:45|<techmap.v>:263" *)  _060_[28];
  assign _008_[30] = counter[30] ^(* src = "serial_paralelo_synth.v:60|serial_paralelo_synth.v:45|<techmap.v>:263" *)  _060_[29];
  assign _008_[31] = counter[31] ^(* src = "serial_paralelo_synth.v:60|serial_paralelo_synth.v:45|<techmap.v>:263" *)  _060_[30];
  assign _008_[0] = counter[0] ^(* src = "serial_paralelo_synth.v:60|serial_paralelo_synth.v:45|<techmap.v>:262" *)  1'h1;
  assign _059_[1] = BC_counter[1] &(* src = "serial_paralelo_synth.v:45|<techmap.v>:260|<techmap.v>:221" *)  BC_counter[0];
  assign _059_[3] = _065_ &(* src = "serial_paralelo_synth.v:45|<techmap.v>:260|<techmap.v>:221" *)  _059_[1];
  assign _059_[7] = _079_ &(* src = "serial_paralelo_synth.v:45|<techmap.v>:260|<techmap.v>:221" *)  _059_[3];
  assign _059_[15] = _085_ &(* src = "serial_paralelo_synth.v:45|<techmap.v>:260|<techmap.v>:221" *)  _059_[7];
  assign _065_ = BC_counter[3] &(* src = "serial_paralelo_synth.v:45|<techmap.v>:260|<techmap.v>:222" *)  BC_counter[2];
  assign _066_ = BC_counter[5] &(* src = "serial_paralelo_synth.v:45|<techmap.v>:260|<techmap.v>:222" *)  BC_counter[4];
  assign _067_ = BC_counter[7] &(* src = "serial_paralelo_synth.v:45|<techmap.v>:260|<techmap.v>:222" *)  BC_counter[6];
  assign _068_ = BC_counter[9] &(* src = "serial_paralelo_synth.v:45|<techmap.v>:260|<techmap.v>:222" *)  BC_counter[8];
  assign _069_ = BC_counter[11] &(* src = "serial_paralelo_synth.v:45|<techmap.v>:260|<techmap.v>:222" *)  BC_counter[10];
  assign _070_ = BC_counter[13] &(* src = "serial_paralelo_synth.v:45|<techmap.v>:260|<techmap.v>:222" *)  BC_counter[12];
  assign _071_ = BC_counter[15] &(* src = "serial_paralelo_synth.v:45|<techmap.v>:260|<techmap.v>:222" *)  BC_counter[14];
  assign _072_ = BC_counter[17] &(* src = "serial_paralelo_synth.v:45|<techmap.v>:260|<techmap.v>:222" *)  BC_counter[16];
  assign _073_ = BC_counter[19] &(* src = "serial_paralelo_synth.v:45|<techmap.v>:260|<techmap.v>:222" *)  BC_counter[18];
  assign _074_ = BC_counter[21] &(* src = "serial_paralelo_synth.v:45|<techmap.v>:260|<techmap.v>:222" *)  BC_counter[20];
  assign _075_ = BC_counter[23] &(* src = "serial_paralelo_synth.v:45|<techmap.v>:260|<techmap.v>:222" *)  BC_counter[22];
  assign _076_ = BC_counter[25] &(* src = "serial_paralelo_synth.v:45|<techmap.v>:260|<techmap.v>:222" *)  BC_counter[24];
  assign _077_ = BC_counter[27] &(* src = "serial_paralelo_synth.v:45|<techmap.v>:260|<techmap.v>:222" *)  BC_counter[26];
  assign _078_ = BC_counter[29] &(* src = "serial_paralelo_synth.v:45|<techmap.v>:260|<techmap.v>:222" *)  BC_counter[28];
  assign _079_ = _067_ &(* src = "serial_paralelo_synth.v:45|<techmap.v>:260|<techmap.v>:222" *)  _066_;
  assign _080_ = _069_ &(* src = "serial_paralelo_synth.v:45|<techmap.v>:260|<techmap.v>:222" *)  _068_;
  assign _081_ = _071_ &(* src = "serial_paralelo_synth.v:45|<techmap.v>:260|<techmap.v>:222" *)  _070_;
  assign _082_ = _073_ &(* src = "serial_paralelo_synth.v:45|<techmap.v>:260|<techmap.v>:222" *)  _072_;
  assign _083_ = _075_ &(* src = "serial_paralelo_synth.v:45|<techmap.v>:260|<techmap.v>:222" *)  _074_;
  assign _084_ = _077_ &(* src = "serial_paralelo_synth.v:45|<techmap.v>:260|<techmap.v>:222" *)  _076_;
  assign _085_ = _081_ &(* src = "serial_paralelo_synth.v:45|<techmap.v>:260|<techmap.v>:222" *)  _080_;
  assign _086_ = _083_ &(* src = "serial_paralelo_synth.v:45|<techmap.v>:260|<techmap.v>:222" *)  _082_;
  assign _059_[23] = _086_ &(* src = "serial_paralelo_synth.v:45|<techmap.v>:260|<techmap.v>:229" *)  _059_[15];
  assign _059_[11] = _080_ &(* src = "serial_paralelo_synth.v:45|<techmap.v>:260|<techmap.v>:229" *)  _059_[7];
  assign _059_[19] = _082_ &(* src = "serial_paralelo_synth.v:45|<techmap.v>:260|<techmap.v>:229" *)  _059_[15];
  assign _059_[27] = _084_ &(* src = "serial_paralelo_synth.v:45|<techmap.v>:260|<techmap.v>:229" *)  _059_[23];
  assign _059_[5] = _066_ &(* src = "serial_paralelo_synth.v:45|<techmap.v>:260|<techmap.v>:229" *)  _059_[3];
  assign _059_[9] = _068_ &(* src = "serial_paralelo_synth.v:45|<techmap.v>:260|<techmap.v>:229" *)  _059_[7];
  assign _059_[13] = _070_ &(* src = "serial_paralelo_synth.v:45|<techmap.v>:260|<techmap.v>:229" *)  _059_[11];
  assign _059_[17] = _072_ &(* src = "serial_paralelo_synth.v:45|<techmap.v>:260|<techmap.v>:229" *)  _059_[15];
  assign _059_[21] = _074_ &(* src = "serial_paralelo_synth.v:45|<techmap.v>:260|<techmap.v>:229" *)  _059_[19];
  assign _059_[25] = _076_ &(* src = "serial_paralelo_synth.v:45|<techmap.v>:260|<techmap.v>:229" *)  _059_[23];
  assign _059_[29] = _078_ &(* src = "serial_paralelo_synth.v:45|<techmap.v>:260|<techmap.v>:229" *)  _059_[27];
  assign _059_[2] = BC_counter[2] &(* src = "serial_paralelo_synth.v:45|<techmap.v>:260|<techmap.v>:229" *)  _059_[1];
  assign _059_[4] = BC_counter[4] &(* src = "serial_paralelo_synth.v:45|<techmap.v>:260|<techmap.v>:229" *)  _059_[3];
  assign _059_[6] = BC_counter[6] &(* src = "serial_paralelo_synth.v:45|<techmap.v>:260|<techmap.v>:229" *)  _059_[5];
  assign _059_[8] = BC_counter[8] &(* src = "serial_paralelo_synth.v:45|<techmap.v>:260|<techmap.v>:229" *)  _059_[7];
  assign _059_[10] = BC_counter[10] &(* src = "serial_paralelo_synth.v:45|<techmap.v>:260|<techmap.v>:229" *)  _059_[9];
  assign _059_[12] = BC_counter[12] &(* src = "serial_paralelo_synth.v:45|<techmap.v>:260|<techmap.v>:229" *)  _059_[11];
  assign _059_[14] = BC_counter[14] &(* src = "serial_paralelo_synth.v:45|<techmap.v>:260|<techmap.v>:229" *)  _059_[13];
  assign _059_[16] = BC_counter[16] &(* src = "serial_paralelo_synth.v:45|<techmap.v>:260|<techmap.v>:229" *)  _059_[15];
  assign _059_[18] = BC_counter[18] &(* src = "serial_paralelo_synth.v:45|<techmap.v>:260|<techmap.v>:229" *)  _059_[17];
  assign _059_[20] = BC_counter[20] &(* src = "serial_paralelo_synth.v:45|<techmap.v>:260|<techmap.v>:229" *)  _059_[19];
  assign _059_[22] = BC_counter[22] &(* src = "serial_paralelo_synth.v:45|<techmap.v>:260|<techmap.v>:229" *)  _059_[21];
  assign _059_[24] = BC_counter[24] &(* src = "serial_paralelo_synth.v:45|<techmap.v>:260|<techmap.v>:229" *)  _059_[23];
  assign _059_[26] = BC_counter[26] &(* src = "serial_paralelo_synth.v:45|<techmap.v>:260|<techmap.v>:229" *)  _059_[25];
  assign _059_[28] = BC_counter[28] &(* src = "serial_paralelo_synth.v:45|<techmap.v>:260|<techmap.v>:229" *)  _059_[27];
  assign _059_[30] = BC_counter[30] &(* src = "serial_paralelo_synth.v:45|<techmap.v>:260|<techmap.v>:229" *)  _059_[29];
  assign _109_ = _063_[1] &(* src = "serial_paralelo_synth.v:50|<techmap.v>:260|<techmap.v>:221" *)  _062_[0];
  assign _110_ = _063_[5] &(* src = "serial_paralelo_synth.v:50|<techmap.v>:260|<techmap.v>:221" *)  BC_counter[4];
  assign _111_ = _063_[7] &(* src = "serial_paralelo_synth.v:50|<techmap.v>:260|<techmap.v>:221" *)  BC_counter[6];
  assign _112_ = _063_[9] &(* src = "serial_paralelo_synth.v:50|<techmap.v>:260|<techmap.v>:221" *)  BC_counter[8];
  assign _113_ = _063_[11] &(* src = "serial_paralelo_synth.v:50|<techmap.v>:260|<techmap.v>:221" *)  BC_counter[10];
  assign _114_ = _063_[13] &(* src = "serial_paralelo_synth.v:50|<techmap.v>:260|<techmap.v>:221" *)  BC_counter[12];
  assign _115_ = _063_[15] &(* src = "serial_paralelo_synth.v:50|<techmap.v>:260|<techmap.v>:221" *)  BC_counter[14];
  assign _116_ = _063_[17] &(* src = "serial_paralelo_synth.v:50|<techmap.v>:260|<techmap.v>:221" *)  BC_counter[16];
  assign _117_ = _063_[19] &(* src = "serial_paralelo_synth.v:50|<techmap.v>:260|<techmap.v>:221" *)  BC_counter[18];
  assign _118_ = _063_[21] &(* src = "serial_paralelo_synth.v:50|<techmap.v>:260|<techmap.v>:221" *)  BC_counter[20];
  assign _119_ = _063_[23] &(* src = "serial_paralelo_synth.v:50|<techmap.v>:260|<techmap.v>:221" *)  BC_counter[22];
  assign _120_ = _063_[25] &(* src = "serial_paralelo_synth.v:50|<techmap.v>:260|<techmap.v>:221" *)  BC_counter[24];
  assign _121_ = _063_[27] &(* src = "serial_paralelo_synth.v:50|<techmap.v>:260|<techmap.v>:221" *)  BC_counter[26];
  assign _122_ = _063_[29] &(* src = "serial_paralelo_synth.v:50|<techmap.v>:260|<techmap.v>:221" *)  BC_counter[28];
  assign _123_ = _063_[31] &(* src = "serial_paralelo_synth.v:50|<techmap.v>:260|<techmap.v>:221" *)  BC_counter[30];
  assign _124_ = _139_ &(* src = "serial_paralelo_synth.v:50|<techmap.v>:260|<techmap.v>:221" *)  _062_[1];
  assign _125_ = _141_ &(* src = "serial_paralelo_synth.v:50|<techmap.v>:260|<techmap.v>:221" *)  _169_;
  assign _126_ = _143_ &(* src = "serial_paralelo_synth.v:50|<techmap.v>:260|<techmap.v>:221" *)  _171_;
  assign _127_ = _145_ &(* src = "serial_paralelo_synth.v:50|<techmap.v>:260|<techmap.v>:221" *)  _173_;
  assign _128_ = _147_ &(* src = "serial_paralelo_synth.v:50|<techmap.v>:260|<techmap.v>:221" *)  _175_;
  assign _129_ = _149_ &(* src = "serial_paralelo_synth.v:50|<techmap.v>:260|<techmap.v>:221" *)  _177_;
  assign _130_ = _151_ &(* src = "serial_paralelo_synth.v:50|<techmap.v>:260|<techmap.v>:221" *)  _179_;
  assign _131_ = _153_ &(* src = "serial_paralelo_synth.v:50|<techmap.v>:260|<techmap.v>:221" *)  _181_;
  assign _132_ = _154_ &(* src = "serial_paralelo_synth.v:50|<techmap.v>:260|<techmap.v>:221" *)  _062_[3];
  assign _133_ = _156_ &(* src = "serial_paralelo_synth.v:50|<techmap.v>:260|<techmap.v>:221" *)  _184_;
  assign _134_ = _158_ &(* src = "serial_paralelo_synth.v:50|<techmap.v>:260|<techmap.v>:221" *)  _186_;
  assign _135_ = _160_ &(* src = "serial_paralelo_synth.v:50|<techmap.v>:260|<techmap.v>:221" *)  _188_;
  assign _136_ = _161_ &(* src = "serial_paralelo_synth.v:50|<techmap.v>:260|<techmap.v>:221" *)  _062_[7];
  assign _137_ = _163_ &(* src = "serial_paralelo_synth.v:50|<techmap.v>:260|<techmap.v>:221" *)  _191_;
  assign _138_ = _164_ &(* src = "serial_paralelo_synth.v:50|<techmap.v>:260|<techmap.v>:221" *)  _062_[15];
  assign _139_ = _063_[3] &(* src = "serial_paralelo_synth.v:50|<techmap.v>:260|<techmap.v>:222" *)  BC_counter[2];
  assign _140_ = _063_[5] &(* src = "serial_paralelo_synth.v:50|<techmap.v>:260|<techmap.v>:222" *)  _063_[4];
  assign _141_ = _063_[7] &(* src = "serial_paralelo_synth.v:50|<techmap.v>:260|<techmap.v>:222" *)  _063_[6];
  assign _142_ = _063_[9] &(* src = "serial_paralelo_synth.v:50|<techmap.v>:260|<techmap.v>:222" *)  _063_[8];
  assign _143_ = _063_[11] &(* src = "serial_paralelo_synth.v:50|<techmap.v>:260|<techmap.v>:222" *)  _063_[10];
  assign _144_ = _063_[13] &(* src = "serial_paralelo_synth.v:50|<techmap.v>:260|<techmap.v>:222" *)  _063_[12];
  assign _145_ = _063_[15] &(* src = "serial_paralelo_synth.v:50|<techmap.v>:260|<techmap.v>:222" *)  _063_[14];
  assign _146_ = _063_[17] &(* src = "serial_paralelo_synth.v:50|<techmap.v>:260|<techmap.v>:222" *)  _063_[16];
  assign _147_ = _063_[19] &(* src = "serial_paralelo_synth.v:50|<techmap.v>:260|<techmap.v>:222" *)  _063_[18];
  assign _148_ = _063_[21] &(* src = "serial_paralelo_synth.v:50|<techmap.v>:260|<techmap.v>:222" *)  _063_[20];
  assign _149_ = _063_[23] &(* src = "serial_paralelo_synth.v:50|<techmap.v>:260|<techmap.v>:222" *)  _063_[22];
  assign _150_ = _063_[25] &(* src = "serial_paralelo_synth.v:50|<techmap.v>:260|<techmap.v>:222" *)  _063_[24];
  assign _151_ = _063_[27] &(* src = "serial_paralelo_synth.v:50|<techmap.v>:260|<techmap.v>:222" *)  _063_[26];
  assign _152_ = _063_[29] &(* src = "serial_paralelo_synth.v:50|<techmap.v>:260|<techmap.v>:222" *)  _063_[28];
  assign _153_ = _063_[31] &(* src = "serial_paralelo_synth.v:50|<techmap.v>:260|<techmap.v>:222" *)  _063_[30];
  assign _154_ = _141_ &(* src = "serial_paralelo_synth.v:50|<techmap.v>:260|<techmap.v>:222" *)  _140_;
  assign _155_ = _143_ &(* src = "serial_paralelo_synth.v:50|<techmap.v>:260|<techmap.v>:222" *)  _142_;
  assign _156_ = _145_ &(* src = "serial_paralelo_synth.v:50|<techmap.v>:260|<techmap.v>:222" *)  _144_;
  assign _157_ = _147_ &(* src = "serial_paralelo_synth.v:50|<techmap.v>:260|<techmap.v>:222" *)  _146_;
  assign _158_ = _149_ &(* src = "serial_paralelo_synth.v:50|<techmap.v>:260|<techmap.v>:222" *)  _148_;
  assign _159_ = _151_ &(* src = "serial_paralelo_synth.v:50|<techmap.v>:260|<techmap.v>:222" *)  _150_;
  assign _160_ = _153_ &(* src = "serial_paralelo_synth.v:50|<techmap.v>:260|<techmap.v>:222" *)  _152_;
  assign _161_ = _156_ &(* src = "serial_paralelo_synth.v:50|<techmap.v>:260|<techmap.v>:222" *)  _155_;
  assign _162_ = _158_ &(* src = "serial_paralelo_synth.v:50|<techmap.v>:260|<techmap.v>:222" *)  _157_;
  assign _163_ = _160_ &(* src = "serial_paralelo_synth.v:50|<techmap.v>:260|<techmap.v>:222" *)  _159_;
  assign _164_ = _163_ &(* src = "serial_paralelo_synth.v:50|<techmap.v>:260|<techmap.v>:222" *)  _162_;
  assign _165_ = _162_ &(* src = "serial_paralelo_synth.v:50|<techmap.v>:260|<techmap.v>:229" *)  _062_[15];
  assign _166_ = _159_ &(* src = "serial_paralelo_synth.v:50|<techmap.v>:260|<techmap.v>:229" *)  _062_[23];
  assign _167_ = _152_ &(* src = "serial_paralelo_synth.v:50|<techmap.v>:260|<techmap.v>:229" *)  _062_[27];
  assign _168_ = _063_[30] &(* src = "serial_paralelo_synth.v:50|<techmap.v>:260|<techmap.v>:229" *)  _062_[29];
  assign _062_[0] = BC_counter[0] |(* src = "serial_paralelo_synth.v:50|<techmap.v>:260|<techmap.v>:212" *)  _007_[0];
  assign _062_[1] = BC_counter[1] |(* src = "serial_paralelo_synth.v:50|<techmap.v>:260|<techmap.v>:221" *)  _109_;
  assign _169_ = BC_counter[5] |(* src = "serial_paralelo_synth.v:50|<techmap.v>:260|<techmap.v>:221" *)  _110_;
  assign _170_ = BC_counter[7] |(* src = "serial_paralelo_synth.v:50|<techmap.v>:260|<techmap.v>:221" *)  _111_;
  assign _171_ = BC_counter[9] |(* src = "serial_paralelo_synth.v:50|<techmap.v>:260|<techmap.v>:221" *)  _112_;
  assign _172_ = BC_counter[11] |(* src = "serial_paralelo_synth.v:50|<techmap.v>:260|<techmap.v>:221" *)  _113_;
  assign _173_ = BC_counter[13] |(* src = "serial_paralelo_synth.v:50|<techmap.v>:260|<techmap.v>:221" *)  _114_;
  assign _174_ = BC_counter[15] |(* src = "serial_paralelo_synth.v:50|<techmap.v>:260|<techmap.v>:221" *)  _115_;
  assign _175_ = BC_counter[17] |(* src = "serial_paralelo_synth.v:50|<techmap.v>:260|<techmap.v>:221" *)  _116_;
  assign _176_ = BC_counter[19] |(* src = "serial_paralelo_synth.v:50|<techmap.v>:260|<techmap.v>:221" *)  _117_;
  assign _177_ = BC_counter[21] |(* src = "serial_paralelo_synth.v:50|<techmap.v>:260|<techmap.v>:221" *)  _118_;
  assign _178_ = BC_counter[23] |(* src = "serial_paralelo_synth.v:50|<techmap.v>:260|<techmap.v>:221" *)  _119_;
  assign _179_ = BC_counter[25] |(* src = "serial_paralelo_synth.v:50|<techmap.v>:260|<techmap.v>:221" *)  _120_;
  assign _180_ = BC_counter[27] |(* src = "serial_paralelo_synth.v:50|<techmap.v>:260|<techmap.v>:221" *)  _121_;
  assign _181_ = BC_counter[29] |(* src = "serial_paralelo_synth.v:50|<techmap.v>:260|<techmap.v>:221" *)  _122_;
  assign _182_ = BC_counter[31] |(* src = "serial_paralelo_synth.v:50|<techmap.v>:260|<techmap.v>:221" *)  _123_;
  assign _062_[3] = BC_counter[3] |(* src = "serial_paralelo_synth.v:50|<techmap.v>:260|<techmap.v>:221" *)  _124_;
  assign _183_ = _170_ |(* src = "serial_paralelo_synth.v:50|<techmap.v>:260|<techmap.v>:221" *)  _125_;
  assign _184_ = _172_ |(* src = "serial_paralelo_synth.v:50|<techmap.v>:260|<techmap.v>:221" *)  _126_;
  assign _185_ = _174_ |(* src = "serial_paralelo_synth.v:50|<techmap.v>:260|<techmap.v>:221" *)  _127_;
  assign _186_ = _176_ |(* src = "serial_paralelo_synth.v:50|<techmap.v>:260|<techmap.v>:221" *)  _128_;
  assign _187_ = _178_ |(* src = "serial_paralelo_synth.v:50|<techmap.v>:260|<techmap.v>:221" *)  _129_;
  assign _188_ = _180_ |(* src = "serial_paralelo_synth.v:50|<techmap.v>:260|<techmap.v>:221" *)  _130_;
  assign _189_ = _182_ |(* src = "serial_paralelo_synth.v:50|<techmap.v>:260|<techmap.v>:221" *)  _131_;
  assign _062_[7] = _183_ |(* src = "serial_paralelo_synth.v:50|<techmap.v>:260|<techmap.v>:221" *)  _132_;
  assign _190_ = _185_ |(* src = "serial_paralelo_synth.v:50|<techmap.v>:260|<techmap.v>:221" *)  _133_;
  assign _191_ = _187_ |(* src = "serial_paralelo_synth.v:50|<techmap.v>:260|<techmap.v>:221" *)  _134_;
  assign _192_ = _189_ |(* src = "serial_paralelo_synth.v:50|<techmap.v>:260|<techmap.v>:221" *)  _135_;
  assign _062_[15] = _190_ |(* src = "serial_paralelo_synth.v:50|<techmap.v>:260|<techmap.v>:221" *)  _136_;
  assign _193_ = _192_ |(* src = "serial_paralelo_synth.v:50|<techmap.v>:260|<techmap.v>:221" *)  _137_;
  assign _062_[31] = _193_ |(* src = "serial_paralelo_synth.v:50|<techmap.v>:260|<techmap.v>:221" *)  _138_;
  assign _062_[23] = _191_ |(* src = "serial_paralelo_synth.v:50|<techmap.v>:260|<techmap.v>:229" *)  _165_;
  assign _062_[27] = _188_ |(* src = "serial_paralelo_synth.v:50|<techmap.v>:260|<techmap.v>:229" *)  _166_;
  assign _062_[29] = _181_ |(* src = "serial_paralelo_synth.v:50|<techmap.v>:260|<techmap.v>:229" *)  _167_;
  assign _062_[30] = BC_counter[30] |(* src = "serial_paralelo_synth.v:50|<techmap.v>:260|<techmap.v>:229" *)  _168_;
  assign _060_[1] = counter[1] &(* src = "serial_paralelo_synth.v:60|serial_paralelo_synth.v:45|<techmap.v>:260|<techmap.v>:221" *)  counter[0];
  assign _060_[3] = _087_ &(* src = "serial_paralelo_synth.v:60|serial_paralelo_synth.v:45|<techmap.v>:260|<techmap.v>:221" *)  _060_[1];
  assign _060_[7] = _101_ &(* src = "serial_paralelo_synth.v:60|serial_paralelo_synth.v:45|<techmap.v>:260|<techmap.v>:221" *)  _060_[3];
  assign _060_[15] = _107_ &(* src = "serial_paralelo_synth.v:60|serial_paralelo_synth.v:45|<techmap.v>:260|<techmap.v>:221" *)  _060_[7];
  assign _087_ = counter[3] &(* src = "serial_paralelo_synth.v:60|serial_paralelo_synth.v:45|<techmap.v>:260|<techmap.v>:222" *)  counter[2];
  assign _088_ = counter[5] &(* src = "serial_paralelo_synth.v:60|serial_paralelo_synth.v:45|<techmap.v>:260|<techmap.v>:222" *)  counter[4];
  assign _089_ = counter[7] &(* src = "serial_paralelo_synth.v:60|serial_paralelo_synth.v:45|<techmap.v>:260|<techmap.v>:222" *)  counter[6];
  assign _090_ = counter[9] &(* src = "serial_paralelo_synth.v:60|serial_paralelo_synth.v:45|<techmap.v>:260|<techmap.v>:222" *)  counter[8];
  assign _091_ = counter[11] &(* src = "serial_paralelo_synth.v:60|serial_paralelo_synth.v:45|<techmap.v>:260|<techmap.v>:222" *)  counter[10];
  assign _092_ = counter[13] &(* src = "serial_paralelo_synth.v:60|serial_paralelo_synth.v:45|<techmap.v>:260|<techmap.v>:222" *)  counter[12];
  assign _093_ = counter[15] &(* src = "serial_paralelo_synth.v:60|serial_paralelo_synth.v:45|<techmap.v>:260|<techmap.v>:222" *)  counter[14];
  assign _094_ = counter[17] &(* src = "serial_paralelo_synth.v:60|serial_paralelo_synth.v:45|<techmap.v>:260|<techmap.v>:222" *)  counter[16];
  assign _095_ = counter[19] &(* src = "serial_paralelo_synth.v:60|serial_paralelo_synth.v:45|<techmap.v>:260|<techmap.v>:222" *)  counter[18];
  assign _096_ = counter[21] &(* src = "serial_paralelo_synth.v:60|serial_paralelo_synth.v:45|<techmap.v>:260|<techmap.v>:222" *)  counter[20];
  assign _097_ = counter[23] &(* src = "serial_paralelo_synth.v:60|serial_paralelo_synth.v:45|<techmap.v>:260|<techmap.v>:222" *)  counter[22];
  assign _098_ = counter[25] &(* src = "serial_paralelo_synth.v:60|serial_paralelo_synth.v:45|<techmap.v>:260|<techmap.v>:222" *)  counter[24];
  assign _099_ = counter[27] &(* src = "serial_paralelo_synth.v:60|serial_paralelo_synth.v:45|<techmap.v>:260|<techmap.v>:222" *)  counter[26];
  assign _100_ = counter[29] &(* src = "serial_paralelo_synth.v:60|serial_paralelo_synth.v:45|<techmap.v>:260|<techmap.v>:222" *)  counter[28];
  assign _101_ = _089_ &(* src = "serial_paralelo_synth.v:60|serial_paralelo_synth.v:45|<techmap.v>:260|<techmap.v>:222" *)  _088_;
  assign _102_ = _091_ &(* src = "serial_paralelo_synth.v:60|serial_paralelo_synth.v:45|<techmap.v>:260|<techmap.v>:222" *)  _090_;
  assign _103_ = _093_ &(* src = "serial_paralelo_synth.v:60|serial_paralelo_synth.v:45|<techmap.v>:260|<techmap.v>:222" *)  _092_;
  assign _104_ = _095_ &(* src = "serial_paralelo_synth.v:60|serial_paralelo_synth.v:45|<techmap.v>:260|<techmap.v>:222" *)  _094_;
  assign _105_ = _097_ &(* src = "serial_paralelo_synth.v:60|serial_paralelo_synth.v:45|<techmap.v>:260|<techmap.v>:222" *)  _096_;
  assign _106_ = _099_ &(* src = "serial_paralelo_synth.v:60|serial_paralelo_synth.v:45|<techmap.v>:260|<techmap.v>:222" *)  _098_;
  assign _107_ = _103_ &(* src = "serial_paralelo_synth.v:60|serial_paralelo_synth.v:45|<techmap.v>:260|<techmap.v>:222" *)  _102_;
  assign _108_ = _105_ &(* src = "serial_paralelo_synth.v:60|serial_paralelo_synth.v:45|<techmap.v>:260|<techmap.v>:222" *)  _104_;
  assign _060_[23] = _108_ &(* src = "serial_paralelo_synth.v:60|serial_paralelo_synth.v:45|<techmap.v>:260|<techmap.v>:229" *)  _060_[15];
  assign _060_[11] = _102_ &(* src = "serial_paralelo_synth.v:60|serial_paralelo_synth.v:45|<techmap.v>:260|<techmap.v>:229" *)  _060_[7];
  assign _060_[19] = _104_ &(* src = "serial_paralelo_synth.v:60|serial_paralelo_synth.v:45|<techmap.v>:260|<techmap.v>:229" *)  _060_[15];
  assign _060_[27] = _106_ &(* src = "serial_paralelo_synth.v:60|serial_paralelo_synth.v:45|<techmap.v>:260|<techmap.v>:229" *)  _060_[23];
  assign _060_[5] = _088_ &(* src = "serial_paralelo_synth.v:60|serial_paralelo_synth.v:45|<techmap.v>:260|<techmap.v>:229" *)  _060_[3];
  assign _060_[9] = _090_ &(* src = "serial_paralelo_synth.v:60|serial_paralelo_synth.v:45|<techmap.v>:260|<techmap.v>:229" *)  _060_[7];
  assign _060_[13] = _092_ &(* src = "serial_paralelo_synth.v:60|serial_paralelo_synth.v:45|<techmap.v>:260|<techmap.v>:229" *)  _060_[11];
  assign _060_[17] = _094_ &(* src = "serial_paralelo_synth.v:60|serial_paralelo_synth.v:45|<techmap.v>:260|<techmap.v>:229" *)  _060_[15];
  assign _060_[21] = _096_ &(* src = "serial_paralelo_synth.v:60|serial_paralelo_synth.v:45|<techmap.v>:260|<techmap.v>:229" *)  _060_[19];
  assign _060_[25] = _098_ &(* src = "serial_paralelo_synth.v:60|serial_paralelo_synth.v:45|<techmap.v>:260|<techmap.v>:229" *)  _060_[23];
  assign _060_[29] = _100_ &(* src = "serial_paralelo_synth.v:60|serial_paralelo_synth.v:45|<techmap.v>:260|<techmap.v>:229" *)  _060_[27];
  assign _060_[2] = counter[2] &(* src = "serial_paralelo_synth.v:60|serial_paralelo_synth.v:45|<techmap.v>:260|<techmap.v>:229" *)  _060_[1];
  assign _060_[4] = counter[4] &(* src = "serial_paralelo_synth.v:60|serial_paralelo_synth.v:45|<techmap.v>:260|<techmap.v>:229" *)  _060_[3];
  assign _060_[6] = counter[6] &(* src = "serial_paralelo_synth.v:60|serial_paralelo_synth.v:45|<techmap.v>:260|<techmap.v>:229" *)  _060_[5];
  assign _060_[8] = counter[8] &(* src = "serial_paralelo_synth.v:60|serial_paralelo_synth.v:45|<techmap.v>:260|<techmap.v>:229" *)  _060_[7];
  assign _060_[10] = counter[10] &(* src = "serial_paralelo_synth.v:60|serial_paralelo_synth.v:45|<techmap.v>:260|<techmap.v>:229" *)  _060_[9];
  assign _060_[12] = counter[12] &(* src = "serial_paralelo_synth.v:60|serial_paralelo_synth.v:45|<techmap.v>:260|<techmap.v>:229" *)  _060_[11];
  assign _060_[14] = counter[14] &(* src = "serial_paralelo_synth.v:60|serial_paralelo_synth.v:45|<techmap.v>:260|<techmap.v>:229" *)  _060_[13];
  assign _060_[16] = counter[16] &(* src = "serial_paralelo_synth.v:60|serial_paralelo_synth.v:45|<techmap.v>:260|<techmap.v>:229" *)  _060_[15];
  assign _060_[18] = counter[18] &(* src = "serial_paralelo_synth.v:60|serial_paralelo_synth.v:45|<techmap.v>:260|<techmap.v>:229" *)  _060_[17];
  assign _060_[20] = counter[20] &(* src = "serial_paralelo_synth.v:60|serial_paralelo_synth.v:45|<techmap.v>:260|<techmap.v>:229" *)  _060_[19];
  assign _060_[22] = counter[22] &(* src = "serial_paralelo_synth.v:60|serial_paralelo_synth.v:45|<techmap.v>:260|<techmap.v>:229" *)  _060_[21];
  assign _060_[24] = counter[24] &(* src = "serial_paralelo_synth.v:60|serial_paralelo_synth.v:45|<techmap.v>:260|<techmap.v>:229" *)  _060_[23];
  assign _060_[26] = counter[26] &(* src = "serial_paralelo_synth.v:60|serial_paralelo_synth.v:45|<techmap.v>:260|<techmap.v>:229" *)  _060_[25];
  assign _060_[28] = counter[28] &(* src = "serial_paralelo_synth.v:60|serial_paralelo_synth.v:45|<techmap.v>:260|<techmap.v>:229" *)  _060_[27];
  assign _060_[30] = counter[30] &(* src = "serial_paralelo_synth.v:60|serial_paralelo_synth.v:45|<techmap.v>:260|<techmap.v>:229" *)  _060_[29];
  assign _025_[2] = BC_counter[2] ^(* src = "serial_paralelo_synth.v:29" *)  1'h1;
  assign _026_[2] = data2send2[2] ^(* src = "serial_paralelo_synth.v:32" *)  1'h1;
  assign _026_[3] = data2send2[3] ^(* src = "serial_paralelo_synth.v:32" *)  1'h1;
  assign _026_[4] = data2send2[4] ^(* src = "serial_paralelo_synth.v:32" *)  1'h1;
  assign _026_[5] = data2send2[5] ^(* src = "serial_paralelo_synth.v:32" *)  1'h1;
  assign _026_[7] = data2send2[7] ^(* src = "serial_paralelo_synth.v:32" *)  1'h1;
  assign _027_[2] = data2send[2] ^(* src = "serial_paralelo_synth.v:50" *)  1'h1;
  assign _027_[3] = data2send[3] ^(* src = "serial_paralelo_synth.v:50" *)  1'h1;
  assign _027_[4] = data2send[4] ^(* src = "serial_paralelo_synth.v:50" *)  1'h1;
  assign _027_[5] = data2send[5] ^(* src = "serial_paralelo_synth.v:50" *)  1'h1;
  assign _027_[7] = data2send[7] ^(* src = "serial_paralelo_synth.v:50" *)  1'h1;
  assign _028_[1] = counter[1] ^(* src = "serial_paralelo_synth.v:57" *)  1'h1;
  assign _028_[2] = counter[2] ^(* src = "serial_paralelo_synth.v:57" *)  1'h1;
  assign _013_[7:1] = _009_[7:1];
  assign _014_[3:1] = _010_[3:1];
  assign _015_[1] = _011_[1];
  assign _024_[15:2] = _012_[15:2];
  assign { _025_[31:3], _025_[1:0] } = { BC_counter[31:3], BC_counter[1:0] };
  assign { _026_[6], _026_[1:0] } = { data2send2[6], data2send2[1:0] };
  assign { _027_[6], _027_[1:0] } = { data2send[6], data2send[1:0] };
  assign { _028_[31:3], _028_[0] } = { counter[31:3], _008_[0] };
  assign _059_[0] = BC_counter[0];
  assign _060_[0] = counter[0];
  assign { _063_[2], _063_[0] } = { BC_counter[2], _007_[0] };
endmodule

(* src = "striping_synth.v:1" *)
module striping_synth(clk_2f, data_in, valid_in, reset, lane_0, lane_1, valid_0, valid_1);
  (* src = "striping_synth.v:13" *)
  wire [31:0] _000_;
  (* src = "striping_synth.v:13" *)
  wire [31:0] _001_;
  (* src = "striping_synth.v:13" *)
  wire _002_;
  (* src = "striping_synth.v:13" *)
  wire _003_;
  (* src = "striping_synth.v:13" *)
  wire _004_;
  (* src = "striping_synth.v:26" *)
  wire _005_;
  (* src = "striping_synth.v:39" *)
  wire _006_;
  (* src = "striping_synth.v:26" *)
  wire _007_;
  (* src = "striping_synth.v:33" *)
  wire _008_;
  (* src = "striping_synth.v:39" *)
  wire _009_;
  (* src = "striping_synth.v:44" *)
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire [31:0] _014_;
  wire [31:0] _015_;
  wire [31:0] _016_;
  wire [31:0] _017_;
  wire [31:0] _018_;
  wire [31:0] _019_;
  wire [31:0] _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  (* src = "striping_synth.v:3" *)
  input clk_2f;
  (* src = "striping_synth.v:4" *)
  input [31:0] data_in;
  (* src = "striping_synth.v:7" *)
  output [31:0] lane_0;
  reg [31:0] lane_0;
  (* src = "striping_synth.v:8" *)
  output [31:0] lane_1;
  reg [31:0] lane_1;
  (* src = "striping_synth.v:6" *)
  input reset;
  (* src = "striping_synth.v:12" *)
  reg selector;
  (* src = "striping_synth.v:9" *)
  output valid_0;
  reg valid_0;
  (* src = "striping_synth.v:10" *)
  output valid_1;
  reg valid_1;
  (* src = "striping_synth.v:5" *)
  input valid_in;
  assign _007_ = valid_in &(* src = "striping_synth.v:26" *)  _005_;
  assign _008_ = valid_in &(* src = "striping_synth.v:33" *)  selector;
  assign _009_ = _006_ &(* src = "striping_synth.v:39" *)  _005_;
  assign _010_ = _006_ &(* src = "striping_synth.v:44" *)  selector;
  assign _013_ = _007_ ? (* src = "striping_synth.v:26" *) 1'h1 : _012_;
  assign _011_ = _009_ ? (* src = "striping_synth.v:39" *) 1'h0 : valid_0;
  assign _012_ = _008_ ? (* src = "striping_synth.v:33" *) valid_0 : _011_;
  assign _003_ = reset ? (* src = "striping_synth.v:15" *) 1'h0 : _013_;
  assign _016_[0] = _008_ ? (* src = "striping_synth.v:33" *) data_in[0] : _015_[0];
  assign _016_[1] = _008_ ? (* src = "striping_synth.v:33" *) data_in[1] : _015_[1];
  assign _016_[2] = _008_ ? (* src = "striping_synth.v:33" *) data_in[2] : _015_[2];
  assign _016_[3] = _008_ ? (* src = "striping_synth.v:33" *) data_in[3] : _015_[3];
  assign _016_[4] = _008_ ? (* src = "striping_synth.v:33" *) data_in[4] : _015_[4];
  assign _016_[5] = _008_ ? (* src = "striping_synth.v:33" *) data_in[5] : _015_[5];
  assign _016_[6] = _008_ ? (* src = "striping_synth.v:33" *) data_in[6] : _015_[6];
  assign _016_[7] = _008_ ? (* src = "striping_synth.v:33" *) data_in[7] : _015_[7];
  assign _016_[8] = _008_ ? (* src = "striping_synth.v:33" *) data_in[8] : _015_[8];
  assign _016_[9] = _008_ ? (* src = "striping_synth.v:33" *) data_in[9] : _015_[9];
  assign _016_[10] = _008_ ? (* src = "striping_synth.v:33" *) data_in[10] : _015_[10];
  assign _016_[11] = _008_ ? (* src = "striping_synth.v:33" *) data_in[11] : _015_[11];
  assign _016_[12] = _008_ ? (* src = "striping_synth.v:33" *) data_in[12] : _015_[12];
  assign _016_[13] = _008_ ? (* src = "striping_synth.v:33" *) data_in[13] : _015_[13];
  assign _016_[14] = _008_ ? (* src = "striping_synth.v:33" *) data_in[14] : _015_[14];
  assign _016_[15] = _008_ ? (* src = "striping_synth.v:33" *) data_in[15] : _015_[15];
  assign _016_[16] = _008_ ? (* src = "striping_synth.v:33" *) data_in[16] : _015_[16];
  assign _016_[17] = _008_ ? (* src = "striping_synth.v:33" *) data_in[17] : _015_[17];
  assign _016_[18] = _008_ ? (* src = "striping_synth.v:33" *) data_in[18] : _015_[18];
  assign _016_[19] = _008_ ? (* src = "striping_synth.v:33" *) data_in[19] : _015_[19];
  assign _016_[20] = _008_ ? (* src = "striping_synth.v:33" *) data_in[20] : _015_[20];
  assign _016_[21] = _008_ ? (* src = "striping_synth.v:33" *) data_in[21] : _015_[21];
  assign _016_[22] = _008_ ? (* src = "striping_synth.v:33" *) data_in[22] : _015_[22];
  assign _016_[23] = _008_ ? (* src = "striping_synth.v:33" *) data_in[23] : _015_[23];
  assign _016_[24] = _008_ ? (* src = "striping_synth.v:33" *) data_in[24] : _015_[24];
  assign _016_[25] = _008_ ? (* src = "striping_synth.v:33" *) data_in[25] : _015_[25];
  assign _016_[26] = _008_ ? (* src = "striping_synth.v:33" *) data_in[26] : _015_[26];
  assign _016_[27] = _008_ ? (* src = "striping_synth.v:33" *) data_in[27] : _015_[27];
  assign _016_[28] = _008_ ? (* src = "striping_synth.v:33" *) data_in[28] : _015_[28];
  assign _016_[29] = _008_ ? (* src = "striping_synth.v:33" *) data_in[29] : _015_[29];
  assign _016_[30] = _008_ ? (* src = "striping_synth.v:33" *) data_in[30] : _015_[30];
  assign _016_[31] = _008_ ? (* src = "striping_synth.v:33" *) data_in[31] : _015_[31];
  assign _014_[0] = _010_ ? (* src = "striping_synth.v:44" *) 1'h0 : lane_1[0];
  assign _014_[1] = _010_ ? (* src = "striping_synth.v:44" *) 1'h0 : lane_1[1];
  assign _014_[2] = _010_ ? (* src = "striping_synth.v:44" *) 1'h0 : lane_1[2];
  assign _014_[3] = _010_ ? (* src = "striping_synth.v:44" *) 1'h0 : lane_1[3];
  assign _014_[4] = _010_ ? (* src = "striping_synth.v:44" *) 1'h0 : lane_1[4];
  assign _014_[5] = _010_ ? (* src = "striping_synth.v:44" *) 1'h0 : lane_1[5];
  assign _014_[6] = _010_ ? (* src = "striping_synth.v:44" *) 1'h0 : lane_1[6];
  assign _014_[7] = _010_ ? (* src = "striping_synth.v:44" *) 1'h0 : lane_1[7];
  assign _014_[8] = _010_ ? (* src = "striping_synth.v:44" *) 1'h0 : lane_1[8];
  assign _014_[9] = _010_ ? (* src = "striping_synth.v:44" *) 1'h0 : lane_1[9];
  assign _014_[10] = _010_ ? (* src = "striping_synth.v:44" *) 1'h0 : lane_1[10];
  assign _014_[11] = _010_ ? (* src = "striping_synth.v:44" *) 1'h0 : lane_1[11];
  assign _014_[12] = _010_ ? (* src = "striping_synth.v:44" *) 1'h0 : lane_1[12];
  assign _014_[13] = _010_ ? (* src = "striping_synth.v:44" *) 1'h0 : lane_1[13];
  assign _014_[14] = _010_ ? (* src = "striping_synth.v:44" *) 1'h0 : lane_1[14];
  assign _014_[15] = _010_ ? (* src = "striping_synth.v:44" *) 1'h0 : lane_1[15];
  assign _014_[16] = _010_ ? (* src = "striping_synth.v:44" *) 1'h0 : lane_1[16];
  assign _014_[17] = _010_ ? (* src = "striping_synth.v:44" *) 1'h0 : lane_1[17];
  assign _014_[18] = _010_ ? (* src = "striping_synth.v:44" *) 1'h0 : lane_1[18];
  assign _014_[19] = _010_ ? (* src = "striping_synth.v:44" *) 1'h0 : lane_1[19];
  assign _014_[20] = _010_ ? (* src = "striping_synth.v:44" *) 1'h0 : lane_1[20];
  assign _014_[21] = _010_ ? (* src = "striping_synth.v:44" *) 1'h0 : lane_1[21];
  assign _014_[22] = _010_ ? (* src = "striping_synth.v:44" *) 1'h0 : lane_1[22];
  assign _014_[23] = _010_ ? (* src = "striping_synth.v:44" *) 1'h0 : lane_1[23];
  assign _014_[24] = _010_ ? (* src = "striping_synth.v:44" *) 1'h0 : lane_1[24];
  assign _014_[25] = _010_ ? (* src = "striping_synth.v:44" *) 1'h0 : lane_1[25];
  assign _014_[26] = _010_ ? (* src = "striping_synth.v:44" *) 1'h0 : lane_1[26];
  assign _014_[27] = _010_ ? (* src = "striping_synth.v:44" *) 1'h0 : lane_1[27];
  assign _014_[28] = _010_ ? (* src = "striping_synth.v:44" *) 1'h0 : lane_1[28];
  assign _014_[29] = _010_ ? (* src = "striping_synth.v:44" *) 1'h0 : lane_1[29];
  assign _014_[30] = _010_ ? (* src = "striping_synth.v:44" *) 1'h0 : lane_1[30];
  assign _014_[31] = _010_ ? (* src = "striping_synth.v:44" *) 1'h0 : lane_1[31];
  assign _015_[0] = _009_ ? (* src = "striping_synth.v:39" *) lane_1[0] : _014_[0];
  assign _015_[1] = _009_ ? (* src = "striping_synth.v:39" *) lane_1[1] : _014_[1];
  assign _015_[2] = _009_ ? (* src = "striping_synth.v:39" *) lane_1[2] : _014_[2];
  assign _015_[3] = _009_ ? (* src = "striping_synth.v:39" *) lane_1[3] : _014_[3];
  assign _015_[4] = _009_ ? (* src = "striping_synth.v:39" *) lane_1[4] : _014_[4];
  assign _015_[5] = _009_ ? (* src = "striping_synth.v:39" *) lane_1[5] : _014_[5];
  assign _015_[6] = _009_ ? (* src = "striping_synth.v:39" *) lane_1[6] : _014_[6];
  assign _015_[7] = _009_ ? (* src = "striping_synth.v:39" *) lane_1[7] : _014_[7];
  assign _015_[8] = _009_ ? (* src = "striping_synth.v:39" *) lane_1[8] : _014_[8];
  assign _015_[9] = _009_ ? (* src = "striping_synth.v:39" *) lane_1[9] : _014_[9];
  assign _015_[10] = _009_ ? (* src = "striping_synth.v:39" *) lane_1[10] : _014_[10];
  assign _015_[11] = _009_ ? (* src = "striping_synth.v:39" *) lane_1[11] : _014_[11];
  assign _015_[12] = _009_ ? (* src = "striping_synth.v:39" *) lane_1[12] : _014_[12];
  assign _015_[13] = _009_ ? (* src = "striping_synth.v:39" *) lane_1[13] : _014_[13];
  assign _015_[14] = _009_ ? (* src = "striping_synth.v:39" *) lane_1[14] : _014_[14];
  assign _015_[15] = _009_ ? (* src = "striping_synth.v:39" *) lane_1[15] : _014_[15];
  assign _015_[16] = _009_ ? (* src = "striping_synth.v:39" *) lane_1[16] : _014_[16];
  assign _015_[17] = _009_ ? (* src = "striping_synth.v:39" *) lane_1[17] : _014_[17];
  assign _015_[18] = _009_ ? (* src = "striping_synth.v:39" *) lane_1[18] : _014_[18];
  assign _015_[19] = _009_ ? (* src = "striping_synth.v:39" *) lane_1[19] : _014_[19];
  assign _015_[20] = _009_ ? (* src = "striping_synth.v:39" *) lane_1[20] : _014_[20];
  assign _015_[21] = _009_ ? (* src = "striping_synth.v:39" *) lane_1[21] : _014_[21];
  assign _015_[22] = _009_ ? (* src = "striping_synth.v:39" *) lane_1[22] : _014_[22];
  assign _015_[23] = _009_ ? (* src = "striping_synth.v:39" *) lane_1[23] : _014_[23];
  assign _015_[24] = _009_ ? (* src = "striping_synth.v:39" *) lane_1[24] : _014_[24];
  assign _015_[25] = _009_ ? (* src = "striping_synth.v:39" *) lane_1[25] : _014_[25];
  assign _015_[26] = _009_ ? (* src = "striping_synth.v:39" *) lane_1[26] : _014_[26];
  assign _015_[27] = _009_ ? (* src = "striping_synth.v:39" *) lane_1[27] : _014_[27];
  assign _015_[28] = _009_ ? (* src = "striping_synth.v:39" *) lane_1[28] : _014_[28];
  assign _015_[29] = _009_ ? (* src = "striping_synth.v:39" *) lane_1[29] : _014_[29];
  assign _015_[30] = _009_ ? (* src = "striping_synth.v:39" *) lane_1[30] : _014_[30];
  assign _015_[31] = _009_ ? (* src = "striping_synth.v:39" *) lane_1[31] : _014_[31];
  assign _017_[0] = _007_ ? (* src = "striping_synth.v:26" *) lane_1[0] : _016_[0];
  assign _017_[1] = _007_ ? (* src = "striping_synth.v:26" *) lane_1[1] : _016_[1];
  assign _017_[2] = _007_ ? (* src = "striping_synth.v:26" *) lane_1[2] : _016_[2];
  assign _017_[3] = _007_ ? (* src = "striping_synth.v:26" *) lane_1[3] : _016_[3];
  assign _017_[4] = _007_ ? (* src = "striping_synth.v:26" *) lane_1[4] : _016_[4];
  assign _017_[5] = _007_ ? (* src = "striping_synth.v:26" *) lane_1[5] : _016_[5];
  assign _017_[6] = _007_ ? (* src = "striping_synth.v:26" *) lane_1[6] : _016_[6];
  assign _017_[7] = _007_ ? (* src = "striping_synth.v:26" *) lane_1[7] : _016_[7];
  assign _017_[8] = _007_ ? (* src = "striping_synth.v:26" *) lane_1[8] : _016_[8];
  assign _017_[9] = _007_ ? (* src = "striping_synth.v:26" *) lane_1[9] : _016_[9];
  assign _017_[10] = _007_ ? (* src = "striping_synth.v:26" *) lane_1[10] : _016_[10];
  assign _017_[11] = _007_ ? (* src = "striping_synth.v:26" *) lane_1[11] : _016_[11];
  assign _017_[12] = _007_ ? (* src = "striping_synth.v:26" *) lane_1[12] : _016_[12];
  assign _017_[13] = _007_ ? (* src = "striping_synth.v:26" *) lane_1[13] : _016_[13];
  assign _017_[14] = _007_ ? (* src = "striping_synth.v:26" *) lane_1[14] : _016_[14];
  assign _017_[15] = _007_ ? (* src = "striping_synth.v:26" *) lane_1[15] : _016_[15];
  assign _017_[16] = _007_ ? (* src = "striping_synth.v:26" *) lane_1[16] : _016_[16];
  assign _017_[17] = _007_ ? (* src = "striping_synth.v:26" *) lane_1[17] : _016_[17];
  assign _017_[18] = _007_ ? (* src = "striping_synth.v:26" *) lane_1[18] : _016_[18];
  assign _017_[19] = _007_ ? (* src = "striping_synth.v:26" *) lane_1[19] : _016_[19];
  assign _017_[20] = _007_ ? (* src = "striping_synth.v:26" *) lane_1[20] : _016_[20];
  assign _017_[21] = _007_ ? (* src = "striping_synth.v:26" *) lane_1[21] : _016_[21];
  assign _017_[22] = _007_ ? (* src = "striping_synth.v:26" *) lane_1[22] : _016_[22];
  assign _017_[23] = _007_ ? (* src = "striping_synth.v:26" *) lane_1[23] : _016_[23];
  assign _017_[24] = _007_ ? (* src = "striping_synth.v:26" *) lane_1[24] : _016_[24];
  assign _017_[25] = _007_ ? (* src = "striping_synth.v:26" *) lane_1[25] : _016_[25];
  assign _017_[26] = _007_ ? (* src = "striping_synth.v:26" *) lane_1[26] : _016_[26];
  assign _017_[27] = _007_ ? (* src = "striping_synth.v:26" *) lane_1[27] : _016_[27];
  assign _017_[28] = _007_ ? (* src = "striping_synth.v:26" *) lane_1[28] : _016_[28];
  assign _017_[29] = _007_ ? (* src = "striping_synth.v:26" *) lane_1[29] : _016_[29];
  assign _017_[30] = _007_ ? (* src = "striping_synth.v:26" *) lane_1[30] : _016_[30];
  assign _017_[31] = _007_ ? (* src = "striping_synth.v:26" *) lane_1[31] : _016_[31];
  assign _001_[0] = reset ? (* src = "striping_synth.v:15" *) 1'h0 : _017_[0];
  assign _001_[1] = reset ? (* src = "striping_synth.v:15" *) 1'h0 : _017_[1];
  assign _001_[2] = reset ? (* src = "striping_synth.v:15" *) 1'h0 : _017_[2];
  assign _001_[3] = reset ? (* src = "striping_synth.v:15" *) 1'h0 : _017_[3];
  assign _001_[4] = reset ? (* src = "striping_synth.v:15" *) 1'h0 : _017_[4];
  assign _001_[5] = reset ? (* src = "striping_synth.v:15" *) 1'h0 : _017_[5];
  assign _001_[6] = reset ? (* src = "striping_synth.v:15" *) 1'h0 : _017_[6];
  assign _001_[7] = reset ? (* src = "striping_synth.v:15" *) 1'h0 : _017_[7];
  assign _001_[8] = reset ? (* src = "striping_synth.v:15" *) 1'h0 : _017_[8];
  assign _001_[9] = reset ? (* src = "striping_synth.v:15" *) 1'h0 : _017_[9];
  assign _001_[10] = reset ? (* src = "striping_synth.v:15" *) 1'h0 : _017_[10];
  assign _001_[11] = reset ? (* src = "striping_synth.v:15" *) 1'h0 : _017_[11];
  assign _001_[12] = reset ? (* src = "striping_synth.v:15" *) 1'h0 : _017_[12];
  assign _001_[13] = reset ? (* src = "striping_synth.v:15" *) 1'h0 : _017_[13];
  assign _001_[14] = reset ? (* src = "striping_synth.v:15" *) 1'h0 : _017_[14];
  assign _001_[15] = reset ? (* src = "striping_synth.v:15" *) 1'h0 : _017_[15];
  assign _001_[16] = reset ? (* src = "striping_synth.v:15" *) 1'h0 : _017_[16];
  assign _001_[17] = reset ? (* src = "striping_synth.v:15" *) 1'h0 : _017_[17];
  assign _001_[18] = reset ? (* src = "striping_synth.v:15" *) 1'h0 : _017_[18];
  assign _001_[19] = reset ? (* src = "striping_synth.v:15" *) 1'h0 : _017_[19];
  assign _001_[20] = reset ? (* src = "striping_synth.v:15" *) 1'h0 : _017_[20];
  assign _001_[21] = reset ? (* src = "striping_synth.v:15" *) 1'h0 : _017_[21];
  assign _001_[22] = reset ? (* src = "striping_synth.v:15" *) 1'h0 : _017_[22];
  assign _001_[23] = reset ? (* src = "striping_synth.v:15" *) 1'h0 : _017_[23];
  assign _001_[24] = reset ? (* src = "striping_synth.v:15" *) 1'h0 : _017_[24];
  assign _001_[25] = reset ? (* src = "striping_synth.v:15" *) 1'h0 : _017_[25];
  assign _001_[26] = reset ? (* src = "striping_synth.v:15" *) 1'h0 : _017_[26];
  assign _001_[27] = reset ? (* src = "striping_synth.v:15" *) 1'h0 : _017_[27];
  assign _001_[28] = reset ? (* src = "striping_synth.v:15" *) 1'h0 : _017_[28];
  assign _001_[29] = reset ? (* src = "striping_synth.v:15" *) 1'h0 : _017_[29];
  assign _001_[30] = reset ? (* src = "striping_synth.v:15" *) 1'h0 : _017_[30];
  assign _001_[31] = reset ? (* src = "striping_synth.v:15" *) 1'h0 : _017_[31];
  assign _020_[0] = _007_ ? (* src = "striping_synth.v:26" *) data_in[0] : _019_[0];
  assign _020_[1] = _007_ ? (* src = "striping_synth.v:26" *) data_in[1] : _019_[1];
  assign _020_[2] = _007_ ? (* src = "striping_synth.v:26" *) data_in[2] : _019_[2];
  assign _020_[3] = _007_ ? (* src = "striping_synth.v:26" *) data_in[3] : _019_[3];
  assign _020_[4] = _007_ ? (* src = "striping_synth.v:26" *) data_in[4] : _019_[4];
  assign _020_[5] = _007_ ? (* src = "striping_synth.v:26" *) data_in[5] : _019_[5];
  assign _020_[6] = _007_ ? (* src = "striping_synth.v:26" *) data_in[6] : _019_[6];
  assign _020_[7] = _007_ ? (* src = "striping_synth.v:26" *) data_in[7] : _019_[7];
  assign _020_[8] = _007_ ? (* src = "striping_synth.v:26" *) data_in[8] : _019_[8];
  assign _020_[9] = _007_ ? (* src = "striping_synth.v:26" *) data_in[9] : _019_[9];
  assign _020_[10] = _007_ ? (* src = "striping_synth.v:26" *) data_in[10] : _019_[10];
  assign _020_[11] = _007_ ? (* src = "striping_synth.v:26" *) data_in[11] : _019_[11];
  assign _020_[12] = _007_ ? (* src = "striping_synth.v:26" *) data_in[12] : _019_[12];
  assign _020_[13] = _007_ ? (* src = "striping_synth.v:26" *) data_in[13] : _019_[13];
  assign _020_[14] = _007_ ? (* src = "striping_synth.v:26" *) data_in[14] : _019_[14];
  assign _020_[15] = _007_ ? (* src = "striping_synth.v:26" *) data_in[15] : _019_[15];
  assign _020_[16] = _007_ ? (* src = "striping_synth.v:26" *) data_in[16] : _019_[16];
  assign _020_[17] = _007_ ? (* src = "striping_synth.v:26" *) data_in[17] : _019_[17];
  assign _020_[18] = _007_ ? (* src = "striping_synth.v:26" *) data_in[18] : _019_[18];
  assign _020_[19] = _007_ ? (* src = "striping_synth.v:26" *) data_in[19] : _019_[19];
  assign _020_[20] = _007_ ? (* src = "striping_synth.v:26" *) data_in[20] : _019_[20];
  assign _020_[21] = _007_ ? (* src = "striping_synth.v:26" *) data_in[21] : _019_[21];
  assign _020_[22] = _007_ ? (* src = "striping_synth.v:26" *) data_in[22] : _019_[22];
  assign _020_[23] = _007_ ? (* src = "striping_synth.v:26" *) data_in[23] : _019_[23];
  assign _020_[24] = _007_ ? (* src = "striping_synth.v:26" *) data_in[24] : _019_[24];
  assign _020_[25] = _007_ ? (* src = "striping_synth.v:26" *) data_in[25] : _019_[25];
  assign _020_[26] = _007_ ? (* src = "striping_synth.v:26" *) data_in[26] : _019_[26];
  assign _020_[27] = _007_ ? (* src = "striping_synth.v:26" *) data_in[27] : _019_[27];
  assign _020_[28] = _007_ ? (* src = "striping_synth.v:26" *) data_in[28] : _019_[28];
  assign _020_[29] = _007_ ? (* src = "striping_synth.v:26" *) data_in[29] : _019_[29];
  assign _020_[30] = _007_ ? (* src = "striping_synth.v:26" *) data_in[30] : _019_[30];
  assign _020_[31] = _007_ ? (* src = "striping_synth.v:26" *) data_in[31] : _019_[31];
  assign _018_[0] = _009_ ? (* src = "striping_synth.v:39" *) 1'h0 : lane_0[0];
  assign _018_[1] = _009_ ? (* src = "striping_synth.v:39" *) 1'h0 : lane_0[1];
  assign _018_[2] = _009_ ? (* src = "striping_synth.v:39" *) 1'h0 : lane_0[2];
  assign _018_[3] = _009_ ? (* src = "striping_synth.v:39" *) 1'h0 : lane_0[3];
  assign _018_[4] = _009_ ? (* src = "striping_synth.v:39" *) 1'h0 : lane_0[4];
  assign _018_[5] = _009_ ? (* src = "striping_synth.v:39" *) 1'h0 : lane_0[5];
  assign _018_[6] = _009_ ? (* src = "striping_synth.v:39" *) 1'h0 : lane_0[6];
  assign _018_[7] = _009_ ? (* src = "striping_synth.v:39" *) 1'h0 : lane_0[7];
  assign _018_[8] = _009_ ? (* src = "striping_synth.v:39" *) 1'h0 : lane_0[8];
  assign _018_[9] = _009_ ? (* src = "striping_synth.v:39" *) 1'h0 : lane_0[9];
  assign _018_[10] = _009_ ? (* src = "striping_synth.v:39" *) 1'h0 : lane_0[10];
  assign _018_[11] = _009_ ? (* src = "striping_synth.v:39" *) 1'h0 : lane_0[11];
  assign _018_[12] = _009_ ? (* src = "striping_synth.v:39" *) 1'h0 : lane_0[12];
  assign _018_[13] = _009_ ? (* src = "striping_synth.v:39" *) 1'h0 : lane_0[13];
  assign _018_[14] = _009_ ? (* src = "striping_synth.v:39" *) 1'h0 : lane_0[14];
  assign _018_[15] = _009_ ? (* src = "striping_synth.v:39" *) 1'h0 : lane_0[15];
  assign _018_[16] = _009_ ? (* src = "striping_synth.v:39" *) 1'h0 : lane_0[16];
  assign _018_[17] = _009_ ? (* src = "striping_synth.v:39" *) 1'h0 : lane_0[17];
  assign _018_[18] = _009_ ? (* src = "striping_synth.v:39" *) 1'h0 : lane_0[18];
  assign _018_[19] = _009_ ? (* src = "striping_synth.v:39" *) 1'h0 : lane_0[19];
  assign _018_[20] = _009_ ? (* src = "striping_synth.v:39" *) 1'h0 : lane_0[20];
  assign _018_[21] = _009_ ? (* src = "striping_synth.v:39" *) 1'h0 : lane_0[21];
  assign _018_[22] = _009_ ? (* src = "striping_synth.v:39" *) 1'h0 : lane_0[22];
  assign _018_[23] = _009_ ? (* src = "striping_synth.v:39" *) 1'h0 : lane_0[23];
  assign _018_[24] = _009_ ? (* src = "striping_synth.v:39" *) 1'h0 : lane_0[24];
  assign _018_[25] = _009_ ? (* src = "striping_synth.v:39" *) 1'h0 : lane_0[25];
  assign _018_[26] = _009_ ? (* src = "striping_synth.v:39" *) 1'h0 : lane_0[26];
  assign _018_[27] = _009_ ? (* src = "striping_synth.v:39" *) 1'h0 : lane_0[27];
  assign _018_[28] = _009_ ? (* src = "striping_synth.v:39" *) 1'h0 : lane_0[28];
  assign _018_[29] = _009_ ? (* src = "striping_synth.v:39" *) 1'h0 : lane_0[29];
  assign _018_[30] = _009_ ? (* src = "striping_synth.v:39" *) 1'h0 : lane_0[30];
  assign _018_[31] = _009_ ? (* src = "striping_synth.v:39" *) 1'h0 : lane_0[31];
  assign _019_[0] = _008_ ? (* src = "striping_synth.v:33" *) lane_0[0] : _018_[0];
  assign _019_[1] = _008_ ? (* src = "striping_synth.v:33" *) lane_0[1] : _018_[1];
  assign _019_[2] = _008_ ? (* src = "striping_synth.v:33" *) lane_0[2] : _018_[2];
  assign _019_[3] = _008_ ? (* src = "striping_synth.v:33" *) lane_0[3] : _018_[3];
  assign _019_[4] = _008_ ? (* src = "striping_synth.v:33" *) lane_0[4] : _018_[4];
  assign _019_[5] = _008_ ? (* src = "striping_synth.v:33" *) lane_0[5] : _018_[5];
  assign _019_[6] = _008_ ? (* src = "striping_synth.v:33" *) lane_0[6] : _018_[6];
  assign _019_[7] = _008_ ? (* src = "striping_synth.v:33" *) lane_0[7] : _018_[7];
  assign _019_[8] = _008_ ? (* src = "striping_synth.v:33" *) lane_0[8] : _018_[8];
  assign _019_[9] = _008_ ? (* src = "striping_synth.v:33" *) lane_0[9] : _018_[9];
  assign _019_[10] = _008_ ? (* src = "striping_synth.v:33" *) lane_0[10] : _018_[10];
  assign _019_[11] = _008_ ? (* src = "striping_synth.v:33" *) lane_0[11] : _018_[11];
  assign _019_[12] = _008_ ? (* src = "striping_synth.v:33" *) lane_0[12] : _018_[12];
  assign _019_[13] = _008_ ? (* src = "striping_synth.v:33" *) lane_0[13] : _018_[13];
  assign _019_[14] = _008_ ? (* src = "striping_synth.v:33" *) lane_0[14] : _018_[14];
  assign _019_[15] = _008_ ? (* src = "striping_synth.v:33" *) lane_0[15] : _018_[15];
  assign _019_[16] = _008_ ? (* src = "striping_synth.v:33" *) lane_0[16] : _018_[16];
  assign _019_[17] = _008_ ? (* src = "striping_synth.v:33" *) lane_0[17] : _018_[17];
  assign _019_[18] = _008_ ? (* src = "striping_synth.v:33" *) lane_0[18] : _018_[18];
  assign _019_[19] = _008_ ? (* src = "striping_synth.v:33" *) lane_0[19] : _018_[19];
  assign _019_[20] = _008_ ? (* src = "striping_synth.v:33" *) lane_0[20] : _018_[20];
  assign _019_[21] = _008_ ? (* src = "striping_synth.v:33" *) lane_0[21] : _018_[21];
  assign _019_[22] = _008_ ? (* src = "striping_synth.v:33" *) lane_0[22] : _018_[22];
  assign _019_[23] = _008_ ? (* src = "striping_synth.v:33" *) lane_0[23] : _018_[23];
  assign _019_[24] = _008_ ? (* src = "striping_synth.v:33" *) lane_0[24] : _018_[24];
  assign _019_[25] = _008_ ? (* src = "striping_synth.v:33" *) lane_0[25] : _018_[25];
  assign _019_[26] = _008_ ? (* src = "striping_synth.v:33" *) lane_0[26] : _018_[26];
  assign _019_[27] = _008_ ? (* src = "striping_synth.v:33" *) lane_0[27] : _018_[27];
  assign _019_[28] = _008_ ? (* src = "striping_synth.v:33" *) lane_0[28] : _018_[28];
  assign _019_[29] = _008_ ? (* src = "striping_synth.v:33" *) lane_0[29] : _018_[29];
  assign _019_[30] = _008_ ? (* src = "striping_synth.v:33" *) lane_0[30] : _018_[30];
  assign _019_[31] = _008_ ? (* src = "striping_synth.v:33" *) lane_0[31] : _018_[31];
  assign _000_[0] = reset ? (* src = "striping_synth.v:15" *) 1'h0 : _020_[0];
  assign _000_[1] = reset ? (* src = "striping_synth.v:15" *) 1'h0 : _020_[1];
  assign _000_[2] = reset ? (* src = "striping_synth.v:15" *) 1'h0 : _020_[2];
  assign _000_[3] = reset ? (* src = "striping_synth.v:15" *) 1'h0 : _020_[3];
  assign _000_[4] = reset ? (* src = "striping_synth.v:15" *) 1'h0 : _020_[4];
  assign _000_[5] = reset ? (* src = "striping_synth.v:15" *) 1'h0 : _020_[5];
  assign _000_[6] = reset ? (* src = "striping_synth.v:15" *) 1'h0 : _020_[6];
  assign _000_[7] = reset ? (* src = "striping_synth.v:15" *) 1'h0 : _020_[7];
  assign _000_[8] = reset ? (* src = "striping_synth.v:15" *) 1'h0 : _020_[8];
  assign _000_[9] = reset ? (* src = "striping_synth.v:15" *) 1'h0 : _020_[9];
  assign _000_[10] = reset ? (* src = "striping_synth.v:15" *) 1'h0 : _020_[10];
  assign _000_[11] = reset ? (* src = "striping_synth.v:15" *) 1'h0 : _020_[11];
  assign _000_[12] = reset ? (* src = "striping_synth.v:15" *) 1'h0 : _020_[12];
  assign _000_[13] = reset ? (* src = "striping_synth.v:15" *) 1'h0 : _020_[13];
  assign _000_[14] = reset ? (* src = "striping_synth.v:15" *) 1'h0 : _020_[14];
  assign _000_[15] = reset ? (* src = "striping_synth.v:15" *) 1'h0 : _020_[15];
  assign _000_[16] = reset ? (* src = "striping_synth.v:15" *) 1'h0 : _020_[16];
  assign _000_[17] = reset ? (* src = "striping_synth.v:15" *) 1'h0 : _020_[17];
  assign _000_[18] = reset ? (* src = "striping_synth.v:15" *) 1'h0 : _020_[18];
  assign _000_[19] = reset ? (* src = "striping_synth.v:15" *) 1'h0 : _020_[19];
  assign _000_[20] = reset ? (* src = "striping_synth.v:15" *) 1'h0 : _020_[20];
  assign _000_[21] = reset ? (* src = "striping_synth.v:15" *) 1'h0 : _020_[21];
  assign _000_[22] = reset ? (* src = "striping_synth.v:15" *) 1'h0 : _020_[22];
  assign _000_[23] = reset ? (* src = "striping_synth.v:15" *) 1'h0 : _020_[23];
  assign _000_[24] = reset ? (* src = "striping_synth.v:15" *) 1'h0 : _020_[24];
  assign _000_[25] = reset ? (* src = "striping_synth.v:15" *) 1'h0 : _020_[25];
  assign _000_[26] = reset ? (* src = "striping_synth.v:15" *) 1'h0 : _020_[26];
  assign _000_[27] = reset ? (* src = "striping_synth.v:15" *) 1'h0 : _020_[27];
  assign _000_[28] = reset ? (* src = "striping_synth.v:15" *) 1'h0 : _020_[28];
  assign _000_[29] = reset ? (* src = "striping_synth.v:15" *) 1'h0 : _020_[29];
  assign _000_[30] = reset ? (* src = "striping_synth.v:15" *) 1'h0 : _020_[30];
  assign _000_[31] = reset ? (* src = "striping_synth.v:15" *) 1'h0 : _020_[31];
  assign _023_ = _008_ ? (* src = "striping_synth.v:33" *) 1'h1 : _022_;
  assign _021_ = _010_ ? (* src = "striping_synth.v:44" *) 1'h0 : valid_1;
  assign _022_ = _009_ ? (* src = "striping_synth.v:39" *) valid_1 : _021_;
  assign _024_ = _007_ ? (* src = "striping_synth.v:26" *) valid_1 : _023_;
  assign _004_ = reset ? (* src = "striping_synth.v:15" *) 1'h0 : _024_;
  assign _027_ = _008_ ? (* src = "striping_synth.v:33" *) _005_ : _026_;
  assign _025_ = _010_ ? (* src = "striping_synth.v:44" *) _005_ : 1'h0;
  assign _026_ = _009_ ? (* src = "striping_synth.v:39" *) _005_ : _025_;
  assign _028_ = _007_ ? (* src = "striping_synth.v:26" *) _005_ : _027_;
  assign _002_ = reset ? (* src = "striping_synth.v:15" *) 1'h0 : _028_;
  assign _005_ = ~(* src = "striping_synth.v:39" *) selector;
  assign _006_ = ~(* src = "striping_synth.v:44" *) valid_in;
  (* src = "striping_synth.v:13" *)
  always @(posedge clk_2f)
      selector <= _002_;
  (* src = "striping_synth.v:13" *)
  always @(posedge clk_2f)
      valid_1 <= _004_;
  (* src = "striping_synth.v:13" *)
  always @(posedge clk_2f)
      lane_0[0] <= _000_[0];
  (* src = "striping_synth.v:13" *)
  always @(posedge clk_2f)
      lane_0[1] <= _000_[1];
  (* src = "striping_synth.v:13" *)
  always @(posedge clk_2f)
      lane_0[2] <= _000_[2];
  (* src = "striping_synth.v:13" *)
  always @(posedge clk_2f)
      lane_0[3] <= _000_[3];
  (* src = "striping_synth.v:13" *)
  always @(posedge clk_2f)
      lane_0[4] <= _000_[4];
  (* src = "striping_synth.v:13" *)
  always @(posedge clk_2f)
      lane_0[5] <= _000_[5];
  (* src = "striping_synth.v:13" *)
  always @(posedge clk_2f)
      lane_0[6] <= _000_[6];
  (* src = "striping_synth.v:13" *)
  always @(posedge clk_2f)
      lane_0[7] <= _000_[7];
  (* src = "striping_synth.v:13" *)
  always @(posedge clk_2f)
      lane_0[8] <= _000_[8];
  (* src = "striping_synth.v:13" *)
  always @(posedge clk_2f)
      lane_0[9] <= _000_[9];
  (* src = "striping_synth.v:13" *)
  always @(posedge clk_2f)
      lane_0[10] <= _000_[10];
  (* src = "striping_synth.v:13" *)
  always @(posedge clk_2f)
      lane_0[11] <= _000_[11];
  (* src = "striping_synth.v:13" *)
  always @(posedge clk_2f)
      lane_0[12] <= _000_[12];
  (* src = "striping_synth.v:13" *)
  always @(posedge clk_2f)
      lane_0[13] <= _000_[13];
  (* src = "striping_synth.v:13" *)
  always @(posedge clk_2f)
      lane_0[14] <= _000_[14];
  (* src = "striping_synth.v:13" *)
  always @(posedge clk_2f)
      lane_0[15] <= _000_[15];
  (* src = "striping_synth.v:13" *)
  always @(posedge clk_2f)
      lane_0[16] <= _000_[16];
  (* src = "striping_synth.v:13" *)
  always @(posedge clk_2f)
      lane_0[17] <= _000_[17];
  (* src = "striping_synth.v:13" *)
  always @(posedge clk_2f)
      lane_0[18] <= _000_[18];
  (* src = "striping_synth.v:13" *)
  always @(posedge clk_2f)
      lane_0[19] <= _000_[19];
  (* src = "striping_synth.v:13" *)
  always @(posedge clk_2f)
      lane_0[20] <= _000_[20];
  (* src = "striping_synth.v:13" *)
  always @(posedge clk_2f)
      lane_0[21] <= _000_[21];
  (* src = "striping_synth.v:13" *)
  always @(posedge clk_2f)
      lane_0[22] <= _000_[22];
  (* src = "striping_synth.v:13" *)
  always @(posedge clk_2f)
      lane_0[23] <= _000_[23];
  (* src = "striping_synth.v:13" *)
  always @(posedge clk_2f)
      lane_0[24] <= _000_[24];
  (* src = "striping_synth.v:13" *)
  always @(posedge clk_2f)
      lane_0[25] <= _000_[25];
  (* src = "striping_synth.v:13" *)
  always @(posedge clk_2f)
      lane_0[26] <= _000_[26];
  (* src = "striping_synth.v:13" *)
  always @(posedge clk_2f)
      lane_0[27] <= _000_[27];
  (* src = "striping_synth.v:13" *)
  always @(posedge clk_2f)
      lane_0[28] <= _000_[28];
  (* src = "striping_synth.v:13" *)
  always @(posedge clk_2f)
      lane_0[29] <= _000_[29];
  (* src = "striping_synth.v:13" *)
  always @(posedge clk_2f)
      lane_0[30] <= _000_[30];
  (* src = "striping_synth.v:13" *)
  always @(posedge clk_2f)
      lane_0[31] <= _000_[31];
  (* src = "striping_synth.v:13" *)
  always @(posedge clk_2f)
      lane_1[0] <= _001_[0];
  (* src = "striping_synth.v:13" *)
  always @(posedge clk_2f)
      lane_1[1] <= _001_[1];
  (* src = "striping_synth.v:13" *)
  always @(posedge clk_2f)
      lane_1[2] <= _001_[2];
  (* src = "striping_synth.v:13" *)
  always @(posedge clk_2f)
      lane_1[3] <= _001_[3];
  (* src = "striping_synth.v:13" *)
  always @(posedge clk_2f)
      lane_1[4] <= _001_[4];
  (* src = "striping_synth.v:13" *)
  always @(posedge clk_2f)
      lane_1[5] <= _001_[5];
  (* src = "striping_synth.v:13" *)
  always @(posedge clk_2f)
      lane_1[6] <= _001_[6];
  (* src = "striping_synth.v:13" *)
  always @(posedge clk_2f)
      lane_1[7] <= _001_[7];
  (* src = "striping_synth.v:13" *)
  always @(posedge clk_2f)
      lane_1[8] <= _001_[8];
  (* src = "striping_synth.v:13" *)
  always @(posedge clk_2f)
      lane_1[9] <= _001_[9];
  (* src = "striping_synth.v:13" *)
  always @(posedge clk_2f)
      lane_1[10] <= _001_[10];
  (* src = "striping_synth.v:13" *)
  always @(posedge clk_2f)
      lane_1[11] <= _001_[11];
  (* src = "striping_synth.v:13" *)
  always @(posedge clk_2f)
      lane_1[12] <= _001_[12];
  (* src = "striping_synth.v:13" *)
  always @(posedge clk_2f)
      lane_1[13] <= _001_[13];
  (* src = "striping_synth.v:13" *)
  always @(posedge clk_2f)
      lane_1[14] <= _001_[14];
  (* src = "striping_synth.v:13" *)
  always @(posedge clk_2f)
      lane_1[15] <= _001_[15];
  (* src = "striping_synth.v:13" *)
  always @(posedge clk_2f)
      lane_1[16] <= _001_[16];
  (* src = "striping_synth.v:13" *)
  always @(posedge clk_2f)
      lane_1[17] <= _001_[17];
  (* src = "striping_synth.v:13" *)
  always @(posedge clk_2f)
      lane_1[18] <= _001_[18];
  (* src = "striping_synth.v:13" *)
  always @(posedge clk_2f)
      lane_1[19] <= _001_[19];
  (* src = "striping_synth.v:13" *)
  always @(posedge clk_2f)
      lane_1[20] <= _001_[20];
  (* src = "striping_synth.v:13" *)
  always @(posedge clk_2f)
      lane_1[21] <= _001_[21];
  (* src = "striping_synth.v:13" *)
  always @(posedge clk_2f)
      lane_1[22] <= _001_[22];
  (* src = "striping_synth.v:13" *)
  always @(posedge clk_2f)
      lane_1[23] <= _001_[23];
  (* src = "striping_synth.v:13" *)
  always @(posedge clk_2f)
      lane_1[24] <= _001_[24];
  (* src = "striping_synth.v:13" *)
  always @(posedge clk_2f)
      lane_1[25] <= _001_[25];
  (* src = "striping_synth.v:13" *)
  always @(posedge clk_2f)
      lane_1[26] <= _001_[26];
  (* src = "striping_synth.v:13" *)
  always @(posedge clk_2f)
      lane_1[27] <= _001_[27];
  (* src = "striping_synth.v:13" *)
  always @(posedge clk_2f)
      lane_1[28] <= _001_[28];
  (* src = "striping_synth.v:13" *)
  always @(posedge clk_2f)
      lane_1[29] <= _001_[29];
  (* src = "striping_synth.v:13" *)
  always @(posedge clk_2f)
      lane_1[30] <= _001_[30];
  (* src = "striping_synth.v:13" *)
  always @(posedge clk_2f)
      lane_1[31] <= _001_[31];
  (* src = "striping_synth.v:13" *)
  always @(posedge clk_2f)
      valid_0 <= _003_;
endmodule

(* src = "un_striping_synth_synth.v:1" *)
module un_striping_synth_synth(clk_2f, lane_0, lane_1, valid_0, valid_1, reset, data_out, valid_out);
  (* src = "un_striping_synth_synth.v:13" *)
  wire [31:0] _000_;
  (* src = "un_striping_synth_synth.v:13" *)
  wire _001_;
  (* src = "un_striping_synth_synth.v:13" *)
  wire _002_;
  (* src = "un_striping_synth_synth.v:34" *)
  wire _003_;
  (* src = "un_striping_synth_synth.v:42" *)
  wire _004_;
  (* src = "un_striping_synth_synth.v:50" *)
  wire _005_;
  (* src = "un_striping_synth_synth.v:26" *)
  wire _006_;
  (* src = "un_striping_synth_synth.v:34" *)
  wire _007_;
  (* src = "un_striping_synth_synth.v:42" *)
  wire _008_;
  (* src = "un_striping_synth_synth.v:50" *)
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire [31:0] _018_;
  wire [31:0] _019_;
  wire [31:0] _020_;
  wire [31:0] _021_;
  (* src = "un_striping_synth_synth.v:3" *)
  input clk_2f;
  (* src = "un_striping_synth_synth.v:9" *)
  output [31:0] data_out;
  reg [31:0] data_out;
  (* src = "un_striping_synth_synth.v:4" *)
  input [31:0] lane_0;
  (* src = "un_striping_synth_synth.v:5" *)
  input [31:0] lane_1;
  (* src = "un_striping_synth_synth.v:8" *)
  input reset;
  (* src = "un_striping_synth_synth.v:12" *)
  reg selector;
  (* src = "un_striping_synth_synth.v:6" *)
  input valid_0;
  (* src = "un_striping_synth_synth.v:7" *)
  input valid_1;
  (* src = "un_striping_synth_synth.v:10" *)
  output valid_out;
  reg valid_out;
  assign _006_ = valid_0 &(* src = "un_striping_synth_synth.v:26" *)  selector;
  assign _007_ = valid_1 &(* src = "un_striping_synth_synth.v:34" *)  _003_;
  assign _008_ = _004_ &(* src = "un_striping_synth_synth.v:42" *)  selector;
  assign _009_ = _005_ &(* src = "un_striping_synth_synth.v:50" *)  _003_;
  assign _012_ = _007_ ? (* src = "un_striping_synth_synth.v:34" *) _003_ : _011_;
  assign _010_ = _009_ ? (* src = "un_striping_synth_synth.v:50" *) _003_ : 1'h0;
  assign _011_ = _008_ ? (* src = "un_striping_synth_synth.v:42" *) _003_ : _010_;
  assign _013_ = _006_ ? (* src = "un_striping_synth_synth.v:26" *) _003_ : _012_;
  assign _001_ = reset ? (* src = "un_striping_synth_synth.v:15" *) 1'h0 : _013_;
  assign _016_ = _007_ ? (* src = "un_striping_synth_synth.v:34" *) 1'h1 : _015_;
  assign _014_ = _009_ ? (* src = "un_striping_synth_synth.v:50" *) 1'h0 : valid_out;
  assign _015_ = _008_ ? (* src = "un_striping_synth_synth.v:42" *) 1'h0 : _014_;
  assign _017_ = _006_ ? (* src = "un_striping_synth_synth.v:26" *) 1'h1 : _016_;
  assign _002_ = reset ? (* src = "un_striping_synth_synth.v:15" *) 1'h0 : _017_;
  assign _020_[0] = _007_ ? (* src = "un_striping_synth_synth.v:34" *) lane_1[0] : _019_[0];
  assign _020_[1] = _007_ ? (* src = "un_striping_synth_synth.v:34" *) lane_1[1] : _019_[1];
  assign _020_[2] = _007_ ? (* src = "un_striping_synth_synth.v:34" *) lane_1[2] : _019_[2];
  assign _020_[3] = _007_ ? (* src = "un_striping_synth_synth.v:34" *) lane_1[3] : _019_[3];
  assign _020_[4] = _007_ ? (* src = "un_striping_synth_synth.v:34" *) lane_1[4] : _019_[4];
  assign _020_[5] = _007_ ? (* src = "un_striping_synth_synth.v:34" *) lane_1[5] : _019_[5];
  assign _020_[6] = _007_ ? (* src = "un_striping_synth_synth.v:34" *) lane_1[6] : _019_[6];
  assign _020_[7] = _007_ ? (* src = "un_striping_synth_synth.v:34" *) lane_1[7] : _019_[7];
  assign _020_[8] = _007_ ? (* src = "un_striping_synth_synth.v:34" *) lane_1[8] : _019_[8];
  assign _020_[9] = _007_ ? (* src = "un_striping_synth_synth.v:34" *) lane_1[9] : _019_[9];
  assign _020_[10] = _007_ ? (* src = "un_striping_synth_synth.v:34" *) lane_1[10] : _019_[10];
  assign _020_[11] = _007_ ? (* src = "un_striping_synth_synth.v:34" *) lane_1[11] : _019_[11];
  assign _020_[12] = _007_ ? (* src = "un_striping_synth_synth.v:34" *) lane_1[12] : _019_[12];
  assign _020_[13] = _007_ ? (* src = "un_striping_synth_synth.v:34" *) lane_1[13] : _019_[13];
  assign _020_[14] = _007_ ? (* src = "un_striping_synth_synth.v:34" *) lane_1[14] : _019_[14];
  assign _020_[15] = _007_ ? (* src = "un_striping_synth_synth.v:34" *) lane_1[15] : _019_[15];
  assign _020_[16] = _007_ ? (* src = "un_striping_synth_synth.v:34" *) lane_1[16] : _019_[16];
  assign _020_[17] = _007_ ? (* src = "un_striping_synth_synth.v:34" *) lane_1[17] : _019_[17];
  assign _020_[18] = _007_ ? (* src = "un_striping_synth_synth.v:34" *) lane_1[18] : _019_[18];
  assign _020_[19] = _007_ ? (* src = "un_striping_synth_synth.v:34" *) lane_1[19] : _019_[19];
  assign _020_[20] = _007_ ? (* src = "un_striping_synth_synth.v:34" *) lane_1[20] : _019_[20];
  assign _020_[21] = _007_ ? (* src = "un_striping_synth_synth.v:34" *) lane_1[21] : _019_[21];
  assign _020_[22] = _007_ ? (* src = "un_striping_synth_synth.v:34" *) lane_1[22] : _019_[22];
  assign _020_[23] = _007_ ? (* src = "un_striping_synth_synth.v:34" *) lane_1[23] : _019_[23];
  assign _020_[24] = _007_ ? (* src = "un_striping_synth_synth.v:34" *) lane_1[24] : _019_[24];
  assign _020_[25] = _007_ ? (* src = "un_striping_synth_synth.v:34" *) lane_1[25] : _019_[25];
  assign _020_[26] = _007_ ? (* src = "un_striping_synth_synth.v:34" *) lane_1[26] : _019_[26];
  assign _020_[27] = _007_ ? (* src = "un_striping_synth_synth.v:34" *) lane_1[27] : _019_[27];
  assign _020_[28] = _007_ ? (* src = "un_striping_synth_synth.v:34" *) lane_1[28] : _019_[28];
  assign _020_[29] = _007_ ? (* src = "un_striping_synth_synth.v:34" *) lane_1[29] : _019_[29];
  assign _020_[30] = _007_ ? (* src = "un_striping_synth_synth.v:34" *) lane_1[30] : _019_[30];
  assign _020_[31] = _007_ ? (* src = "un_striping_synth_synth.v:34" *) lane_1[31] : _019_[31];
  assign _018_[0] = _009_ ? (* src = "un_striping_synth_synth.v:50" *) 1'h0 : data_out[0];
  assign _018_[1] = _009_ ? (* src = "un_striping_synth_synth.v:50" *) 1'h0 : data_out[1];
  assign _018_[2] = _009_ ? (* src = "un_striping_synth_synth.v:50" *) 1'h0 : data_out[2];
  assign _018_[3] = _009_ ? (* src = "un_striping_synth_synth.v:50" *) 1'h0 : data_out[3];
  assign _018_[4] = _009_ ? (* src = "un_striping_synth_synth.v:50" *) 1'h0 : data_out[4];
  assign _018_[5] = _009_ ? (* src = "un_striping_synth_synth.v:50" *) 1'h0 : data_out[5];
  assign _018_[6] = _009_ ? (* src = "un_striping_synth_synth.v:50" *) 1'h0 : data_out[6];
  assign _018_[7] = _009_ ? (* src = "un_striping_synth_synth.v:50" *) 1'h0 : data_out[7];
  assign _018_[8] = _009_ ? (* src = "un_striping_synth_synth.v:50" *) 1'h0 : data_out[8];
  assign _018_[9] = _009_ ? (* src = "un_striping_synth_synth.v:50" *) 1'h0 : data_out[9];
  assign _018_[10] = _009_ ? (* src = "un_striping_synth_synth.v:50" *) 1'h0 : data_out[10];
  assign _018_[11] = _009_ ? (* src = "un_striping_synth_synth.v:50" *) 1'h0 : data_out[11];
  assign _018_[12] = _009_ ? (* src = "un_striping_synth_synth.v:50" *) 1'h0 : data_out[12];
  assign _018_[13] = _009_ ? (* src = "un_striping_synth_synth.v:50" *) 1'h0 : data_out[13];
  assign _018_[14] = _009_ ? (* src = "un_striping_synth_synth.v:50" *) 1'h0 : data_out[14];
  assign _018_[15] = _009_ ? (* src = "un_striping_synth_synth.v:50" *) 1'h0 : data_out[15];
  assign _018_[16] = _009_ ? (* src = "un_striping_synth_synth.v:50" *) 1'h0 : data_out[16];
  assign _018_[17] = _009_ ? (* src = "un_striping_synth_synth.v:50" *) 1'h0 : data_out[17];
  assign _018_[18] = _009_ ? (* src = "un_striping_synth_synth.v:50" *) 1'h0 : data_out[18];
  assign _018_[19] = _009_ ? (* src = "un_striping_synth_synth.v:50" *) 1'h0 : data_out[19];
  assign _018_[20] = _009_ ? (* src = "un_striping_synth_synth.v:50" *) 1'h0 : data_out[20];
  assign _018_[21] = _009_ ? (* src = "un_striping_synth_synth.v:50" *) 1'h0 : data_out[21];
  assign _018_[22] = _009_ ? (* src = "un_striping_synth_synth.v:50" *) 1'h0 : data_out[22];
  assign _018_[23] = _009_ ? (* src = "un_striping_synth_synth.v:50" *) 1'h0 : data_out[23];
  assign _018_[24] = _009_ ? (* src = "un_striping_synth_synth.v:50" *) 1'h0 : data_out[24];
  assign _018_[25] = _009_ ? (* src = "un_striping_synth_synth.v:50" *) 1'h0 : data_out[25];
  assign _018_[26] = _009_ ? (* src = "un_striping_synth_synth.v:50" *) 1'h0 : data_out[26];
  assign _018_[27] = _009_ ? (* src = "un_striping_synth_synth.v:50" *) 1'h0 : data_out[27];
  assign _018_[28] = _009_ ? (* src = "un_striping_synth_synth.v:50" *) 1'h0 : data_out[28];
  assign _018_[29] = _009_ ? (* src = "un_striping_synth_synth.v:50" *) 1'h0 : data_out[29];
  assign _018_[30] = _009_ ? (* src = "un_striping_synth_synth.v:50" *) 1'h0 : data_out[30];
  assign _018_[31] = _009_ ? (* src = "un_striping_synth_synth.v:50" *) 1'h0 : data_out[31];
  assign _019_[0] = _008_ ? (* src = "un_striping_synth_synth.v:42" *) 1'h0 : _018_[0];
  assign _019_[1] = _008_ ? (* src = "un_striping_synth_synth.v:42" *) 1'h0 : _018_[1];
  assign _019_[2] = _008_ ? (* src = "un_striping_synth_synth.v:42" *) 1'h0 : _018_[2];
  assign _019_[3] = _008_ ? (* src = "un_striping_synth_synth.v:42" *) 1'h0 : _018_[3];
  assign _019_[4] = _008_ ? (* src = "un_striping_synth_synth.v:42" *) 1'h0 : _018_[4];
  assign _019_[5] = _008_ ? (* src = "un_striping_synth_synth.v:42" *) 1'h0 : _018_[5];
  assign _019_[6] = _008_ ? (* src = "un_striping_synth_synth.v:42" *) 1'h0 : _018_[6];
  assign _019_[7] = _008_ ? (* src = "un_striping_synth_synth.v:42" *) 1'h0 : _018_[7];
  assign _019_[8] = _008_ ? (* src = "un_striping_synth_synth.v:42" *) 1'h0 : _018_[8];
  assign _019_[9] = _008_ ? (* src = "un_striping_synth_synth.v:42" *) 1'h0 : _018_[9];
  assign _019_[10] = _008_ ? (* src = "un_striping_synth_synth.v:42" *) 1'h0 : _018_[10];
  assign _019_[11] = _008_ ? (* src = "un_striping_synth_synth.v:42" *) 1'h0 : _018_[11];
  assign _019_[12] = _008_ ? (* src = "un_striping_synth_synth.v:42" *) 1'h0 : _018_[12];
  assign _019_[13] = _008_ ? (* src = "un_striping_synth_synth.v:42" *) 1'h0 : _018_[13];
  assign _019_[14] = _008_ ? (* src = "un_striping_synth_synth.v:42" *) 1'h0 : _018_[14];
  assign _019_[15] = _008_ ? (* src = "un_striping_synth_synth.v:42" *) 1'h0 : _018_[15];
  assign _019_[16] = _008_ ? (* src = "un_striping_synth_synth.v:42" *) 1'h0 : _018_[16];
  assign _019_[17] = _008_ ? (* src = "un_striping_synth_synth.v:42" *) 1'h0 : _018_[17];
  assign _019_[18] = _008_ ? (* src = "un_striping_synth_synth.v:42" *) 1'h0 : _018_[18];
  assign _019_[19] = _008_ ? (* src = "un_striping_synth_synth.v:42" *) 1'h0 : _018_[19];
  assign _019_[20] = _008_ ? (* src = "un_striping_synth_synth.v:42" *) 1'h0 : _018_[20];
  assign _019_[21] = _008_ ? (* src = "un_striping_synth_synth.v:42" *) 1'h0 : _018_[21];
  assign _019_[22] = _008_ ? (* src = "un_striping_synth_synth.v:42" *) 1'h0 : _018_[22];
  assign _019_[23] = _008_ ? (* src = "un_striping_synth_synth.v:42" *) 1'h0 : _018_[23];
  assign _019_[24] = _008_ ? (* src = "un_striping_synth_synth.v:42" *) 1'h0 : _018_[24];
  assign _019_[25] = _008_ ? (* src = "un_striping_synth_synth.v:42" *) 1'h0 : _018_[25];
  assign _019_[26] = _008_ ? (* src = "un_striping_synth_synth.v:42" *) 1'h0 : _018_[26];
  assign _019_[27] = _008_ ? (* src = "un_striping_synth_synth.v:42" *) 1'h0 : _018_[27];
  assign _019_[28] = _008_ ? (* src = "un_striping_synth_synth.v:42" *) 1'h0 : _018_[28];
  assign _019_[29] = _008_ ? (* src = "un_striping_synth_synth.v:42" *) 1'h0 : _018_[29];
  assign _019_[30] = _008_ ? (* src = "un_striping_synth_synth.v:42" *) 1'h0 : _018_[30];
  assign _019_[31] = _008_ ? (* src = "un_striping_synth_synth.v:42" *) 1'h0 : _018_[31];
  assign _021_[0] = _006_ ? (* src = "un_striping_synth_synth.v:26" *) lane_0[0] : _020_[0];
  assign _021_[1] = _006_ ? (* src = "un_striping_synth_synth.v:26" *) lane_0[1] : _020_[1];
  assign _021_[2] = _006_ ? (* src = "un_striping_synth_synth.v:26" *) lane_0[2] : _020_[2];
  assign _021_[3] = _006_ ? (* src = "un_striping_synth_synth.v:26" *) lane_0[3] : _020_[3];
  assign _021_[4] = _006_ ? (* src = "un_striping_synth_synth.v:26" *) lane_0[4] : _020_[4];
  assign _021_[5] = _006_ ? (* src = "un_striping_synth_synth.v:26" *) lane_0[5] : _020_[5];
  assign _021_[6] = _006_ ? (* src = "un_striping_synth_synth.v:26" *) lane_0[6] : _020_[6];
  assign _021_[7] = _006_ ? (* src = "un_striping_synth_synth.v:26" *) lane_0[7] : _020_[7];
  assign _021_[8] = _006_ ? (* src = "un_striping_synth_synth.v:26" *) lane_0[8] : _020_[8];
  assign _021_[9] = _006_ ? (* src = "un_striping_synth_synth.v:26" *) lane_0[9] : _020_[9];
  assign _021_[10] = _006_ ? (* src = "un_striping_synth_synth.v:26" *) lane_0[10] : _020_[10];
  assign _021_[11] = _006_ ? (* src = "un_striping_synth_synth.v:26" *) lane_0[11] : _020_[11];
  assign _021_[12] = _006_ ? (* src = "un_striping_synth_synth.v:26" *) lane_0[12] : _020_[12];
  assign _021_[13] = _006_ ? (* src = "un_striping_synth_synth.v:26" *) lane_0[13] : _020_[13];
  assign _021_[14] = _006_ ? (* src = "un_striping_synth_synth.v:26" *) lane_0[14] : _020_[14];
  assign _021_[15] = _006_ ? (* src = "un_striping_synth_synth.v:26" *) lane_0[15] : _020_[15];
  assign _021_[16] = _006_ ? (* src = "un_striping_synth_synth.v:26" *) lane_0[16] : _020_[16];
  assign _021_[17] = _006_ ? (* src = "un_striping_synth_synth.v:26" *) lane_0[17] : _020_[17];
  assign _021_[18] = _006_ ? (* src = "un_striping_synth_synth.v:26" *) lane_0[18] : _020_[18];
  assign _021_[19] = _006_ ? (* src = "un_striping_synth_synth.v:26" *) lane_0[19] : _020_[19];
  assign _021_[20] = _006_ ? (* src = "un_striping_synth_synth.v:26" *) lane_0[20] : _020_[20];
  assign _021_[21] = _006_ ? (* src = "un_striping_synth_synth.v:26" *) lane_0[21] : _020_[21];
  assign _021_[22] = _006_ ? (* src = "un_striping_synth_synth.v:26" *) lane_0[22] : _020_[22];
  assign _021_[23] = _006_ ? (* src = "un_striping_synth_synth.v:26" *) lane_0[23] : _020_[23];
  assign _021_[24] = _006_ ? (* src = "un_striping_synth_synth.v:26" *) lane_0[24] : _020_[24];
  assign _021_[25] = _006_ ? (* src = "un_striping_synth_synth.v:26" *) lane_0[25] : _020_[25];
  assign _021_[26] = _006_ ? (* src = "un_striping_synth_synth.v:26" *) lane_0[26] : _020_[26];
  assign _021_[27] = _006_ ? (* src = "un_striping_synth_synth.v:26" *) lane_0[27] : _020_[27];
  assign _021_[28] = _006_ ? (* src = "un_striping_synth_synth.v:26" *) lane_0[28] : _020_[28];
  assign _021_[29] = _006_ ? (* src = "un_striping_synth_synth.v:26" *) lane_0[29] : _020_[29];
  assign _021_[30] = _006_ ? (* src = "un_striping_synth_synth.v:26" *) lane_0[30] : _020_[30];
  assign _021_[31] = _006_ ? (* src = "un_striping_synth_synth.v:26" *) lane_0[31] : _020_[31];
  assign _000_[0] = reset ? (* src = "un_striping_synth_synth.v:15" *) 1'h0 : _021_[0];
  assign _000_[1] = reset ? (* src = "un_striping_synth_synth.v:15" *) 1'h0 : _021_[1];
  assign _000_[2] = reset ? (* src = "un_striping_synth_synth.v:15" *) 1'h0 : _021_[2];
  assign _000_[3] = reset ? (* src = "un_striping_synth_synth.v:15" *) 1'h0 : _021_[3];
  assign _000_[4] = reset ? (* src = "un_striping_synth_synth.v:15" *) 1'h0 : _021_[4];
  assign _000_[5] = reset ? (* src = "un_striping_synth_synth.v:15" *) 1'h0 : _021_[5];
  assign _000_[6] = reset ? (* src = "un_striping_synth_synth.v:15" *) 1'h0 : _021_[6];
  assign _000_[7] = reset ? (* src = "un_striping_synth_synth.v:15" *) 1'h0 : _021_[7];
  assign _000_[8] = reset ? (* src = "un_striping_synth_synth.v:15" *) 1'h0 : _021_[8];
  assign _000_[9] = reset ? (* src = "un_striping_synth_synth.v:15" *) 1'h0 : _021_[9];
  assign _000_[10] = reset ? (* src = "un_striping_synth_synth.v:15" *) 1'h0 : _021_[10];
  assign _000_[11] = reset ? (* src = "un_striping_synth_synth.v:15" *) 1'h0 : _021_[11];
  assign _000_[12] = reset ? (* src = "un_striping_synth_synth.v:15" *) 1'h0 : _021_[12];
  assign _000_[13] = reset ? (* src = "un_striping_synth_synth.v:15" *) 1'h0 : _021_[13];
  assign _000_[14] = reset ? (* src = "un_striping_synth_synth.v:15" *) 1'h0 : _021_[14];
  assign _000_[15] = reset ? (* src = "un_striping_synth_synth.v:15" *) 1'h0 : _021_[15];
  assign _000_[16] = reset ? (* src = "un_striping_synth_synth.v:15" *) 1'h0 : _021_[16];
  assign _000_[17] = reset ? (* src = "un_striping_synth_synth.v:15" *) 1'h0 : _021_[17];
  assign _000_[18] = reset ? (* src = "un_striping_synth_synth.v:15" *) 1'h0 : _021_[18];
  assign _000_[19] = reset ? (* src = "un_striping_synth_synth.v:15" *) 1'h0 : _021_[19];
  assign _000_[20] = reset ? (* src = "un_striping_synth_synth.v:15" *) 1'h0 : _021_[20];
  assign _000_[21] = reset ? (* src = "un_striping_synth_synth.v:15" *) 1'h0 : _021_[21];
  assign _000_[22] = reset ? (* src = "un_striping_synth_synth.v:15" *) 1'h0 : _021_[22];
  assign _000_[23] = reset ? (* src = "un_striping_synth_synth.v:15" *) 1'h0 : _021_[23];
  assign _000_[24] = reset ? (* src = "un_striping_synth_synth.v:15" *) 1'h0 : _021_[24];
  assign _000_[25] = reset ? (* src = "un_striping_synth_synth.v:15" *) 1'h0 : _021_[25];
  assign _000_[26] = reset ? (* src = "un_striping_synth_synth.v:15" *) 1'h0 : _021_[26];
  assign _000_[27] = reset ? (* src = "un_striping_synth_synth.v:15" *) 1'h0 : _021_[27];
  assign _000_[28] = reset ? (* src = "un_striping_synth_synth.v:15" *) 1'h0 : _021_[28];
  assign _000_[29] = reset ? (* src = "un_striping_synth_synth.v:15" *) 1'h0 : _021_[29];
  assign _000_[30] = reset ? (* src = "un_striping_synth_synth.v:15" *) 1'h0 : _021_[30];
  assign _000_[31] = reset ? (* src = "un_striping_synth_synth.v:15" *) 1'h0 : _021_[31];
  assign _004_ = ~(* src = "un_striping_synth_synth.v:42" *) valid_0;
  assign _005_ = ~(* src = "un_striping_synth_synth.v:50" *) valid_1;
  assign _003_ = ~(* src = "un_striping_synth_synth.v:50" *) selector;
  (* src = "un_striping_synth_synth.v:13" *)
  always @(posedge clk_2f)
      data_out[0] <= _000_[0];
  (* src = "un_striping_synth_synth.v:13" *)
  always @(posedge clk_2f)
      data_out[1] <= _000_[1];
  (* src = "un_striping_synth_synth.v:13" *)
  always @(posedge clk_2f)
      data_out[2] <= _000_[2];
  (* src = "un_striping_synth_synth.v:13" *)
  always @(posedge clk_2f)
      data_out[3] <= _000_[3];
  (* src = "un_striping_synth_synth.v:13" *)
  always @(posedge clk_2f)
      data_out[4] <= _000_[4];
  (* src = "un_striping_synth_synth.v:13" *)
  always @(posedge clk_2f)
      data_out[5] <= _000_[5];
  (* src = "un_striping_synth_synth.v:13" *)
  always @(posedge clk_2f)
      data_out[6] <= _000_[6];
  (* src = "un_striping_synth_synth.v:13" *)
  always @(posedge clk_2f)
      data_out[7] <= _000_[7];
  (* src = "un_striping_synth_synth.v:13" *)
  always @(posedge clk_2f)
      data_out[8] <= _000_[8];
  (* src = "un_striping_synth_synth.v:13" *)
  always @(posedge clk_2f)
      data_out[9] <= _000_[9];
  (* src = "un_striping_synth_synth.v:13" *)
  always @(posedge clk_2f)
      data_out[10] <= _000_[10];
  (* src = "un_striping_synth_synth.v:13" *)
  always @(posedge clk_2f)
      data_out[11] <= _000_[11];
  (* src = "un_striping_synth_synth.v:13" *)
  always @(posedge clk_2f)
      data_out[12] <= _000_[12];
  (* src = "un_striping_synth_synth.v:13" *)
  always @(posedge clk_2f)
      data_out[13] <= _000_[13];
  (* src = "un_striping_synth_synth.v:13" *)
  always @(posedge clk_2f)
      data_out[14] <= _000_[14];
  (* src = "un_striping_synth_synth.v:13" *)
  always @(posedge clk_2f)
      data_out[15] <= _000_[15];
  (* src = "un_striping_synth_synth.v:13" *)
  always @(posedge clk_2f)
      data_out[16] <= _000_[16];
  (* src = "un_striping_synth_synth.v:13" *)
  always @(posedge clk_2f)
      data_out[17] <= _000_[17];
  (* src = "un_striping_synth_synth.v:13" *)
  always @(posedge clk_2f)
      data_out[18] <= _000_[18];
  (* src = "un_striping_synth_synth.v:13" *)
  always @(posedge clk_2f)
      data_out[19] <= _000_[19];
  (* src = "un_striping_synth_synth.v:13" *)
  always @(posedge clk_2f)
      data_out[20] <= _000_[20];
  (* src = "un_striping_synth_synth.v:13" *)
  always @(posedge clk_2f)
      data_out[21] <= _000_[21];
  (* src = "un_striping_synth_synth.v:13" *)
  always @(posedge clk_2f)
      data_out[22] <= _000_[22];
  (* src = "un_striping_synth_synth.v:13" *)
  always @(posedge clk_2f)
      data_out[23] <= _000_[23];
  (* src = "un_striping_synth_synth.v:13" *)
  always @(posedge clk_2f)
      data_out[24] <= _000_[24];
  (* src = "un_striping_synth_synth.v:13" *)
  always @(posedge clk_2f)
      data_out[25] <= _000_[25];
  (* src = "un_striping_synth_synth.v:13" *)
  always @(posedge clk_2f)
      data_out[26] <= _000_[26];
  (* src = "un_striping_synth_synth.v:13" *)
  always @(posedge clk_2f)
      data_out[27] <= _000_[27];
  (* src = "un_striping_synth_synth.v:13" *)
  always @(posedge clk_2f)
      data_out[28] <= _000_[28];
  (* src = "un_striping_synth_synth.v:13" *)
  always @(posedge clk_2f)
      data_out[29] <= _000_[29];
  (* src = "un_striping_synth_synth.v:13" *)
  always @(posedge clk_2f)
      data_out[30] <= _000_[30];
  (* src = "un_striping_synth_synth.v:13" *)
  always @(posedge clk_2f)
      data_out[31] <= _000_[31];
  (* src = "un_striping_synth_synth.v:13" *)
  always @(posedge clk_2f)
      valid_out <= _002_;
  (* src = "un_striping_synth_synth.v:13" *)
  always @(posedge clk_2f)
      selector <= _001_;
endmodule
