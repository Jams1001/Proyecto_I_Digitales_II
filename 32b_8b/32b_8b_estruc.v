/* Generated by Yosys 0.9 (git sha1 1979e0b) */

(* top =  1  *)
(* src = "32b_8b.v:2" *)
module conv_32b_8b_estruc(clk_4f, clk_f, data_in, valid_in, valid_out, data_out);
  (* src = "32b_8b.v:19" *)
  wire [2:0] _000_;
  (* src = "32b_8b.v:19" *)
  wire [7:0] _001_;
  (* src = "32b_8b.v:19" *)
  wire [2:0] _002_;
  (* src = "32b_8b.v:19" *)
  wire [2:0] _003_;
  (* src = "32b_8b.v:19" *)
  wire [2:0] _004_;
  (* src = "32b_8b.v:19" *)
  wire [2:0] _005_;
  (* src = "32b_8b.v:25" *)
  (* unused_bits = "3" *)
  wire [31:0] _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire [2:0] _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire [7:0] _016_;
  wire [7:0] _017_;
  wire [7:0] _018_;
  wire [7:0] _019_;
  (* src = "32b_8b.v:35|<techmap.v>:260|<techmap.v>:203" *)
  (* unused_bits = "2" *)
  wire [31:0] _020_;
  (* src = "32b_8b.v:2" *)
  input clk_4f;
  (* src = "32b_8b.v:3" *)
  input clk_f;
  (* src = "32b_8b.v:10" *)
  reg [2:0] contador;
  (* src = "32b_8b.v:4" *)
  input [31:0] data_in;
  (* src = "32b_8b.v:7" *)
  output [7:0] data_out;
  reg [7:0] data_out;
  (* src = "32b_8b.v:5" *)
  input valid_in;
  (* src = "32b_8b.v:6" *)
  output valid_out;
  reg valid_out;
  assign _007_ = _006_[0] |(* src = "32b_8b.v:28" *)  contador[1];
  assign _013_ = _007_ |(* src = "32b_8b.v:28" *)  contador[2];
  assign _008_ = contador[0] |(* src = "32b_8b.v:33" *)  _012_[1];
  assign _014_ = _008_ |(* src = "32b_8b.v:33" *)  contador[2];
  assign _009_ = _006_[0] |(* src = "32b_8b.v:38" *)  _012_[1];
  assign _015_ = _009_ |(* src = "32b_8b.v:38" *)  contador[2];
  assign _010_ = contador[0] |(* src = "32b_8b.v:23" *)  contador[1];
  assign _011_ = _010_ |(* src = "32b_8b.v:23" *)  contador[2];
  assign _005_[0] = _015_ ? (* src = "32b_8b.v:38" *) contador[0] : 1'h0;
  assign _005_[1] = _015_ ? (* src = "32b_8b.v:38" *) contador[1] : 1'h0;
  assign _005_[2] = _015_ ? (* src = "32b_8b.v:38" *) contador[2] : 1'h0;
  assign _004_[0] = _014_ ? (* src = "32b_8b.v:33" *) _005_[0] : _006_[0];
  assign _004_[1] = _014_ ? (* src = "32b_8b.v:33" *) _005_[1] : _006_[1];
  assign _004_[2] = _014_ ? (* src = "32b_8b.v:33" *) _005_[2] : _006_[2];
  assign _003_[0] = _013_ ? (* src = "32b_8b.v:28" *) _004_[0] : _006_[0];
  assign _003_[1] = _013_ ? (* src = "32b_8b.v:28" *) _004_[1] : _006_[1];
  assign _003_[2] = _013_ ? (* src = "32b_8b.v:28" *) _004_[2] : _006_[2];
  assign _000_[0] = valid_in ? (* src = "32b_8b.v:21" *) _002_[0] : 1'h0;
  assign _000_[1] = valid_in ? (* src = "32b_8b.v:21" *) _002_[1] : 1'h0;
  assign _000_[2] = valid_in ? (* src = "32b_8b.v:21" *) _002_[2] : 1'h0;
  assign _002_[0] = _011_ ? (* src = "32b_8b.v:23" *) _003_[0] : _006_[0];
  assign _002_[1] = _011_ ? (* src = "32b_8b.v:23" *) _003_[1] : _006_[1];
  assign _002_[2] = _011_ ? (* src = "32b_8b.v:23" *) _003_[2] : _006_[2];
  assign _017_[0] = _014_ ? (* src = "32b_8b.v:33" *) _016_[0] : data_in[8];
  assign _017_[1] = _014_ ? (* src = "32b_8b.v:33" *) _016_[1] : data_in[9];
  assign _017_[2] = _014_ ? (* src = "32b_8b.v:33" *) _016_[2] : data_in[10];
  assign _017_[3] = _014_ ? (* src = "32b_8b.v:33" *) _016_[3] : data_in[11];
  assign _017_[4] = _014_ ? (* src = "32b_8b.v:33" *) _016_[4] : data_in[12];
  assign _017_[5] = _014_ ? (* src = "32b_8b.v:33" *) _016_[5] : data_in[13];
  assign _017_[6] = _014_ ? (* src = "32b_8b.v:33" *) _016_[6] : data_in[14];
  assign _017_[7] = _014_ ? (* src = "32b_8b.v:33" *) _016_[7] : data_in[15];
  assign _016_[0] = _015_ ? (* src = "32b_8b.v:38" *) data_out[0] : data_in[0];
  assign _016_[1] = _015_ ? (* src = "32b_8b.v:38" *) data_out[1] : data_in[1];
  assign _016_[2] = _015_ ? (* src = "32b_8b.v:38" *) data_out[2] : data_in[2];
  assign _016_[3] = _015_ ? (* src = "32b_8b.v:38" *) data_out[3] : data_in[3];
  assign _016_[4] = _015_ ? (* src = "32b_8b.v:38" *) data_out[4] : data_in[4];
  assign _016_[5] = _015_ ? (* src = "32b_8b.v:38" *) data_out[5] : data_in[5];
  assign _016_[6] = _015_ ? (* src = "32b_8b.v:38" *) data_out[6] : data_in[6];
  assign _016_[7] = _015_ ? (* src = "32b_8b.v:38" *) data_out[7] : data_in[7];
  assign _018_[0] = _013_ ? (* src = "32b_8b.v:28" *) _017_[0] : data_in[16];
  assign _018_[1] = _013_ ? (* src = "32b_8b.v:28" *) _017_[1] : data_in[17];
  assign _018_[2] = _013_ ? (* src = "32b_8b.v:28" *) _017_[2] : data_in[18];
  assign _018_[3] = _013_ ? (* src = "32b_8b.v:28" *) _017_[3] : data_in[19];
  assign _018_[4] = _013_ ? (* src = "32b_8b.v:28" *) _017_[4] : data_in[20];
  assign _018_[5] = _013_ ? (* src = "32b_8b.v:28" *) _017_[5] : data_in[21];
  assign _018_[6] = _013_ ? (* src = "32b_8b.v:28" *) _017_[6] : data_in[22];
  assign _018_[7] = _013_ ? (* src = "32b_8b.v:28" *) _017_[7] : data_in[23];
  assign _019_[0] = _011_ ? (* src = "32b_8b.v:23" *) _018_[0] : data_in[24];
  assign _019_[1] = _011_ ? (* src = "32b_8b.v:23" *) _018_[1] : data_in[25];
  assign _019_[2] = _011_ ? (* src = "32b_8b.v:23" *) _018_[2] : data_in[26];
  assign _019_[3] = _011_ ? (* src = "32b_8b.v:23" *) _018_[3] : data_in[27];
  assign _019_[4] = _011_ ? (* src = "32b_8b.v:23" *) _018_[4] : data_in[28];
  assign _019_[5] = _011_ ? (* src = "32b_8b.v:23" *) _018_[5] : data_in[29];
  assign _019_[6] = _011_ ? (* src = "32b_8b.v:23" *) _018_[6] : data_in[30];
  assign _019_[7] = _011_ ? (* src = "32b_8b.v:23" *) _018_[7] : data_in[31];
  assign _001_[0] = valid_in ? (* src = "32b_8b.v:21" *) _019_[0] : 1'hx;
  assign _001_[1] = valid_in ? (* src = "32b_8b.v:21" *) _019_[1] : 1'hx;
  assign _001_[2] = valid_in ? (* src = "32b_8b.v:21" *) _019_[2] : 1'hx;
  assign _001_[3] = valid_in ? (* src = "32b_8b.v:21" *) _019_[3] : 1'hx;
  assign _001_[4] = valid_in ? (* src = "32b_8b.v:21" *) _019_[4] : 1'hx;
  assign _001_[5] = valid_in ? (* src = "32b_8b.v:21" *) _019_[5] : 1'hx;
  assign _001_[6] = valid_in ? (* src = "32b_8b.v:21" *) _019_[6] : 1'hx;
  assign _001_[7] = valid_in ? (* src = "32b_8b.v:21" *) _019_[7] : 1'hx;
  (* src = "32b_8b.v:19" *)
  always @(posedge clk_4f)
      contador[0] <= _000_[0];
  (* src = "32b_8b.v:19" *)
  always @(posedge clk_4f)
      contador[1] <= _000_[1];
  (* src = "32b_8b.v:19" *)
  always @(posedge clk_4f)
      contador[2] <= _000_[2];
  (* src = "32b_8b.v:19" *)
  always @(posedge clk_4f)
      valid_out <= valid_in;
  (* src = "32b_8b.v:19" *)
  always @(posedge clk_4f)
      data_out[0] <= _001_[0];
  (* src = "32b_8b.v:19" *)
  always @(posedge clk_4f)
      data_out[1] <= _001_[1];
  (* src = "32b_8b.v:19" *)
  always @(posedge clk_4f)
      data_out[2] <= _001_[2];
  (* src = "32b_8b.v:19" *)
  always @(posedge clk_4f)
      data_out[3] <= _001_[3];
  (* src = "32b_8b.v:19" *)
  always @(posedge clk_4f)
      data_out[4] <= _001_[4];
  (* src = "32b_8b.v:19" *)
  always @(posedge clk_4f)
      data_out[5] <= _001_[5];
  (* src = "32b_8b.v:19" *)
  always @(posedge clk_4f)
      data_out[6] <= _001_[6];
  (* src = "32b_8b.v:19" *)
  always @(posedge clk_4f)
      data_out[7] <= _001_[7];
  assign _006_[0] = contador[0] ^(* src = "32b_8b.v:38" *)  1'h1;
  assign _012_[1] = contador[1] ^(* src = "32b_8b.v:38" *)  1'h1;
  assign _006_[1] = contador[1] ^(* src = "32b_8b.v:35|<techmap.v>:263" *)  contador[0];
  assign _006_[2] = contador[2] ^(* src = "32b_8b.v:35|<techmap.v>:263" *)  _020_[1];
  assign _020_[1] = contador[1] &(* src = "32b_8b.v:35|<techmap.v>:260|<techmap.v>:221" *)  contador[0];
  assign _006_[31:4] = 28'h0000000;
  assign { _012_[2], _012_[0] } = { contador[2], contador[0] };
  assign { _020_[31:2], _020_[0] } = { 29'h00000000, _006_[3], contador[0] };
endmodule
